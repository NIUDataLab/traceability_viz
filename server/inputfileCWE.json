{
    "data": [
        {
            "name": "422",
            "value": {
                "id": "422",
                "name": "Unprotected Windows Messaging Channel ('Shatter')",
                "description": "The product does not properly verify the source of a message in the Windows Messaging System while running at elevated privileges, creating an alternate channel through which an attacker can directly send a message to the product.",
                "extended_description": "",
                "child_of": [
                    "420",
                    "360"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1085",
            "value": {
                "id": "1085",
                "name": "Invokable Control Element with Excessive Volume of Commented-out Code",
                "description": "A function, method, procedure, etc. contains an excessive amount of code that has been commented out within its body.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability . interpretation \" excessive volume \" may vary product or developer , cisq recommend default threshold 2 % comment code .",
                "child_of": [
                    "1078"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "834",
            "value": {
                "id": "834",
                "name": "Excessive Iteration",
                "description": "The product performs an iteration or loop without sufficiently limiting the number of times that the loop is executed.",
                "extended_description": " iteration can be influence attacker , weakness could allow attacker to consume excessive resource such cpu or memory . many case , loop do not need to be infinite order to cause enough resource consumption to adversely affect product or host system ; depend amount resource consume iteration .",
                "child_of": [
                    "691"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : amplification",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " excessive looping will cause unexpected consumption resource , such cpu cycle or memory . product 's operation may slow down , or cause long time to respond . limit resource such memory be consume iteration , loop may eventually cause crash or program exit exhaustion resource , such out - - memory error .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "923",
            "value": {
                "id": "923",
                "name": "Improper Restriction of Communication Channel to Intended Endpoints",
                "description": "The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.",
                "extended_description": " attacker might be able to spoof intend endpoint different system or process , thus gain same level access intend endpoint . issue frequently involve authentication network - base client and server , other type communication channel and endpoint can have weakness .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " attacker can spoof endpoint , attacker gain all privilege be intend original endpoint .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "74",
            "value": {
                "id": "74",
                "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
                "description": "The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",
                "extended_description": " software or other automate logic have certain assumption constitute datum and control respectively . be lack verification assumption user - control input lead injection problem . injection problem encompass wide variety issue -- mitigate very different way and usually attempt order to alter control flow process . reason , most effective way to discuss weakness be to note distinct feature classify injection weakness . most important issue to note be injection problem share one thing common -- i.e. , allow injection control plane datum user - control data plane . mean execution process may be alter send code in legitimate datum channel , use other mechanism . buffer overflow , and many other flaw , involve use further issue to gain execution , injection problem need only datum to be parse .",
                "child_of": [
                    "707"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control",
                    " other",
                    " integrity",
                    " other",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " read application data",
                    " bypass protection mechanism",
                    " alter execution logic",
                    " other",
                    " hide activity"
                ],
                "con_note": " often action perform inject control code be unlogged .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "426",
            "value": {
                "id": "426",
                "name": "Untrusted Search Path",
                "description": "The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.",
                "extended_description": " might allow attacker to execute own program , access unauthorized datum file , or modify configuration unexpected way . product use search path to locate critical resource such program , then attacker could modify search path to point malicious program , targeted product would then execute . problem extend type critical resource product trust . most common variant untrusted search path be : various unix and linux - base system , path environment variable may be consult to locate executable program , and ld_preload may be use to locate separate library . various microsoft - base system , path environment variable be consult to locate dll , dll be not find other path appear early search order .",
                "child_of": [
                    "642",
                    "673"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control",
                    " availability",
                    " confidentiality"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " execute unauthorized code or command",
                    " dos : crash , exit , or restart",
                    " read files or directory"
                ],
                "con_note": " program could send output unauthorized file attacker .",
                "alt_term": [
                    " untrusted path"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "190",
            "value": {
                "id": "190",
                "name": "Integer Overflow or Wraparound",
                "description": "The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",
                "extended_description": " integer overflow or wraparound occur when integer value be incremente value be too large to store associated representation . when occur , value may wrap to become very small or negative number . may be intend behavior circumstance rely wrapping , can have security consequence wrap be unexpected . be especially case integer overflow can be trigger use user - supply input . become security - critical when result be use to control looping , make security decision , or determine offset or size behavior such memory allocation , copying , concatenation , etc .",
                "child_of": [
                    "682"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : instability",
                    " modify memory",
                    " execute unauthorized code or command",
                    " bypass protection mechanism"
                ],
                "con_note": " weakness can sometimes trigger buffer overflow can be use to execute arbitrary code . be usually scope program 's implicit security policy .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "830",
            "value": {
                "id": "830",
                "name": "Inclusion of Web Functionality from an Untrusted Source",
                "description": "The product includes web functionality (such as a web widget) from another domain, which causes it to operate within the domain of the product, potentially granting total access and control of the product to the untrusted source.",
                "extended_description": " include third party functionality web - base environment be risky , especially source functionality be untrusted . even third party be trust source , product may still be expose attack and malicious behavior trust source be compromise , or code be modify transmission third party product . weakness be common \" mashup \" development web , may include source functionality other domain . example , javascript - base web widget may be insert use ' < script src=\"http://other.domain.here \" > ' tag , cause code to run domain product , not remote site widget be load . result , include code have access local dom , include cookie and other datum developer might not want remote site to be able to access . such dependency may be desirable , or even require , but sometimes programmer be not aware dependency exist .",
                "child_of": [
                    "829"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1260",
            "value": {
                "id": "1260",
                "name": "Improper Handling of Overlap Between Protected Memory Ranges",
                "description": "The product allows address regions to overlap, which can result in the bypassing of intended memory protection.",
                "extended_description": " isolated memory region and access control ( read / write ) policy be use hardware to protect privileged software . software component be often allow to change or remap memory region definition order to enable flexible and dynamically changeable memory management system software . software component run low privilege can program memory address region to overlap other memory region use software run high privilege , privilege escalation may be available attacker . memory protection unit ( mpu ) logic can incorrectly handle such address overlap and allow low - privilege software to read or write protect memory region , result privilege escalation attack . address overlap weakness can also be use to launch denial service attack high - privilege software memory region .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " dos : instability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "128",
            "value": {
                "id": "128",
                "name": "Wrap-around Error",
                "description": "Wrap around errors occur whenever a value is incremented past the maximum value for its type and therefore \"wraps around\" to a very small, negative, or undefined value.",
                "extended_description": "",
                "child_of": [
                    "682"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : instability",
                    " modify memory",
                    " execute unauthorized code or command",
                    " bypass protection mechanism"
                ],
                "con_note": " weakness can sometimes trigger buffer overflow can be use to execute arbitrary code . be usually scope program 's implicit security policy .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "8",
            "value": {
                "id": "8",
                "name": "J2EE Misconfiguration: Entity Bean Declared Remote",
                "description": "When an application exposes a remote interface for an entity bean, it might also expose methods that get or set the bean's data. These methods could be leveraged to read sensitive information, or to change data in ways that violate the application's expectations, potentially leading to other vulnerabilities.",
                "extended_description": "",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "829",
            "value": {
                "id": "829",
                "name": "Inclusion of Functionality from Untrusted Control Sphere",
                "description": "The product imports, requires, or includes executable functionality (such as a library) from a source that is outside of the intended control sphere.",
                "extended_description": " when include third - party functionality , such web widget , library , or other source functionality , product must effectively trust functionality . sufficient protection mechanism , functionality could be malicious nature ( either come untrusted source , be spoof , or be modify transit trust source ) . functionality might also contain own weakness , or grant access additional functionality and state information should be keep private base system , such system state information , sensitive application datum , or dom web application . might lead many different consequence depend include functionality , but example include injection malware , information exposure grant excessive privilege or permission untrusted functionality , dom - base xss vulnerability , steal user 's cookie , or open redirect malware ( cwe-601 ) .",
                "child_of": [
                    "669"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": " attacker could insert malicious functionality program cause program to download code attacker have place untrusted control sphere , such malicious web site .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "447",
            "value": {
                "id": "447",
                "name": "Unimplemented or Unsupported Feature in UI",
                "description": "A UI function for a security feature appears to be supported and gives feedback to the user that suggests that it is supported, but the underlying functionality is not implemented.",
                "extended_description": "",
                "child_of": [
                    "446",
                    "671"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "262",
            "value": {
                "id": "262",
                "name": "Not Using Password Aging",
                "description": "The product does not have a mechanism in place for managing password aging.",
                "extended_description": " password aging ( or password rotation ) be policy force user to change password define time period pass , such 30 or 90 day . mechanism such age , user might not change password timely manner . note password aging be once consider important security feature , have fall favor many , be not as effective modern threat compare other mechanism such slow hash . addition , force frequent change can unintentionally encourage user to select less - secure password . however , password aging be still use factor such compliance requirement , e.g. , payment card industry data security standard ( pci dss ) .",
                "child_of": [
                    "1390"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " password age , probability be compromise grow .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "841",
            "value": {
                "id": "841",
                "name": "Improper Enforcement of Behavioral Workflow",
                "description": "The product supports a session in which more than one behavior must be performed by an actor, but it does not properly ensure that the actor performs the behaviors in the required sequence.",
                "extended_description": " perform action unexpected order , or omit step , attacker could manipulate business logic product or cause to enter invalid state . case , can also expose resultant weakness . example , file - share protocol might require actor perform separate step to provide username , then password , be able to transfer file . file - share server accept password command follow transfer command , username be provide , product might still perform transfer . note be different cwe-696 , focus when product perform action wrong sequence ; entry be closely relate , but be focus ensure actor perform action correct sequence . workflow - relate behavior include : step be perform expected order . required step be not omit . step be not interrupt . step be perform timely fashion .",
                "child_of": [
                    "691"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " alter execution logic"
                ],
                "con_note": " attacker could cause product to skip critical step or perform wrong order , bypass intend business logic . can sometimes have security implication .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "457",
            "value": {
                "id": "457",
                "name": "Use of Uninitialized Variable",
                "description": "The code uses a variable that has not been initialized, leading to unpredictable or unintended results.",
                "extended_description": " language such c and c++ , stack variable be not initialize default . generally contain junk datum content stack memory function be invoke . attacker can sometimes control or read content . other language or condition , variable be not explicitly initialize can be give default value have security implication , depend logic program . presence uninitialized variable can sometimes indicate typographic error code .",
                "child_of": [
                    "908"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " other",
                    " authorization",
                    " other"
                ],
                "con_impacts": [
                    " other",
                    " other"
                ],
                "con_note": " string be not initialize be especially dangerous , many function expect null end -- and only end -- string .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "681",
            "value": {
                "id": "681",
                "name": "Incorrect Conversion between Numeric Types",
                "description": "When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",
                "extended_description": "",
                "child_of": [
                    "704"
                ],
                "con_scope": [
                    " other",
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state",
                    " quality degradation"
                ],
                "con_note": " program could wind up use wrong number and generate incorrect result . number be use to allocate resource or make security decision , then could introduce vulnerability .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1386",
            "value": {
                "id": "1386",
                "name": "Insecure Operation on Windows Junction/ Mount Point",
                "description": "The product opens a file or directory, but it does not properly prevent the name from being associated with a junction or mount point to a destination that is outside of the intended control sphere.",
                "extended_description": " depend intend action \n\t\t\t   be perform , could allow \n\t\t\t   attacker to cause product to read , \n\t\t\t   write , delete , or otherwise operate \n\t\t\t   unauthorized file . windows , ntfs5 allow file \n\t\t\t   system object call reparse point . \n\t\t\t   application can create hard link one \n\t\t\t   directory directory , call \n\t\t\t   junction point . can also create \n\t\t\t   mapping directory drive letter , \n\t\t\t   call mount point . file be use \n\t\t\t   privileged program , but can be replace \n\t\t\t   hard link sensitive file ( e.g. , \n\t\t\t   autoexec.bat ) , attacker could excalate \n\t\t\t   privilege . when process open file , \n\t\t\t   attacker can assume privilege \n\t\t\t   process , trick privileged \n\t\t\t   process to read , modify , or delete \n\t\t\t   sensitive file , prevent program \n\t\t\t   accurately process datum . note one \n\t\t\t   can also point registry and \n\t\t\t   semaphore .",
                "child_of": [
                    "59"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory",
                    " modify files or directory"
                ],
                "con_note": " even be control content , arbitrary file delete or overwrite ( when run system or admin ) can be use permanent system denial - - service , e.g. delete startup configuration file prevent service start .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1276",
            "value": {
                "id": "1276",
                "name": "Hardware Child Block Incorrectly Connected to Parent System",
                "description": "Signals between a hardware IP and the parent system design are incorrectly connected causing security risks.",
                "extended_description": " individual hardware ip must communicate parent system order product to function correctly and intend . implement incorrectly , not cause apparent functional issue , may cause security issue . example , ip should only be reset system - wide hard reset , but instead reset input be connect software - trigger debug mode reset ( be also assert hard reset ) , integrity datum ip can be violate .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "675",
            "value": {
                "id": "675",
                "name": "Multiple Operations on Resource in Single-Operation Context",
                "description": "The product performs the same operation on a resource two or more times, when the operation should only be applied once.",
                "extended_description": "",
                "child_of": [
                    "573"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "541",
            "value": {
                "id": "541",
                "name": "Inclusion of Sensitive Information in an Include File",
                "description": "If an include file source is accessible, the file can contain usernames and passwords, as well as sensitive information pertaining to the application and system.",
                "extended_description": "",
                "child_of": [
                    "540"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "300",
            "value": {
                "id": "300",
                "name": "Channel Accessible by Non-Endpoint",
                "description": "The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.",
                "extended_description": " order to establish secure communication two party , be often important to adequately verify identity entity end communication channel . inadequate or inconsistent verification may result insufficient or incorrect identification either communicate entity . can have negative consequence such misplaced trust entity other end channel . attacker can leverage interpose communicate entity and masquerade original entity . absence sufficient verification identity , such attacker can eavesdrop and potentially modify communication original entity .",
                "child_of": [
                    "923"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data",
                    " gain privileges or assume identity"
                ],
                "con_note": " attacker could pose one entity and read or possibly modify communication .",
                "alt_term": [
                    " adversary - - - middle / aitm",
                    " man - - - middle / mitm",
                    " person - - - middle / pitm",
                    " monkey - - - middle",
                    " monster - - - middle",
                    " - path attack",
                    " interception attack"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "439",
            "value": {
                "id": "439",
                "name": "Behavioral Change in New Version or Environment",
                "description": "A's behavior or functionality changes with a new version of A, or a new environment, which is not known (or manageable) by B.",
                "extended_description": "",
                "child_of": [
                    "435"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [
                    " functional change"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "689",
            "value": {
                "id": "689",
                "name": "Permission Race Condition During Resource Copy",
                "description": "The product, while copying or cloning a resource, does not set the resource's permissions or access control until the copy is complete, leaving the resource exposed to other spheres while the copy is taking place.",
                "extended_description": "",
                "child_of": [
                    "362"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1121",
            "value": {
                "id": "1121",
                "name": "Excessive McCabe Cyclomatic Complexity",
                "description": "The code contains McCabe cyclomatic complexity that exceeds a desirable maximum.",
                "extended_description": " issue make more difficult to understand and/or maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1120"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1289",
            "value": {
                "id": "1289",
                "name": "Improper Validation of Unsafe Equivalence in Input",
                "description": "The product receives an input value that is used as a resource identifier or other type of reference, but it does not validate or incorrectly validates that the input is equivalent to a potentially-unsafe value.",
                "extended_description": " attacker can sometimes bypass input validation scheme find input appear to be safe , but will be dangerous when process low layer or downstream component .   example , simple xss protection mechanism might try to validate input have \" < script > \" tag use case - sensitive matching , but html be case - insensitive when process web browser , attacker could inject \" < script > \" and trigger xss .",
                "child_of": [
                    "20"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "316",
            "value": {
                "id": "316",
                "name": "Cleartext Storage of Sensitive Information in Memory",
                "description": "The product stores sensitive information in cleartext in memory.",
                "extended_description": " sensitive memory might be save disk , store core dump , or remain uncleared product crash , or programmer do not properly clear memory free . could be argue such problem be usually only exploitable administrator privilege . however , swap could cause memory to be write disk and leave accessible physical attack afterwards . core dump file might have insecure permission or be store archive file be accessible untrusted people . or , uncleared sensitive memory might be inadvertently expose attacker due weakness .",
                "child_of": [
                    "312"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read memory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "86",
            "value": {
                "id": "86",
                "name": "Improper Neutralization of Invalid Characters in Identifiers in Web Pages",
                "description": "The product does not neutralize or incorrectly neutralizes invalid characters or byte sequences in the middle of tag names, URI schemes, and other identifiers.",
                "extended_description": " web browser may remove sequence , result output may have unintende control implication . example , product may attempt to remove \" javascript : \" uri scheme , but \" java%00script : \" uri may bypass check and still be render active javascript browser , allow xss or other attack .",
                "child_of": [
                    "79",
                    "436"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " read application data",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "382",
            "value": {
                "id": "382",
                "name": "J2EE Bad Practices: Use of System.exit()",
                "description": "A J2EE application uses System.exit(), which also shuts down its container.",
                "extended_description": " be never good idea web application to attempt to shut down application container . access function can shut down application be avenue denial service ( dos ) attack .",
                "child_of": [
                    "705"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1007",
            "value": {
                "id": "1007",
                "name": "Insufficient Visual Distinction of Homoglyphs Presented to User",
                "description": "The product displays information or identifiers to a user, but the display mechanism does not make it easy for the user to distinguish between visually similar or identical glyphs (homoglyphs), which may cause the user to misinterpret a glyph and perform an unintended, insecure action.",
                "extended_description": " glyph , picture , or icon can be semantically distinct program , appear very similar or identical human user . be refer homoglyph . example , lowercase \" l \" ( ell ) and uppercase \" \" ( eye ) have different character code , but character can be display exactly same way user , depend font . can also occur different character set . example , latin capital letter \" a \" and greek capital letter \" \u0391 \" ( alpha ) be treat distinct program , but may be display exactly same way user . accent mark may also cause letter to appear very similar , such latin capital letter grave mark \" \u00c0 \" and equivalent \" \u00c1 \" acute accent . adversary can exploit visual similarity attack such phishing , e.g. provide link attacker - control hostname look hostname victim trust . different use homoglyph , adversary may create back door username be visually similar username regular user , then make more difficult system administrator to detect malicious username review log .",
                "child_of": [
                    "451"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": " attacker may ultimately redirect user malicious website , deceive user believe url be access be trusted domain . however , attack can also be use to forge log entry use homoglyph username . homoglyph manipulation be often first step execute advanced attack such steal user 's credential , cross - site scripting ( xss ) , or log forgery . attacker redirect user malicious site , attacker can mimic trust domain to steal account credential and perform action behalf user , user 's knowledge . similarly , attacker could create username website contain homoglyph character , make difficult admin to review log and determine user perform which action .",
                "alt_term": [
                    " homograph attack"
                ],
                "alt_desc": [
                    " \" homograph \" be often use synonym \" homoglyph \" researcher , but accord wikipedia , homograph be word have multiple , distinct meaning ."
                ]
            }
        },
        {
            "name": "1187",
            "value": {
                "id": "1187",
                "name": "DEPRECATED: Use of Uninitialized Resource",
                "description": "This entry has been deprecated because it was a duplicate ofCWE-908. All content has been transferred toCWE-908.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "358",
            "value": {
                "id": "358",
                "name": "Improperly Implemented Security Check for Standard",
                "description": "The product does not implement or incorrectly implements one or more security-relevant checks as specified by the design of a standardized algorithm, protocol, or technique.",
                "extended_description": "",
                "child_of": [
                    "573",
                    "693"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1233",
            "value": {
                "id": "1233",
                "name": "Security-Sensitive Hardware Controls with Missing Lock Bit Protection",
                "description": "The product uses a register lock bit protection mechanism, but it does not ensure that the lock bit prevents modification of system registers or controls that perform changes to important hardware system configuration.",
                "extended_description": " integrated circuit and hardware intellectual property ( ips ) might provide device configuration control need to be program device power reset trust firmware or software module , commonly set bios / bootloader . reset , can be expectation control can not be use to perform further modification . behavior be commonly implement use trust lock bit , can be set disable write protect set register or address region . lock protection be intend to prevent modification certain system configuration ( e.g. , memory / memory protection unit configuration).however , lock bit do not effectively write - protect system register or control could modify protect system configuration , then adversary may be able to use software to access register / control and modify protect hardware configuration .",
                "child_of": [
                    "284",
                    "667"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " modify memory"
                ],
                "con_note": " system configuration protect lock bit can be modify even when lock be set .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "208",
            "value": {
                "id": "208",
                "name": "Observable Timing Discrepancy",
                "description": "Two separate operations in a product require different amounts of time to complete, in a way that is observable to an actor and reveals security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
                "extended_description": " security - relevant context , even small variation timing can be exploit attacker to indirectly infer certain detail product 's internal operation .   example , cryptographic algorithm , attacker can use timing difference to infer certain property private key , make key easy to guess .   timing discrepancy effectively form timing side channel . \n\t ",
                "child_of": [
                    "203"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "587",
            "value": {
                "id": "587",
                "name": "Assignment of a Fixed Address to a Pointer",
                "description": "The product sets a pointer to a specific address other than NULL or 0.",
                "extended_description": " use fix address be not portable , address will probably not be valid environment or platform .",
                "child_of": [
                    "344",
                    "758"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " availability",
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " dos : crash , exit , or restart",
                    " reduce maintainability",
                    " reduce reliability",
                    " read memory",
                    " modify memory"
                ],
                "con_note": " datum known pointer location can be easily read or influence attacker .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "108",
            "value": {
                "id": "108",
                "name": "Struts: Unvalidated Action Form",
                "description": "Every Action Form must have a corresponding validation form.",
                "extended_description": " struts action form mapping specify form , must have validation form define struts validator .",
                "child_of": [
                    "1173"
                ],
                "con_scope": [
                    " other",
                    " confidentiality",
                    " integrity",
                    " availability",
                    " other"
                ],
                "con_impacts": [
                    " other",
                    " other"
                ],
                "con_note": " j2ee application be not generally susceptible memory corruption attack , j2ee application interface native code do not perform array bound check , attacker may be able to use input validation mistake j2ee application to launch buffer overflow attack .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "135",
            "value": {
                "id": "135",
                "name": "Incorrect Calculation of Multi-Byte String Length",
                "description": "The product does not correctly calculate the length of strings that can contain wide or multi-byte characters.",
                "extended_description": "",
                "child_of": [
                    "682"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " availability",
                    " confidentiality",
                    " confidentiality"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " read memory",
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " read memory"
                ],
                "con_note": " case out - - bound read , attacker may have access sensitive information . sensitive information contain system detail , such current buffer position memory , knowledge can be use to craft further attack , possibly more severe consequence .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "197",
            "value": {
                "id": "197",
                "name": "Numeric Truncation Error",
                "description": "Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.",
                "extended_description": " when primitive be cast small primitive , high order bit large value be lose conversion , potentially result unexpected value be not equal original value . value may be require index buffer , loop iterator , or simply necessary state datum . case , value can not be trust and system will be undefined state . method may be employ viably to isolate low bit value , usage be rare , and truncation usually imply implementation error have occur .",
                "child_of": [
                    "681"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify memory"
                ],
                "con_note": " true value datum be lose and corrupt datum be use .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "597",
            "value": {
                "id": "597",
                "name": "Use of Wrong Operator in String Comparison",
                "description": "The product uses the wrong operator when comparing a string, such as using \"==\" when the .equals() method should be used instead.",
                "extended_description": " java , use = = or ! = to compare two string equality actually compare two object equality rather string value equality . chance be good two reference will never be equal . weakness often only affect program correctness , equality be use security decision , unintended comparison result could be leverage to affect program security .",
                "child_of": [
                    "595",
                    "480"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "663",
            "value": {
                "id": "663",
                "name": "Use of a Non-reentrant Function in a Concurrent Context",
                "description": "The product calls a non-reentrant function in a concurrent context in which a competing code sequence (e.g. thread or signal handler) may have an opportunity to call the same function or otherwise influence its state.",
                "extended_description": "",
                "child_of": [
                    "662"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " other"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " modify application data",
                    " read application data",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "353",
            "value": {
                "id": "353",
                "name": "Missing Support for Integrity Check",
                "description": "The product uses a transmission protocol that does not include a mechanism for verifying the integrity of the data during transmission, such as a checksum.",
                "extended_description": " integrity check value or \" checksum \" be omit protocol , be way determine datum have be corrupt transmission . lack checksum functionality protocol remove first application - level check datum can be use . end - - end philosophy check state integrity check should be perform low level can be completely implement . exclude further sanity check and input validation perform application , protocol 's checksum be most important level checksum , can be perform more completely previous level and take account entire message , oppose single packet .",
                "child_of": [
                    "345"
                ],
                "con_scope": [
                    " integrity",
                    " other",
                    " non - repudiation",
                    " other"
                ],
                "con_impacts": [
                    " other",
                    " hide activity",
                    " other"
                ],
                "con_note": " checksum be impossible to determine change have be make datum be send .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1125",
            "value": {
                "id": "1125",
                "name": "Excessive Attack Surface",
                "description": "The product has an attack surface whose quantitative measurement exceeds a desirable maximum.",
                "extended_description": " originate software security , \" attack surface \" measure typically reflect number input point and output point can be utilize untrusted party , i.e. potential attacker . large attack surface provide more place to attack , and more opportunity developer to introduce weakness .   case , measure may reflect other aspect quality security ; e.g. , product many input and output may require large number test order to improve code coverage .",
                "child_of": [
                    "1120"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "314",
            "value": {
                "id": "314",
                "name": "Cleartext Storage in the Registry",
                "description": "The product stores sensitive information in cleartext in the registry.",
                "extended_description": " attacker can read information access registry key . even information be encode way be not human - readable , certain technique could determine which encoding be be use , then decode information .",
                "child_of": [
                    "312"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "685",
            "value": {
                "id": "685",
                "name": "Function Call With Incorrect Number of Arguments",
                "description": "The product calls a function, procedure, or routine, but the caller specifies too many arguments, or too few arguments, which may lead to undefined behavior and resultant weaknesses.",
                "extended_description": "",
                "child_of": [
                    "628"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1061",
            "value": {
                "id": "1061",
                "name": "Insufficient Encapsulation",
                "description": "The product does not sufficiently hide the internal representation and implementation details of data or methods, which might allow external components or modules to modify data unexpectedly, invoke unexpected functionality, or introduce dependencies that the programmer did not intend.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "710"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1235",
            "value": {
                "id": "1235",
                "name": "Incorrect Use of Autoboxing and Unboxing for Performance Critical Operations",
                "description": "The code uses boxed primitives, which may introduce inefficiencies into performance-critical operations.",
                "extended_description": " language such java and c # support automatic conversion respective compiler primitive type object correspond wrapper class , and vice versa . example , compiler might convert int integer ( call autoboxe ) or integer to int ( call unbox ) . eliminate force programmer to perform conversion manually , make code cleaner . however , feature come cost performance and can lead resource exhaustion and impact availability when use generic collection . therefore , should not be use scientific computing or other performance critical operation . be only suit to support \" impedance mismatch \" reference type and primitive .",
                "child_of": [
                    "400"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : resource consumption ( other )",
                    " reduce performance"
                ],
                "con_note": " incorrect autoboxe / unbox would result reduce performance , sometimes can lead resource consumption issue .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "146",
            "value": {
                "id": "146",
                "name": "Improper Neutralization of Expression/Command Delimiters",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as expression or command delimiters when they are sent to a downstream component.",
                "extended_description": " datum be parse , inject / absent / malforme delimiter may cause process to take unexpected action .",
                "child_of": [
                    "140"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " other"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "921",
            "value": {
                "id": "921",
                "name": "Storage of Sensitive Data in a Mechanism without Access Control",
                "description": "The product stores sensitive information in a file system or device that does not have built-in access control.",
                "extended_description": " many modern file system or device utilize form access control order to restrict access datum , not storage mechanism have capability . example , memory card , floppy disk , cd , and usb device be typically make accessible user system . can become problem when sensitive datum be store mechanism multi - user environment , system can read or write datum . android device , external storage be typically globally readable and writable other application device . external storage may also be easily accessible mobile device 's usb connection or physically accessible device 's memory card port .",
                "child_of": [
                    "922"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " read files or directory",
                    " modify application data",
                    " modify files or directory"
                ],
                "con_note": " attacker can modify or delete sensitive information access unrestricted storage mechanism .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1086",
            "value": {
                "id": "1086",
                "name": "Class with Excessive Number of Child Classes",
                "description": "A class contains an unnecessarily large number of children.",
                "extended_description": " issue make more difficult to understand and maintain software , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability . interpretation \" large number child \" may vary product or developer , cisq recommend default maximum 10 child class .",
                "child_of": [
                    "1093"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "290",
            "value": {
                "id": "290",
                "name": "Authentication Bypass by Spoofing",
                "description": "This attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks.",
                "extended_description": "",
                "child_of": [
                    "1390"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": " weakness can allow attacker access resource be not otherwise accessible proper authentication .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "476",
            "value": {
                "id": "476",
                "name": "NULL Pointer Dereference",
                "description": "A NULL pointer dereference occurs when the application dereferences a pointer that it expects to be valid, but is NULL, typically causing a crash or exit.",
                "extended_description": " null pointer dereference issue can occur number flaw , include race condition , and simple programming omission .",
                "child_of": [
                    "710",
                    "754"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command",
                    " read memory",
                    " modify memory"
                ],
                "con_note": " rare circumstance , when null be equivalent 0x0 memory address and privileged code can access , then write or reading memory be possible , may lead code execution .",
                "alt_term": [
                    " npd",
                    " null deref",
                    " nil pointer dereference"
                ],
                "alt_desc": [
                    " use access nil go program"
                ]
            }
        },
        {
            "name": "621",
            "value": {
                "id": "621",
                "name": "Variable Extraction Error",
                "description": "The product uses external input to determine the names of variables into which information is extracted, without verifying that the names of the specified variables are valid. This could cause the program to overwrite unintended variables.",
                "extended_description": " example , php , extraction can be use to provide functionality similar register_global , dangerous functionality be frequently disabled production system . call extract ( ) or import_request_variables ( ) proper argument could allow arbitrary global variable to be overwrite , include superglobal . similar functionality be possible other interpret language , include custom language .",
                "child_of": [
                    "914"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data"
                ],
                "con_note": " attacker could modify sensitive datum or program variable .",
                "alt_term": [
                    " variable overwrite"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "550",
            "value": {
                "id": "550",
                "name": "Server-generated Error Message Containing Sensitive Information",
                "description": "Certain conditions, such as network failure, will cause a server error message to be displayed.",
                "extended_description": " error message and be not dangerous , per se , be attacker can glean might cause eventual problem .",
                "child_of": [
                    "209"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1342",
            "value": {
                "id": "1342",
                "name": "Information Exposure through Microarchitectural State after Transient Execution",
                "description": "The processor does not properly clear microarchitectural state after incorrect microcode assists or speculative execution, resulting in transient execution.",
                "extended_description": " many processor architecture exception , mis - speculation , or microcode assist result flush operation clear result be no long require . action prevent result influence architectural state be intend to be visible software . however , trace transient execution may remain microarchitectural buffer , result change microarchitectural state can expose sensitive information attacker use side - channel analysis . example , load value injection ( lvi ) [ ref-1202 ] can exploit direct injection erroneous value intermediate load and store buffer . several condition may need to be fulfil successful attack:1 ) incorrect transient execution result remanence sensitive information;2 ) attacker have ability to provoke microarchitectural exceptions;3 ) operation and structure victim code can be exploit must be identify .",
                "child_of": [
                    "226"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "843",
            "value": {
                "id": "843",
                "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
                "description": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.",
                "extended_description": " when product access resource use incompatible type , could trigger logical error resource do not have expect property . language memory safety , such c and c++ , type confusion can lead out - - bound memory access . weakness be frequently associate union when parse datum many different embed object type c , can be present application can interpret same variable or memory location multiple way . weakness be not unique c and c++ . example , error php application can be trigger provide array parameter when scalar be expect , or vice versa . language such perl , perform automatic conversion variable one type when be access be type , can also contain issue .",
                "child_of": [
                    "704"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " read memory",
                    " modify memory",
                    " execute unauthorized code or command",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " when memory buffer be access use wrong type , could read or write memory bound buffer , allocate buffer be small type code be attempt to access , lead crash and possibly code execution .",
                "alt_term": [
                    " object type confusion"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "66",
            "value": {
                "id": "66",
                "name": "Improper Handling of File Names that Identify Virtual Resources",
                "description": "The product does not handle or incorrectly handles a file name that identifies a \"virtual\" resource that is not directly specified within the directory that is associated with the file name, causing the product to perform file-based operations on a resource that is not a file.",
                "extended_description": " virtual file name be represent normal file name , but be effectively alias other resource do not behave normal file . depend functionality , could be alternate entity . be not necessarily list directory .",
                "child_of": [
                    "706"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "403",
            "value": {
                "id": "403",
                "name": "Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak')",
                "description": "A process does not close sensitive file descriptors before invoking a child process, which allows the child to perform unauthorized I/O operations using those descriptors.",
                "extended_description": " when new process be fork or execute , child process inherit open file descriptor . when child process have few privilege parent process , might introduce vulnerability child process can access file descriptor but do not have privilege to access associated file .",
                "child_of": [
                    "402"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [
                    " file descriptor leak"
                ],
                "alt_desc": [
                    " issue be frequently call file descriptor leak , \" leak \" term be often use two different way - exposure resource , or consumption resource . use term could cause confusion ."
                ]
            }
        },
        {
            "name": "561",
            "value": {
                "id": "561",
                "name": "Dead Code",
                "description": "The product contains dead code, which can never be executed.",
                "extended_description": " dead code be code can never be execute running program . surround code make impossible section code to ever be execute .",
                "child_of": [
                    "1164"
                ],
                "con_scope": [
                    " other",
                    " other"
                ],
                "con_impacts": [
                    " quality degradation",
                    " reduce maintainability"
                ],
                "con_note": " dead code result code can never be execute be indication problem source code need to be fix and be indication poor quality .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "579",
            "value": {
                "id": "579",
                "name": "J2EE Bad Practices: Non-serializable Object Stored in Session",
                "description": "The product stores a non-serializable object as an HttpSession attribute, which can hurt reliability.",
                "extended_description": " j2ee application can make use multiple jvm order to improve application reliability and performance . order to make multiple jvm appear single application end user , j2ee container can replicate httpsession object multiple jvm one jvm become unavailable can step in and take place disrupt flow application . be only possible session datum be serializable , allow session to be duplicate jvm .",
                "child_of": [
                    "573"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "408",
            "value": {
                "id": "408",
                "name": "Incorrect Behavior Order: Early Amplification",
                "description": "The product allows an entity to perform a legitimate but expensive operation before authentication or authorization has taken place.",
                "extended_description": "",
                "child_of": [
                    "405",
                    "696"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : amplification",
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )"
                ],
                "con_note": " system resource , cpu and memory , can be quickly consume . can lead poor system performance or system crash .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "180",
            "value": {
                "id": "180",
                "name": "Incorrect Behavior Order: Validate Before Canonicalize",
                "description": "The product validates input before it is canonicalized, which prevents the product from detecting data that becomes invalid after the canonicalization step.",
                "extended_description": " can be use attacker to bypass validation and launch attack expose weakness would otherwise be prevent , such injection .",
                "child_of": [
                    "179"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "530",
            "value": {
                "id": "530",
                "name": "Exposure of Backup File to an Unauthorized Control Sphere",
                "description": "A backup file is stored in a directory or archive that is made accessible to unauthorized actors.",
                "extended_description": " often , old backup file be rename extension such .~bk to distinguish production file . source code old file have be rename manner and leave webroot can often be retrieve . renaming may have be perform automatically web server , or manually administrator .",
                "child_of": [
                    "552"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " minimum , attacker retrieve file would have all information contain , be database call , format parameter accept application , or simply information regard architectural structure site .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "317",
            "value": {
                "id": "317",
                "name": "Cleartext Storage of Sensitive Information in GUI",
                "description": "The product stores sensitive information in cleartext within the GUI.",
                "extended_description": " attacker can often obtain datum gui , even hide , use api to directly access gui object such window and menu . even information be encode way be not human - readable , certain technique could determine which encoding be be use , then decode information .",
                "child_of": [
                    "312"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read memory",
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "577",
            "value": {
                "id": "577",
                "name": "EJB Bad Practices: Use of Sockets",
                "description": "The product violates the Enterprise JavaBeans (EJB) specification by using sockets.",
                "extended_description": " enterprise javabeans specification require bean provider follow set programming guideline design to ensure bean will be portable and behave consistently ejb container . case , product violate following ejb guideline : \" enterprise bean must not attempt to listen socket , accept connection socket , or use socket multicast . \" specification justify requirement following way : \" ejb architecture allow enterprise bean instance to be network socket client , but do not allow to be network server . allow instance to become network server would conflict basic function enterprise bean-- to serve ejb client . \"",
                "child_of": [
                    "573"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "613",
            "value": {
                "id": "613",
                "name": "Insufficient Session Expiration",
                "description": "According to WASC, \"Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.\"",
                "extended_description": "",
                "child_of": [
                    "672"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "495",
            "value": {
                "id": "495",
                "name": "Private Data Structure Returned From A Public Method",
                "description": "The product has a method that is declared public, but returns a reference to a private data structure, which could then be modified in unexpected ways.",
                "extended_description": "",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data"
                ],
                "con_note": " content data structure can be modify intend scope .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "538",
            "value": {
                "id": "538",
                "name": "Insertion of Sensitive Information into Externally-Accessible File or Directory",
                "description": "The product places sensitive information into files or directories that are accessible to actors who are allowed to have access to the files, but not to the sensitive information.",
                "extended_description": "",
                "child_of": [
                    "200"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "308",
            "value": {
                "id": "308",
                "name": "Use of Single-factor Authentication",
                "description": "The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.",
                "extended_description": " use multiple authentication scheme be simply pile on more complexity top authentication , be inestimably valuable to have such measure redundancy . use weak , reuse , and common password be rampant internet . add protection multiple authentication scheme , single mistake can result compromise account . reason , multiple scheme be possible and also easy to use , should be implement and require .",
                "child_of": [
                    "1390",
                    "654"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": " secret single - factor authentication scheme gets compromise , full authentication be possible .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "526",
            "value": {
                "id": "526",
                "name": "Cleartext Storage of Sensitive Information in an Environment Variable",
                "description": "The product uses an environment variable to store unencrypted sensitive information.",
                "extended_description": " information store environment variable can be accessible other process execution context , include child process dependency be execute , or serverless function cloud environment . environment variable 's content can also be insert message , header , log file , or other output . often other dependency have need to use environment variable question . weakness disclose environment variable could expose information .",
                "child_of": [
                    "312"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "144",
            "value": {
                "id": "144",
                "name": "Improper Neutralization of Line Delimiters",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as line delimiters when they are sent to a downstream component.",
                "extended_description": " datum be parse , inject / absent / malforme delimiter may cause process to take unexpected action .",
                "child_of": [
                    "140"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "326",
            "value": {
                "id": "326",
                "name": "Inadequate Encryption Strength",
                "description": "The product stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.",
                "extended_description": " weak encryption scheme can be subject brute force attack have reasonable chance succeed use current attack method and resource .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " access control",
                    " confidentiality"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " read application data"
                ],
                "con_note": " attacker may be able to decrypt datum use brute force attack .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "546",
            "value": {
                "id": "546",
                "name": "Suspicious Comment",
                "description": "The code contains comments that suggest the presence of bugs, incomplete functionality, or weaknesses.",
                "extended_description": " many suspicious comment , such bug , hack , fixme , later , later2 , todo , code indicate miss security functionality and checking . other indicate code problem programmer should fix , such hard - code variable , error handling , not use store procedure , and performance issue .",
                "child_of": [
                    "1078"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": " suspicious comment could be indication be problem source code may need to be fix and be indication poor quality . could lead further bug and introduction weakness .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "573",
            "value": {
                "id": "573",
                "name": "Improper Following of Specification by Caller",
                "description": "The product does not follow or incorrectly follows the specifications as required by the implementation language, environment, framework, protocol, or platform.",
                "extended_description": " when leverage external functionality , such api , be important caller do so accordance requirement external functionality or else unintended behavior may result , possibly leave system vulnerable number exploit .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "639",
            "value": {
                "id": "639",
                "name": "Authorization Bypass Through User-Controlled Key",
                "description": "The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.",
                "extended_description": " retrieval user record occur system base key value be user control . key would typically identify user - relate record store system and would be use to lookup record presentation user . be likely attacker would have to be authenticated user system . however , authorization process would not properly check datum access operation to ensure authenticated user perform operation have sufficient entitlement to perform request data access , hence bypass other authorization check present system . example , attacker can look place where user specific data be retrieve ( e.g. search screen ) and determine key item be look up be controllable externally . key may be hidden field html form field , might be pass url parameter or unencrypted cookie variable , then case will be possible to tamper key value . one manifestation weakness be when system use sequential or otherwise easily - guessable session id would allow one user to easily switch user 's session and read / modify datum .",
                "child_of": [
                    "863"
                ],
                "con_scope": [
                    " access control",
                    " access control",
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " gain privileges or assume identity"
                ],
                "con_note": " vertical escalation privilege be possible user - control key be actually flag indicate administrator status , allow attacker to gain administrative access .",
                "alt_term": [
                    " insecure direct object reference / idor",
                    " broken object level authorization / bola",
                    " horizontal authorization"
                ],
                "alt_desc": [
                    " \" insecure direct object reference \" term , describe owasp top ten , be broad cwe also cover path traversal ( cwe-22 ) . context vulnerability theory , be similarity owasp concept and cwe-706 : use incorrectly - resolve name or reference .",
                    " bola be use 2019 owasp api security top 10 and be say to be same idor .",
                    " \" horizontal authorization \" be use to describe situation two user have same privilege level , but must be prevent access other 's resource . be fairly common when use key - base access resource multi - user context ."
                ]
            }
        },
        {
            "name": "149",
            "value": {
                "id": "149",
                "name": "Improper Neutralization of Quoting Syntax",
                "description": "Quotes injected into a product can be used to compromise a system. As data are parsed, an injected/absent/duplicate/malformed use of quotes may cause the process to take unexpected actions.",
                "extended_description": "",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "49",
            "value": {
                "id": "49",
                "name": "Path Equivalence: 'filename/' (Trailing Slash)",
                "description": "The product accepts path input in the form of trailing slash ('filedir/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "41",
                    "162"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "532",
            "value": {
                "id": "532",
                "name": "Insertion of Sensitive Information into Log File",
                "description": "Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.",
                "extended_description": " log information may be helpful development stage , be important log level be set appropriately product ship sensitive user datum and system information be not accidentally expose potential attacker . different log file may be produce and store : server log file ( e.g. server.log ) .   can give information whatever application leave file . usually can give full path name and system information , and sometimes username and passwords.log file be use debug",
                "child_of": [
                    "538"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " log sensitive user datum often provide attacker additional , less - protect path acquire information .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "475",
            "value": {
                "id": "475",
                "name": "Undefined Behavior for Input to API",
                "description": "The behavior of this function is undefined unless its control parameter is set to a specific value.",
                "extended_description": "",
                "child_of": [
                    "573"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "356",
            "value": {
                "id": "356",
                "name": "Product UI does not Warn User of Unsafe Actions",
                "description": "The product's user interface does not warn the user before undertaking an unsafe action on behalf of that user. This makes it easier for attackers to trick users into inflicting damage to their system.",
                "extended_description": " product system should warn user potentially dangerous action may occur user proceed . example , user download file unknown source and attempt to execute file machine , then application 's gui can indicate file be unsafe .",
                "child_of": [
                    "221"
                ],
                "con_scope": [
                    " non - repudiation"
                ],
                "con_impacts": [
                    " hide activity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "374",
            "value": {
                "id": "374",
                "name": "Passing Mutable Objects to an Untrusted Method",
                "description": "The product sends non-cloned mutable data as an argument to a method or function.",
                "extended_description": " function or method have be call can alter or delete mutable datum . could violate assumption calling function have make state . situation where unknown code be call reference mutable datum , external code could make change datum send . datum be not previously clone , modify datum might not be valid context execution .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify memory"
                ],
                "con_note": " potentially datum could be tamper function should not have be tamper .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "767",
            "value": {
                "id": "767",
                "name": "Access to Critical Private Variable via Public Method",
                "description": "The product defines a public method that reads or modifies a private variable.",
                "extended_description": " attacker modify variable to contain unexpected value , could violate assumption other part code . additionally , attacker can read private variable , may expose sensitive information or make easy to launch further attack .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " modify application data",
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "463",
            "value": {
                "id": "463",
                "name": "Deletion of Data Structure Sentinel",
                "description": "The accidental deletion of a data-structure sentinel can cause serious programming logic problems.",
                "extended_description": " often time data - structure sentinel be use to mark structure data structure . common example be null character end string . common example be link list may contain sentinel to mark end list . be dangerous to allow type control datum to be easily accessible . therefore , be important to protect deletion or modification wrapper interface provide safety .",
                "child_of": [
                    "707"
                ],
                "con_scope": [
                    " availability",
                    " other",
                    " authorization",
                    " other"
                ],
                "con_impacts": [
                    " other",
                    " other"
                ],
                "con_note": " control character , such null be remove , may cause resource access control problem .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1111",
            "value": {
                "id": "1111",
                "name": "Incomplete I/O Documentation",
                "description": "The product's documentation does not adequately define inputs, outputs, or system/software interfaces.",
                "extended_description": "",
                "child_of": [
                    "1059"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "539",
            "value": {
                "id": "539",
                "name": "Use of Persistent Cookies Containing Sensitive Information",
                "description": "The web application uses persistent cookies, but the cookies contain sensitive information.",
                "extended_description": " cookie be small bit datum be send web application but store locally browser . let application use cookie to pass information page and store variable information . web application control information be store cookie and how be use . typical type information store cookie be session identifier , personalization and customization information , and rare case even username to enable automate login . be two different type cookie : session cookie and persistent cookie . session cookie just live browser 's memory and be not store anywhere , but persistent cookie be store browser 's hard drive .    can cause security and privacy issue depend information store cookie and how be access .",
                "child_of": [
                    "552"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "88",
            "value": {
                "id": "88",
                "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
                "description": "The product constructs a string for a command to be executed by a separate component in another control sphere, but it does not properly delimit the intended arguments, options, or switches within that command string.",
                "extended_description": " when create command use interpolation string , developer may assume only argument / option specify will be process .   assumption may be even strong when programmer have encode command way prevent separate command be provide maliciously , e.g. case shell metacharacter .   when construct command , developer may use whitespace or other delimiter be require to separate argument when command . however , attacker can provide untrusted input contain argument - separate delimiter , then result command will have more argument intend developer .   attacker may then be able to change behavior command .   depend functionality support extraneous argument , may have security - relevant consequence .",
                "child_of": [
                    "77"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " other"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " alter execution logic",
                    " read application data",
                    " modify application data"
                ],
                "con_note": " attacker could include argument allow unintended command or code to be execute , allow sensitive datum to be read or modify or could cause other unintended behavior .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "168",
            "value": {
                "id": "168",
                "name": "Improper Handling of Inconsistent Special Elements",
                "description": "The product does not properly handle input in which an inconsistency exists between two or more special characters or reserved words.",
                "extended_description": " example problem would be pair character appear wrong order , or special character be not properly nest .",
                "child_of": [
                    "159",
                    "703"
                ],
                "con_scope": [
                    " availability",
                    " access control",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " bypass protection mechanism",
                    " hide activity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "648",
            "value": {
                "id": "648",
                "name": "Incorrect Use of Privileged APIs",
                "description": "The product does not conform to the API requirements for a function call that requires extra privileges. This could allow attackers to gain privileges by causing the function to be called incorrectly.",
                "extended_description": " when product contain certain function perform operation require elevated level privilege , caller privileged api must be careful to : ensure assumption make api be valid , such validity argumentsaccount know weakness design / implementation apicall api safe contextif caller api do not follow requirement , then may allow malicious user or process to elevate privilege , hijack process , or steal sensitive datum . instance , be important to know privileged api do not shed privilege return caller or privileged function might make certain assumption datum , context or state information pass caller . be important to always know when and how privileged api can be call order to ensure elevated level privilege can not be exploit .",
                "child_of": [
                    "269"
                ],
                "con_scope": [
                    " access control",
                    " confidentiality",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " read application data",
                    " execute unauthorized code or command"
                ],
                "con_note": " attacker may be able to execute code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "54",
            "value": {
                "id": "54",
                "name": "Path Equivalence: 'filedir\\' (Trailing Backslash)",
                "description": "The product accepts path input in the form of trailing backslash ('filedir\\') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "41",
                    "162"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "256",
            "value": {
                "id": "256",
                "name": "Plaintext Storage of a Password",
                "description": "Storing a password in plaintext may result in a system compromise.",
                "extended_description": " password management issue occur when password be store plaintext application 's property , configuration file , or memory . store plaintext password configuration file allow can read file access password - protect resource . context , even storage plaintext password memory be consider security risk password be not clear immediately be use .",
                "child_of": [
                    "522"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1335",
            "value": {
                "id": "1335",
                "name": "Incorrect Bitwise Shift of Integer",
                "description": "An integer value is specified to be shifted by a negative amount or an amount greater than or equal to the number of bits contained in the value causing an unexpected or indeterminate result.",
                "extended_description": " specify value to be shift negative amount be undefined various language . various computer architecture implement action different way . compiler and interpreter when generate code to accomplish shift generally do not do check issue . specify - shift , shift great or equal number bit contain value to be shift , produce result vary architecture and compiler . language , action be specifically list produce undefined result .",
                "child_of": [
                    "682"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "172",
            "value": {
                "id": "172",
                "name": "Encoding Error",
                "description": "The product does not properly encode or decode the data, resulting in unexpected values.",
                "extended_description": "",
                "child_of": [
                    "707"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "175",
            "value": {
                "id": "175",
                "name": "Improper Handling of Mixed Encoding",
                "description": "The product does not properly handle when the same input uses several different (mixed) encodings.",
                "extended_description": "",
                "child_of": [
                    "172"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "451",
            "value": {
                "id": "451",
                "name": "User Interface (UI) Misrepresentation of Critical Information",
                "description": "The user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.",
                "extended_description": " attacker can cause ui to display erroneous datum , or to otherwise convince user to display information appear to come trust source , then attacker could trick user perform wrong action . be often component phishe attack , but other kind problem exist . example , ui be use to monitor security state system or network , then omit or obscure important indicator could prevent user detect and react security - critical event . ui misrepresentation can take many form : incorrect indicator : incorrect information be display , prevent user understand true state product or environment product be monitor , especially potentially - dangerous condition or operation . can be break down several different subtype . overlay : area display be intend to give critical information , but process can modify display overlay element top . user be not interact expect portion user interface . be problem enable clickjacke attack , many other type attack exist involve overlay . icon manipulation : wrong icon , or wrong color indicator , can be influence ( such make dangerous .exe executable look harmless .gif)timing : product be perform state transition or context switch be present user indicator , but race condition can cause wrong indicator to be use product have fully switch context . race window could be extend indefinitely attacker can trigger error . visual truncation : important information could be truncate display , such long filename dangerous extension be not display gui malicious portion be truncate . use excessive whitespace can also cause truncation , or place potentially - dangerous indicator outside user 's field view ( e.g. \" filename.txt .exe \" ) . different type truncation can occur when portion information be remove reason other length , such accidental insertion end - - input marker middle input , such nul byte c - style string . visual distinction : visual information might be present way make difficult user quickly and correctly distinguish critical and unimportant segment display . homograph : letter different character set , font , or language can appear very similar ( i.e. may be visually equivalent ) way cause human user to misread text ( example , to conduct phishe attack to trick user visit malicious web site visually - similar name trust site ) . can be regard type visual distinction issue .",
                "child_of": [
                    "684",
                    "221"
                ],
                "con_scope": [
                    " non - repudiation",
                    " access control"
                ],
                "con_impacts": [
                    " hide activity",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1296",
            "value": {
                "id": "1296",
                "name": "Incorrect Chaining or Granularity of Debug Components",
                "description": "The product's debug components contain incorrect chaining or granularity of debug components.",
                "extended_description": " debug and troubleshoot chip , several hardware design element be often implement , include : various test access ports ( tap ) allow boundary scan command to be execute . scan internal component chip , be scan cell allow chip to be use \" stimulus and response \" mechanism . chipmaker might create custom method to observe internal component chip place various tracing hub chip and create hierarchical or interconnected structure hub . logic error design or synthesis could misconfigure interconnection debug component , could allow unintended access permission .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control",
                    " authentication",
                    " authorization",
                    " availability",
                    " accountability"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " execute unauthorized code or command",
                    " modify memory",
                    " modify files or directory"
                ],
                "con_note": " depend access debug component(s ) erroneously grant , attacker could use debug component to gain additional understanding system to further attack and/or execute other command . could compromise security property , include one list above .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1244",
            "value": {
                "id": "1244",
                "name": "Internal Asset Exposed to Unsafe Debug Access Level or State",
                "description": "The product uses physical debug or test interfaces with support for multiple access levels, but it assigns the wrong debug access level to an internal asset, providing unintended access to the asset from untrusted debug agents.",
                "extended_description": " debug authorization can have multiple level \n\t   access , define such different system internal asset \n\t   be accessible base current authorize debug \n\t   level . other debugg authentication ( e.g. , use \n\t   password or challenge ) , authorization can also be \n\t   base system state or boot stage . example , full \n\t   system debug access might only be allow early boot \n\t   system reset to ensure previous session datum be \n\t   not accessible authenticated debugger . protection mechanism do not ensure \n           internal asset have correct debug access level \n           boot stage or change system state , attacker could \n           obtain sensitive information internal asset use \n           debugger .",
                "child_of": [
                    "863"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " authorization",
                    " access control"
                ],
                "con_impacts": [
                    " read memory",
                    " modify memory",
                    " gain privileges or assume identity",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "249",
            "value": {
                "id": "249",
                "name": "DEPRECATED: Often Misused: Path Manipulation",
                "description": "This entry has been deprecated because of name confusion and an accidental combination of multiple weaknesses. Most of its content has been transferred toCWE-785.",
                "extended_description": " entry be deprecate several reason . primary \n         reason be over - loading \" path manipulation \" term and \n         description . original description entry be \n         same \" often misused : file system \" item \n         original seven pernicious kingdoms paper . however , seven \n         pernicious kingdoms also have \" path manipulation \" phrase \n         be external control pathname ( cwe-73 ) , be \n         factor symbolic link follow and path traversal , \n         be explicitly mention 7pk . fortify use \n         phrase \" often misused : path manipulation \" broad range \n         problem , generally issue relate buffer \n         management . give multiple conflict use term , \n         be chance cwe user may have incorrectly map \n         entry . second reason deprecation be imply combination \n\t multiple weakness buffer - handle function . \n\t focus entry be generally path - conversion \n\t function and association buffer \n\t overflow . however , fortify 's vulncat entry have \n\t term \" path manipulation \" but describe non - overflow weakness \n\t buffer be not guarantee to contain entire \n\t pathname , i.e. , be information truncation ( see cwe-222 \n\t similar concept ) . new entry non - overflow \n\t weakness may be create future version cwe .",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "259",
            "value": {
                "id": "259",
                "name": "Use of Hard-coded Password",
                "description": "The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.",
                "extended_description": " hard - code password typically lead significant authentication failure can be difficult system administrator to detect . once detect , can be difficult to fix , so administrator may be force disable product entirely . be two main variation : inbound : product contain authentication mechanism check hard - code password . outbound : product connect system or component , and contain hard - code password connect component . inbound variant , default administration account be create , and simple password be hard - code product and associate account . hard - code password be same installation product , and usually can not be change or disable system administrator manually modify program , or otherwise patch product . password be ever discover or publish ( common occurrence internet ) , then knowledge password can access product . finally , installation product will have same password , even different organization , enable massive attack such worm to take place . outbound variant apply front - end system authenticate back - end service . back - end service may require fix password can be easily discover . programmer may simply hard - code back - end credential front - end product . user program may be able to extract password . client - side system hard - code password pose even more threat , extraction password binary be usually very simple .",
                "child_of": [
                    "798"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " hard - code password be use , be almost certain malicious user will gain access account question .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "615",
            "value": {
                "id": "615",
                "name": "Inclusion of Sensitive Information in Source Code Comments",
                "description": "While adding general comments is very useful, some programmers tend to leave important data, such as: filenames related to the web application, old links or links which were not meant to be browsed by users, old code fragments, etc.",
                "extended_description": " attacker find comment can map application 's structure and file , expose hidden part site , and study fragment code to reverse engineer application , may help develop further attack site .",
                "child_of": [
                    "540"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1312",
            "value": {
                "id": "1312",
                "name": "Missing Protection for Mirrored Regions in On-Chip Fabric Firewall",
                "description": "The firewall in an on-chip fabric protects the main addressed region, but it does not protect any mirrored memory or memory-mapped-IO (MMIO) regions.",
                "extended_description": " few fabric mirror memory and address range , where mirror region contain copy original datum . redundancy be use to achieve fault tolerance . whatever protection fabric firewall implement original region should also apply mirrored region . not , attacker could bypass exist read / write protection read / writing mirror region to leak or corrupt original datum .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "667",
            "value": {
                "id": "667",
                "name": "Improper Locking",
                "description": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.",
                "extended_description": " lock be type synchronization behavior ensure multiple independently - operate process or thread do not interfere other when access same resource . process / thread be expect to follow same step lock . step be not follow precisely - or locking be do at all - then process / thread could modify share resource way be not visible or predictable original process .   can lead datum or memory corruption , denial service , etc .",
                "child_of": [
                    "662"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )"
                ],
                "con_note": " inconsistent locking discipline can lead deadlock .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "141",
            "value": {
                "id": "141",
                "name": "Improper Neutralization of Parameter/Argument Delimiters",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as parameter or argument delimiters when they are sent to a downstream component.",
                "extended_description": " datum be parse , inject / absent / malforme delimiter may cause process to take unexpected action .",
                "child_of": [
                    "140"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "273",
            "value": {
                "id": "273",
                "name": "Improper Check for Dropped Privileges",
                "description": "The product attempts to drop privileges but does not check or incorrectly checks to see if the drop succeeded.",
                "extended_description": " drop fail , product will continue to run raise privilege , might provide additional access unprivileged user .",
                "child_of": [
                    "754",
                    "271"
                ],
                "con_scope": [
                    " access control",
                    " access control",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " gain privileges or assume identity",
                    " hide activity"
                ],
                "con_note": " privilege be not drop , case system may record action user be be impersonate rather impersonator .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "62",
            "value": {
                "id": "62",
                "name": "UNIX Hard Link",
                "description": "The product, when opening a file or directory, does not sufficiently account for when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
                "extended_description": " failure system to check hard link can result vulnerability different type attack . example , attacker can escalate privilege file use privileged program be replace hard link sensitive file ( e.g. /etc / passwd ) . when process open file , attacker can assume privilege process .",
                "child_of": [
                    "59"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "824",
            "value": {
                "id": "824",
                "name": "Access of Uninitialized Pointer",
                "description": "The product accesses or uses a pointer that has not been initialized.",
                "extended_description": " pointer contain uninitialized value , then value might not point valid memory location . could cause product to read or write unexpected memory location , lead denial service . uninitialized pointer be use function call , then arbitrary function could be invoke . attacker can influence portion uninitialized memory be contain pointer , weakness could be leverage to execute code or perform other attack . depend memory layout , associate memory management behavior , and product operation , attacker might be able to influence content uninitialized pointer , thus gain more fine - grain control memory location to be access .",
                "child_of": [
                    "119"
                ],
                "con_scope": [
                    " confidentiality",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " read memory",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command"
                ],
                "con_note": " uninitialized pointer be use function call , or point unexpected datum write operation , then code execution may be possible .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "182",
            "value": {
                "id": "182",
                "name": "Collapse of Data into Unsafe Value",
                "description": "The product filters data in a way that causes it to be reduced or \"collapsed\" into an unsafe value that violates an expected security property.",
                "extended_description": "",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "307",
            "value": {
                "id": "307",
                "name": "Improper Restriction of Excessive Authentication Attempts",
                "description": "The product does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame, making it more susceptible to brute force attacks.",
                "extended_description": "",
                "child_of": [
                    "1390",
                    "799"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": " attacker could perform arbitrary number authentication attempt use different password , and eventually gain access targeted account .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "433",
            "value": {
                "id": "433",
                "name": "Unparsed Raw Web Content Delivery",
                "description": "The product stores raw content or supporting code under the web document root with an extension that is not specifically handled by the server.",
                "extended_description": " code be store file extension such \" .inc \" or \" .pl \" , and web server do not have handler extension , then server will likely send content file directly requester pre - processing be expect . when file contain sensitive information such database credential , may allow attacker to compromise application or associated component .",
                "child_of": [
                    "219"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "943",
            "value": {
                "id": "943",
                "name": "Improper Neutralization of Special Elements in Data Query Logic",
                "description": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
                "extended_description": " depend capability query language , attacker could inject additional logic query to : modify intend selection criterion , thus change which datum entity ( e.g. , record ) be return , modify , or otherwise manipulatedappend additional command queryreturn more entity intendedreturn few entity intendedcause entity to be sort unexpected waythe ability to execute additional command or change which entity be return have obvious risk . but when product logic depend order or number entity , can also lead vulnerability . example , query expect to return only one entity specify administrative user , but attacker can change entity be return , could cause logic to return information regular user and incorrectly assume user have administrative privilege . weakness be most commonly associate sql injection , be many other query language be also subject injection attack , include htsql , ldap , dql , xquery , xpath , and \" nosql \" language .",
                "child_of": [
                    "74"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " read application data",
                    " modify application data",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "400",
            "value": {
                "id": "400",
                "name": "Uncontrolled Resource Consumption",
                "description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
                "extended_description": " limited resource include memory , file system storage , database connection pool entry , and cpu . attacker can trigger allocation limited resource , but number or size resource be not control , then attacker could cause denial service consume available resource . would prevent valid user access product , and could potentially have impact surround environment . example , memory exhaustion attack application could slow down application as well host operating system . be at least three distinct scenario can commonly lead resource exhaustion : lack throttle number allocate resourceslose reference resource reach shutdown stagenot close / return resource processingresource exhaustion problem be often result incorrect implementation follow situation : error condition and other exceptional circumstance . confusion which part program be responsible release resource .",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " availability",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : resource consumption ( other )",
                    " bypass protection mechanism",
                    " other"
                ],
                "con_note": " case may be possible to force product to \" fail open \" event resource exhaustion . state product -- and possibly security functionality - may then be compromise .",
                "alt_term": [
                    " resource exhaustion"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "288",
            "value": {
                "id": "288",
                "name": "Authentication Bypass Using an Alternate Path or Channel",
                "description": "A product requires authentication, but the product has an alternate path or channel that does not require authentication.",
                "extended_description": "",
                "child_of": [
                    "306"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "759",
            "value": {
                "id": "759",
                "name": "Use of a One-Way Hash without a Salt",
                "description": "The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product does not also use a salt as part of the input.",
                "extended_description": " make easy attacker to pre - compute hash value use dictionary attack technique such rainbow table . should be note , common perception , use good salt hash do not sufficiently increase effort attacker be target individual password , or have large amount compute resource available , such cloud - base service or specialize , inexpensive hardware . offline password cracking can still be effective hash function be not expensive to compute ; many cryptographic function be design to be efficient and can be vulnerable attack use massive computing resource , even hash be cryptographically strong . use salt only slightly increase compute requirement attacker compare other strategy such adaptive hash function . see cwe-916 more detail .",
                "child_of": [
                    "916"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": " attacker can gain access hash , then lack salt make easy to conduct brute force attack use technique such rainbow table .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "393",
            "value": {
                "id": "393",
                "name": "Return of Wrong Status Code",
                "description": "A function or operation returns an incorrect return value or status code that does not indicate an error, but causes the product to modify its behavior based on the incorrect result.",
                "extended_description": " can lead unpredictable behavior . function be use to make security - critical decision or provide security - critical information , then wrong status code can cause product to assume action be safe , even when be not .",
                "child_of": [
                    "684",
                    "703"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " unexpected state",
                    " alter execution logic"
                ],
                "con_note": " weakness could place system state could lead unexpected logic to be execute or other unintended behavior .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "360",
            "value": {
                "id": "360",
                "name": "Trust of System Event Data",
                "description": "Security based on event locations are insecure and can be spoofed.",
                "extended_description": " event be message system may provide control datum program listen event . event often do not have type authentication framework to allow to be verify trust source . application , windows , give desktop can send message window same desktop . be authentication framework message . therefore , message can be use to manipulate process desktop process do not check validity and safeness message .",
                "child_of": [
                    "345"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " execute unauthorized code or command"
                ],
                "con_note": " one trust system - event information and execute command base , could potentially take action base spoof identity .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "263",
            "value": {
                "id": "263",
                "name": "Password Aging with Long Expiration",
                "description": "The product supports password aging, but the expiration period is too long.",
                "extended_description": " password aging ( or password rotation ) be policy force user to change password define time period pass , such 30 or 90 day . long expiration provide more time attacker to conduct password crack user be force to change new password . note password aging be once consider important security feature , have fall favor many , be not as effective modern threat compare other mechanism such slow hash . addition , force frequent change can unintentionally encourage user to select less - secure password . however , password aging be still use factor such compliance requirement , e.g. , payment card industry data security standard ( pci dss ) .",
                "child_of": [
                    "1390"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " password age , probability be compromise grow .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "193",
            "value": {
                "id": "193",
                "name": "Off-by-one Error",
                "description": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",
                "extended_description": "",
                "child_of": [
                    "682"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : instability",
                    " modify memory",
                    " execute unauthorized code or command",
                    " bypass protection mechanism"
                ],
                "con_note": " weakness can sometimes trigger buffer overflow can be use to execute arbitrary code . be usually scope program 's implicit security policy .",
                "alt_term": [
                    " - - five"
                ],
                "alt_desc": [
                    " \" - - five \" error be report sudo 2002 ( cve-2002 - 0184 ) , but be more \" length calculation \" error ."
                ]
            }
        },
        {
            "name": "303",
            "value": {
                "id": "303",
                "name": "Incorrect Implementation of Authentication Algorithm",
                "description": "The requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.",
                "extended_description": " incorrect implementation may allow authentication to be bypass .",
                "child_of": [
                    "1390"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "390",
            "value": {
                "id": "390",
                "name": "Detection of Error Condition Without Action",
                "description": "The product detects a specific error, but takes no actions to handle the error.",
                "extended_description": "",
                "child_of": [
                    "755"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " varie context",
                    " unexpected state",
                    " alter execution logic"
                ],
                "con_note": " attacker could utilize ignore error condition to place system unexpected state could lead execution unintended logic and could cause other unintended behavior .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "404",
            "value": {
                "id": "404",
                "name": "Improper Resource Shutdown or Release",
                "description": "The product does not release or incorrectly releases a resource before it is made available for re-use.",
                "extended_description": " when resource be create or allocate , developer be responsible properly release resource as well account potential path expiration or invalidation , such set period time or revocation .",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " availability",
                    " other",
                    " confidentiality"
                ],
                "con_impacts": [
                    " dos : resource consumption ( other )",
                    " varie context",
                    " read application data"
                ],
                "con_note": " when resource contain sensitive information be not correctly shutdown , may expose sensitive datum subsequent allocation .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1039",
            "value": {
                "id": "1039",
                "name": "Automated Recognition Mechanism with Inadequate Detection or Handling of Adversarial Input Perturbations",
                "description": "The product uses an automated mechanism such as machine learning to recognize complex data inputs (e.g. image or audio) as a particular concept or category, but it does not properly detect or handle inputs that have been modified or constructed in a way that causes the mechanism to detect a different, incorrect concept.",
                "extended_description": " when technique such machine learning be use to automatically classify input stream , and classification be use security - critical decision , then mistake classification can introduce vulnerability allow attacker to cause product to make wrong security decision .   automate mechanism be not develop or \" train \" enough input datum , then attacker may be able to craft malicious input intentionally trigger incorrect classification . target technology include , but be not necessarily limit : automate speech recognitionautomate image recognitionfor example , attacker might modify road sign or road surface marking to trick autonomous vehicle misread sign / mark and perform dangerous action .",
                "child_of": [
                    "693",
                    "697"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": " when automate recognition be use protection mechanism , attacker may be able to craft input be misinterpret way grant excess privilege .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "441",
            "value": {
                "id": "441",
                "name": "Unintended Proxy or Intermediary ('Confused Deputy')",
                "description": "The product receives a request, message, or directive from an upstream component, but the product does not sufficiently preserve the original source of the request before forwarding the request to an external actor that is outside of the product's control sphere. This causes the product to appear to be the source of the request, leading it to act as a proxy or other intermediary between the upstream component and the external actor.",
                "extended_description": " attacker can not directly contact target , but product have access target , then attacker can send request product and have be forward target . request would appear to be come product 's system , not attacker 's system . result , attacker can bypass access control ( such firewall ) or hide source malicious request , request would not be come directly attacker . proxy functionality and message - forwarding often serve legitimate purpose , issue only become vulnerability when : product run different privilege or different system , or otherwise have different level access upstream component;the attacker be prevent make request directly target ; attacker can create request proxy do not explicitly intend to be forward behalf requester . such request might point unexpected hostname , port number , hardware ip , or service . or , request might be send allow service , but request could contain disallowed directive , command , or resource .",
                "child_of": [
                    "610"
                ],
                "con_scope": [
                    " non - repudiation",
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " hide activity",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [
                    " confused deputy"
                ],
                "alt_desc": [
                    " weakness be sometimes refer \" confused deputy \" problem , attacker misuse authority one victim ( \" confused deputy \" ) when target victim ."
                ]
            }
        },
        {
            "name": "917",
            "value": {
                "id": "917",
                "name": "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')",
                "description": "The product constructs all or part of an expression language (EL) statement in a framework such as a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended EL statement before it is executed.",
                "extended_description": " framework such java server page ( jsp ) allow developer to insert executable expression otherwise - static content . when developer be not aware executable nature expression and/or do not disable , then attacker can inject expression , could lead code execution or other unexpected behavior .",
                "child_of": [
                    "77"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [
                    " el injection"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "55",
            "value": {
                "id": "55",
                "name": "Path Equivalence: '/./' (Single Dot Directory)",
                "description": "The product accepts path input in the form of single dot directory exploit ('/./') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "41"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "603",
            "value": {
                "id": "603",
                "name": "Use of Client-Side Authentication",
                "description": "A client/server product performs authentication within client code but not in server code, allowing server-side authentication to be bypassed via a modified client that omits the authentication check.",
                "extended_description": " client - side authentication be extremely weak and may be breach easily . attacker may read source code and reverse - engineer authentication mechanism to access part application would otherwise be protect .",
                "child_of": [
                    "1390",
                    "602"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "322",
            "value": {
                "id": "322",
                "name": "Key Exchange without Entity Authentication",
                "description": "The product performs a key exchange with an actor without verifying the identity of that actor.",
                "extended_description": " perform key exchange will preserve integrity information send two entity , but will not guarantee entity be claim be . may enable attacker to impersonate actor modify traffic two entity .   typically , involve victim client contact malicious server be impersonate trust server . client skip authentication or ignore authentication failure , malicious server may request authentication information user . malicious server can then use authentication information to log in trust server use victim 's credential , sniff traffic victim and trusted server , etc .",
                "child_of": [
                    "306"
                ],
                "con_scope": [
                    " access control",
                    " confidentiality"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " read application data"
                ],
                "con_note": " encrypt communication user and trust host may be subject sniff actor communication path .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "373",
            "value": {
                "id": "373",
                "name": "DEPRECATED: State Synchronization Error",
                "description": "This entry was deprecated because it overlapped the same concepts as race condition (CWE-362) and Improper Synchronization (CWE-662).",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "941",
            "value": {
                "id": "941",
                "name": "Incorrectly Specified Destination in a Communication Channel",
                "description": "The product creates a communication channel to initiate an outgoing request to an actor, but it does not correctly specify the intended destination for that actor.",
                "extended_description": " attacker destination may be able to spoof trust server to steal datum or cause denial service . be at least two distinct weakness can cause product to communicate unintended destination : product allow attacker to control which destination be specify , then attacker can cause to connect untrusted or malicious destination . example , udp be connectionless protocol , udp packet can be spoof specify false source address packet ; when server receive packet and send reply , will specify destination use source incoming packet - i.e. , false source . server can then be trick send traffic wrong host , be effective hide real source attack and conduct distribute denial service ( ddos ) . example , server - side request forgery ( ssrf ) and xml external entity ( xxe ) can be use to trick server make outgoing request host can not be directly access attacker firewall restriction . product incorrectly specify destination , then attacker can control destination might be able to spoof trust server . most common occurrence be likely due misconfiguration administrator , can be resultant other weakness . example , product might incorrectly parse e - mail or ip address and send sensitive datum unintended destination . example , android application may use \" sticky broadcast \" to communicate receiver particular application , but sticky broadcast can be process * * receiver , can allow malicious application to access restricted datum be only intend different application .",
                "child_of": [
                    "923"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "638",
            "value": {
                "id": "638",
                "name": "Not Using Complete Mediation",
                "description": "The product does not perform access checks on a resource every time the resource is accessed by an entity, which can create resultant weaknesses if that entity's rights or privileges change over time.",
                "extended_description": "",
                "child_of": [
                    "657",
                    "862"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " execute unauthorized code or command",
                    " bypass protection mechanism",
                    " read application data",
                    " other"
                ],
                "con_note": " user might retain access critical resource even privilege have be revoke , possibly allow access privileged functionality or sensitive information , depend role resource .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "46",
            "value": {
                "id": "46",
                "name": "Path Equivalence: 'filename ' (Trailing Space)",
                "description": "The product accepts path input in the form of trailing space ('filedir ') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "41",
                    "162"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "794",
            "value": {
                "id": "794",
                "name": "Incomplete Filtering of Multiple Instances of Special Elements",
                "description": "The product receives data from an upstream component, but does not filter all instances of a special element before sending it to a downstream component.",
                "extended_description": " incomplete filtering nature may be apply : sequential element ( special element appear next other ) ornon - sequential element ( special element appear multiple time different location ) .",
                "child_of": [
                    "792"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "768",
            "value": {
                "id": "768",
                "name": "Incorrect Short Circuit Evaluation",
                "description": "The product contains a conditional statement with multiple logical expressions in which one of the non-leading expressions may produce side effects. This may lead to an unexpected state in the program after the execution of the conditional, because short-circuiting logic may prevent the side effects from occurring.",
                "extended_description": " usage short circuit evaluation , well - define c standard , may alter control flow way introduce logic error be difficult to detect , possibly cause error later product 's execution . attacker can discover such inconsistency , may be exploitable to gain arbitrary control system . first condition \" or \" statement be assume to be true normal circumstance , or first condition \" and \" statement be assume to be false , then subsequent conditional may contain own logic error be not detect code review or testing . finally , usage short circuit evaluation may decrease maintainability code .",
                "child_of": [
                    "691"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [],
                "con_note": " widely varied consequence be possible attacker be aware unexpected state product conditional . may lead information exposure , system crash , or even complete attacker control system .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "312",
            "value": {
                "id": "312",
                "name": "Cleartext Storage of Sensitive Information",
                "description": "The product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.",
                "extended_description": " information be store cleartext ( i.e. , unencrypted ) , attacker could potentially read . even information be encode way be not human - readable , certain technique could determine which encoding be be use , then decode information . when organization adopt cloud service , can be easy attacker to access datum anywhere internet . system / environment such cloud , use \" double encryption \" ( both software and hardware layer ) might be require , and developer might be solely responsible layer , instead share responsibility administrator broad system / environment .",
                "child_of": [
                    "311",
                    "922"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " attacker access system could read sensitive information store cleartext .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1123",
            "value": {
                "id": "1123",
                "name": "Excessive Use of Self-Modifying Code",
                "description": "The product uses too much self-modifying code.",
                "extended_description": " issue make more difficult to understand or maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1120"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "786",
            "value": {
                "id": "786",
                "name": "Access of Memory Location Before Start of Buffer",
                "description": "The product reads or writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
                "extended_description": " typically occur when pointer or index be decremente position buffer , when pointer arithmetic result position beginning valid memory location , or when negative index be use .",
                "child_of": [
                    "119"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " integrity"
                ],
                "con_impacts": [
                    " read memory",
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " modify memory",
                    " execute unauthorized code or command"
                ],
                "con_note": " corrupted memory can be effectively control , may be possible to execute arbitrary code . corrupted memory be datum rather instruction , system will continue to function improper change , possibly violation implicit or explicit policy .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1264",
            "value": {
                "id": "1264",
                "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
                "description": "The hardware logic for error handling and security checks can incorrectly forward data before the security check is complete.",
                "extended_description": " many high - performance - chip bus protocol and processor datum - path employ separate channel control and datum to increase parallelism and maximize throughput . bug hardware logic handle error and security check can make possible datum to be forward completion security check . datum can propagate location hardware observable attacker , loss datum confidentiality can occur . ' meltdown ' be concrete example how de - synchronization datum and permission check logic can violate confidentiality requirement . datum load page mark privileged be return cpu regardless current privilege level performance reason . assumption be cpu could later remove trace datum handling illegal memory access exception , but assumption be prove false trace secret datum be not remove microarchitectural state .",
                "child_of": [
                    "821"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read memory",
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "491",
            "value": {
                "id": "491",
                "name": "Public cloneable() Method Without Final ('Object Hijack')",
                "description": "A class has a cloneable() method that is not declared final, which allows an object to be created without calling the constructor. This can cause the object to be in an unexpected state.",
                "extended_description": "",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " unexpected state",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "572",
            "value": {
                "id": "572",
                "name": "Call to Thread run() instead of start()",
                "description": "The product calls a thread's run() method instead of calling start(), which causes the code to run in the thread of the caller instead of the callee.",
                "extended_description": " most case direct call thread object 's run ( ) method be bug . programmer intend to begin new thread control , but accidentally call run ( ) instead start ( ) , so run ( ) method will execute caller 's thread control .",
                "child_of": [
                    "821"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "23",
            "value": {
                "id": "23",
                "name": "Relative Path Traversal",
                "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.",
                "extended_description": " allow attacker to traverse file system to access file or directory be restricted directory .",
                "child_of": [
                    "22"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " modify files or directory",
                    " read files or directory",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " attacker may be able to overwrite , delete , or corrupt unexpected critical file such program , library , or important datum . may prevent product work at all and case protection mechanism such authentication , have potential to lockout user product .",
                "alt_term": [
                    " zip slip"
                ],
                "alt_desc": [
                    " \" zip slip \" be attack use file archive ( e.g. , zip , tar , rar , etc . ) contain filename path traversal sequence cause file to be write outside directory archive be expect to be extract [ ref-1282 ] . be most commonly use relative path traversal ( cwe-23 ) and link follow ( cwe-59 ) ."
                ]
            }
        },
        {
            "name": "239",
            "value": {
                "id": "239",
                "name": "Failure to Handle Incomplete Element",
                "description": "The product does not properly handle when a particular element is not completely specified.",
                "extended_description": "",
                "child_of": [
                    "237"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " varie context",
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "832",
            "value": {
                "id": "832",
                "name": "Unlock of a Resource that is not Locked",
                "description": "The product attempts to unlock a resource that is not locked.",
                "extended_description": " depend lock functionality , unlock non - locked resource might cause memory corruption or other modification resource ( or associate metadata be use track lock ) .",
                "child_of": [
                    "667"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " other"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command",
                    " modify memory",
                    " other"
                ],
                "con_note": " depend locking be use , unlock operation might not have adverse effect . when effect exist , most common consequence will be corruption state product , possibly lead crash or exit ; depend implementation unlocking , memory corruption or code execution could occur .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "179",
            "value": {
                "id": "179",
                "name": "Incorrect Behavior Order: Early Validation",
                "description": "The product validates input before applying protection mechanisms that modify the input, which could allow an attacker to bypass the validation via dangerous inputs that only arise after the modification.",
                "extended_description": " product need to validate datum proper time , datum have be canonicalize and cleanse . early validation be susceptible various manipulation result dangerous input be produce canonicalization and cleansing .",
                "child_of": [
                    "20",
                    "696"
                ],
                "con_scope": [
                    " access control",
                    " integrity"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " execute unauthorized code or command"
                ],
                "con_note": " attacker could include dangerous input bypass validation protection mechanism can be use to launch various attack include injection attack , execute arbitrary code or cause other unintended behavior .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "391",
            "value": {
                "id": "391",
                "name": "Unchecked Error Condition",
                "description": "[PLANNED FOR DEPRECATION. SEE MAINTENANCE NOTES AND CONSIDERCWE-252,CWE-248, ORCWE-1069.] Ignoring exceptions and other error conditions may allow an attacker to induce unexpected behavior unnoticed.",
                "extended_description": "",
                "child_of": [
                    "754"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " varie context",
                    " unexpected state",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1053",
            "value": {
                "id": "1053",
                "name": "Missing Documentation for Design",
                "description": "The product does not have documentation that represents how it is designed.",
                "extended_description": " issue can make more difficult to understand and maintain product . can make more difficult and time - consume to detect and/or fix vulnerability .",
                "child_of": [
                    "1059"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "47",
            "value": {
                "id": "47",
                "name": "Path Equivalence: ' filename' (Leading Space)",
                "description": "The product accepts path input in the form of leading space (' filedir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "41"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "339",
            "value": {
                "id": "339",
                "name": "Small Seed Space in PRNG",
                "description": "A Pseudo-Random Number Generator (PRNG) uses a relatively small seed space, which makes it more susceptible to brute force attacks.",
                "extended_description": " prng be entirely deterministic once seed , should be extremely difficult to guess seed . attacker can collect output prng and then brute force seed try possibility to see which seed match observed output , then attacker will know output subsequent call prng . small seed space imply attacker will have far few possible value to try to exhaust possibility . \n\t\t ",
                "child_of": [
                    "335"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "618",
            "value": {
                "id": "618",
                "name": "Exposed Unsafe ActiveX Method",
                "description": "An ActiveX control is intended for use in a web browser, but it exposes dangerous methods that perform actions that are outside of the browser's security model (e.g. the zone or domain).",
                "extended_description": " control can exercise far great control operating system typical java or javascript . expose method can be subject various vulnerability , depend implement behavior method , and input validation be perform provide argument . be integrity checking or origin validation , method could be invoke attacker .",
                "child_of": [
                    "749"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "352",
            "value": {
                "id": "352",
                "name": "Cross-Site Request Forgery (CSRF)",
                "description": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
                "extended_description": " when web server be design to receive request client mechanism verifying be intentionally send , then might be possible attacker to trick client make unintentional request web server will be treat authentic request . can be do url , image load , xmlhttprequ , etc . and can result exposure datum or unintended code execution .",
                "child_of": [
                    "345"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " non - repudiation",
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " read application data",
                    " modify application data",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " consequence will vary depend nature functionality be vulnerable csrf . attacker could effectively perform operation victim . victim be administrator or privileged user , consequence may include obtain complete control web application - delete or steal datum , uninstalle product , or use to launch other attack product 's user . attacker have identity victim , scope csrf be limit only victim 's privilege .",
                "alt_term": [
                    " session riding",
                    " cross site reference forgery",
                    " xsrf"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "654",
            "value": {
                "id": "654",
                "name": "Reliance on a Single Factor in a Security Decision",
                "description": "A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.",
                "extended_description": "",
                "child_of": [
                    "657",
                    "693"
                ],
                "con_scope": [
                    " access control",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " hide activity"
                ],
                "con_note": " can become difficult or impossible product to be able to distinguish legitimate activity entity provide factor , illegitimate activity attacker .",
                "alt_term": [
                    " separation privilege"
                ],
                "alt_desc": [
                    " people and publication use term \" separation privilege \" to describe weakness , but term have dual meaning current usage . entry be closely associate original definition \" separation privilege \" saltzer and schroeder , other use same term to describe poor compartmentalization ( cwe-653 ) . be multiple interpretation , use \" separation privilege \" term be discourage ."
                ]
            }
        },
        {
            "name": "771",
            "value": {
                "id": "771",
                "name": "Missing Reference to Active Allocated Resource",
                "description": "The product does not properly maintain a reference to a resource that has been allocated, which prevents the resource from being reclaimed.",
                "extended_description": " do not necessarily apply language or framework automatically perform garbage collection , removal reference may act signal resource be ready to be reclaim .",
                "child_of": [
                    "400"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( other )"
                ],
                "con_note": " attacker can influence allocation resource be not properly maintain could deplete available resource pool and prevent other process access same type resource .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "111",
            "value": {
                "id": "111",
                "name": "Direct Use of Unsafe JNI",
                "description": "When a Java application uses the Java Native Interface (JNI) to call code written in another programming language, it can expose the application to weaknesses in that code, even if those weaknesses cannot occur in Java.",
                "extended_description": " many safety feature programmer may take grant do not apply native code , so must carefully review such code potential problem . language use to implement native code may be more susceptible to buffer overflow and other attack . native code be unprotected security feature enforce runtime environment , such strong typing and array bound check .",
                "child_of": [
                    "695"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "477",
            "value": {
                "id": "477",
                "name": "Use of Obsolete Function",
                "description": "The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained.",
                "extended_description": " programming language evolve , function occasionally become obsolete : advance languageimprove understanding how operation should be perform effectively and securelychange convention govern certain operationsfunction be remove be usually replace new counterpart perform same task different and hopefully improved way .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1281",
            "value": {
                "id": "1281",
                "name": "Sequence of Processor Instructions Leads to Unexpected Behavior",
                "description": "Specific combinations of processor instructions lead to undesirable behavior such as locking the processor until a hard reset performed.",
                "extended_description": " instruction set architecture ( isa ) and processor logic be not design carefully and test thoroughly , certain combination instruction may lead lock processor or other unexpected and undesirable behavior .   encounter unimplemented instruction opcode or illegal instruction operand , processor should throw exception and carry on negatively impact security .   however , specific combination legal and illegal instruction may cause unexpected behavior security implication such allow unprivileged program to completely lock cpu . \n                ",
                "child_of": [
                    "691"
                ],
                "con_scope": [
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "219",
            "value": {
                "id": "219",
                "name": "Storage of File with Sensitive Data Under Web Root",
                "description": "The product stores sensitive data under the web document root with insufficient access control, which might make it accessible to untrusted parties.",
                "extended_description": " public - face web page and code , product may store sensitive datum , code be not directly invoke , or other file web document root web server .   server be not configure or otherwise use to prevent direct access file , then attacker may obtain sensitive datum . \n\t ",
                "child_of": [
                    "552"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "625",
            "value": {
                "id": "625",
                "name": "Permissive Regular Expression",
                "description": "The product uses a regular expression that does not sufficiently restrict the set of allowed values.",
                "extended_description": " effectively cause regexp to accept substring match pattern , produce partial comparison target . case , can lead other weakness . common error include : not identify beginning and end target stringuse wildcard instead acceptable character rangesother",
                "child_of": [
                    "185"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "194",
            "value": {
                "id": "194",
                "name": "Unexpected Sign Extension",
                "description": "The product performs an operation on a number that causes it to be sign extended when it is transformed into a larger data type. When the original number is negative, this can produce unexpected values that lead to resultant weaknesses.",
                "extended_description": "",
                "child_of": [
                    "681"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " other"
                ],
                "con_impacts": [
                    " read memory",
                    " modify memory",
                    " other"
                ],
                "con_note": " when unexpected sign extension occur code operate directly memory buffer , such size value or memory index , then could cause program to write or read boundary intend buffer . numeric value be associate application - level resource , such quantity or price product e - commerce site , then sign extension could produce value be much high ( or low ) application 's allowable range .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1098",
            "value": {
                "id": "1098",
                "name": "Data Element containing Pointer Item without Proper Copy Control Element",
                "description": "The code contains a data element with a pointer that does not have an associated copy or constructor method.",
                "extended_description": " issue can prevent product run reliably .   relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "1076"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1269",
            "value": {
                "id": "1269",
                "name": "Product Released in Non-Release Configuration",
                "description": "The product released to market is released in pre-production or manufacturing configuration.",
                "extended_description": " product pre - production or manufacturing stage be configure to have many debug hook and debug capability , include but not limit : ability to override / bypass various cryptographic check ( include authentication , authorization , and integrity)ability to read / write / modify / dump internal state ( include register and memory)ability to change system configurationsability to run hidden or private command be not allow production ( expose ip).the above be mean exhaustive list , but allude great capability and great state vulnerability product 's preproduction or manufacturing state . complexity increase when multiple party be involve execute test final production version . example , chipmaker might fabricate chip and run own preproduction test , follow chip would be deliver original equipment manufacturer ( oem ) , would now run second set different preproduction test same chip . only set activity be complete , can overall manufacturing phase be call \" complete \" and have \" manufacturing complete \" fuse blow . however , oem forget to blow manufacturing complete fuse , then system remain manufacturing stage , render system both expose and vulnerable .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control",
                    " accountability",
                    " authentication",
                    " authorization",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "13",
            "value": {
                "id": "13",
                "name": "ASP.NET Misconfiguration: Password in Configuration File",
                "description": "Storing a plaintext password in a configuration file allows anyone who can read the file access to the password-protected resource making them an easy target for attackers.",
                "extended_description": "",
                "child_of": [
                    "260"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "221",
            "value": {
                "id": "221",
                "name": "Information Loss or Omission",
                "description": "The product does not record, or improperly records, security-relevant information that leads to an incorrect decision or hampers later analysis.",
                "extended_description": " can be resultant , e.g. buffer overflow might trigger crash product can log event .",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " non - repudiation"
                ],
                "con_impacts": [
                    " hide activity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1221",
            "value": {
                "id": "1221",
                "name": "Incorrect Register Defaults or Module Parameters",
                "description": "Hardware description language code incorrectly defines register defaults or hardware Intellectual Property (IP) parameters to insecure values.",
                "extended_description": " integrated circuit and hardware ip software programmable control and setting be commonly store register circuit . register content have to be initialize hardware reset define default value be hard code hardware description language ( hdl ) code hardware unit . hardware descriptive language also support definition parameter variable , can be define code instantiation hardware ip module . such parameter be generally use to configure specific instance hardware ip design . system security setting hardware design can be affect incorrectly define default value or ip parameter . hardware ip would be insecure state power reset , and can be expose or exploit untrusted software run system . register default and parameter be hardcode value , can not be change use software or firmware patch but must be change hardware silicon . thus , such security issue be considerably more difficult to address later lifecycle . hardware design can have large number such parameter and register default setting , and be important to have design tool support to check setting automate way and be able to identify setting be security sensitive .",
                "child_of": [
                    "665"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": " degradation system functionality , or loss access control enforcement can occur .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "183",
            "value": {
                "id": "183",
                "name": "Permissive List of Allowed Inputs",
                "description": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are explicitly allowed by policy because the inputs are assumed to be safe, but the list is too permissive - that is, it allows an input that is unsafe, leading to resultant weaknesses.",
                "extended_description": "",
                "child_of": [
                    "697"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [
                    " allowlist / allow list",
                    " safelist / safe list",
                    " whitelist / white list"
                ],
                "alt_desc": [
                    " be use cwe and capec instead other commonly - use term .   counterpart be denylist .",
                    " be often use security tool such firewall , email or web gateway , proxy , etc .",
                    " term be frequently use , but usage have be decline organization have start to adopt other term ."
                ]
            }
        },
        {
            "name": "1100",
            "value": {
                "id": "1100",
                "name": "Insufficient Isolation of System-Dependent Functions",
                "description": "The product or code does not isolate system-dependent functionality into separate standalone modules.",
                "extended_description": " issue make more difficult to maintain and/or port product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1061"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "555",
            "value": {
                "id": "555",
                "name": "J2EE Misconfiguration: Plaintext Password in Configuration File",
                "description": "The J2EE application stores a plaintext password in a configuration file.",
                "extended_description": " store plaintext password configuration file allow can read file to access password - protect resource , make easy target attacker .",
                "child_of": [
                    "260"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "29",
            "value": {
                "id": "29",
                "name": "Path Traversal: '\\..\\filename'",
                "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
                "extended_description": " allow attacker to traverse file system to access file or directory be restricted directory . be similar cwe-25 , use \" \\ \" instead \" / \" . sometimes program check \" .. \\ \" beginning input , so \" \\ .. \\ \" can bypass check . be also useful bypass path traversal protection scheme only assume \" / \" separator be valid .",
                "child_of": [
                    "23"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "39",
            "value": {
                "id": "39",
                "name": "Path Traversal: 'C:dirname'",
                "description": "The product accepts input that contains a drive letter or Windows volume letter ('C:dirname') that potentially redirects access to an unintended location or arbitrary file.",
                "extended_description": "",
                "child_of": [
                    "36"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " modify files or directory",
                    " read files or directory",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " attacker may be able to overwrite , delete , or corrupt unexpected critical file such program , library , or important datum . may prevent software work at all and case protection mechanism such authentication , have potential to lockout user software .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1043",
            "value": {
                "id": "1043",
                "name": "Data Element Aggregating an Excessively Large Number of Non-Primitive Elements",
                "description": "The product uses a data element that has an excessively large number of sub-elements with non-primitive data types such as structures or aggregated objects.",
                "extended_description": " issue can make product perform more slowly .   relevant code be reachable attacker , then performance problem might introduce vulnerability . interpretation \" excessively large \" may vary product or developer , cisq recommend default 5 sub - element .",
                "child_of": [
                    "1093"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "110",
            "value": {
                "id": "110",
                "name": "Struts: Validator Without Form Field",
                "description": "Validation fields that do not appear in forms they are associated with indicate that the validation logic is out of date.",
                "extended_description": " be easy developer to forget to update validation logic when make change actionform class . one indication validation logic be not be properly maintain be inconsistency action form and validation form . j2ee application be not generally susceptible memory corruption attack , j2ee application interface native code do not perform array bound check , attacker may be able to use input validation mistake j2ee application to launch buffer overflow attack .",
                "child_of": [
                    "1164"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": " be critically important validation logic be maintain and keep sync rest application . unchecked input be root cause today 's bad and most common software security problem . cross - site scripting , sql injection , and process control vulnerability stem incomplete or absent input validation .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "568",
            "value": {
                "id": "568",
                "name": "finalize() Method Without super.finalize()",
                "description": "The product contains a finalize() method that does not call super.finalize().",
                "extended_description": " java language specification state be good practice finalize ( ) method to call super.finalize ( ) .",
                "child_of": [
                    "573",
                    "459"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1122",
            "value": {
                "id": "1122",
                "name": "Excessive Halstead Complexity",
                "description": "The code is structured in a way that a Halstead complexity measure exceeds a desirable maximum.",
                "extended_description": " variety halstead complexity measure exist , such program vocabulary size or volume . issue make more difficult to understand and/or maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1120"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1087",
            "value": {
                "id": "1087",
                "name": "Class with Virtual Method without a Virtual Destructor",
                "description": "A class contains a virtual method, but the method does not have an associated virtual destructor.",
                "extended_description": " issue can prevent product run reliably , e.g. due undefined behavior .   relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "1076"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "534",
            "value": {
                "id": "534",
                "name": "DEPRECATED: Information Exposure Through Debug Log Files",
                "description": "This entry has been deprecated because its abstraction was too low-level. SeeCWE-532.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "655",
            "value": {
                "id": "655",
                "name": "Insufficient Psychological Acceptability",
                "description": "The product has a protection mechanism that is too difficult or inconvenient to use, encouraging non-malicious users to disable or bypass the mechanism, whether by accident or on purpose.",
                "extended_description": "",
                "child_of": [
                    "657",
                    "693"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": " bypass security mechanism , user might leave system less secure state intend administrator , make more susceptible compromise .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "914",
            "value": {
                "id": "914",
                "name": "Improper Control of Dynamically-Identified Variables",
                "description": "The product does not properly restrict reading from or writing to dynamically-identified variables.",
                "extended_description": " many language offer powerful feature allow programmer to access arbitrary variable be specify input string . feature can offer significant flexibility and reduce development time , can be extremely dangerous attacker can modify unintended variable have security implication .",
                "child_of": [
                    "99",
                    "913"
                ],
                "con_scope": [
                    " integrity",
                    " integrity",
                    " other",
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data",
                    " execute unauthorized code or command",
                    " varie context",
                    " alter execution logic"
                ],
                "con_note": " attacker could modify sensitive datum or program variable .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "93",
            "value": {
                "id": "93",
                "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
                "description": "The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.",
                "extended_description": "",
                "child_of": [
                    "74"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1021",
            "value": {
                "id": "1021",
                "name": "Improper Restriction of Rendered UI Layers or Frames",
                "description": "The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.",
                "extended_description": " web application be expect to place restriction be allow to be render frame , iframe , object , embed or applet element . restriction , user can be trick interact application when be not intend .",
                "child_of": [
                    "441",
                    "451"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " read application data",
                    " modify application data"
                ],
                "con_note": " attacker can trick user perform action be mask and hide user 's view . impact vary widely , depend functionality underlying application . example , social medium application , clickjacke could be use to trik user change privacy setting .",
                "alt_term": [
                    " clickjacke",
                    " ui redress attack",
                    " tapjacke"
                ],
                "alt_desc": [
                    " \" tapjacke \" be similar clickjacke , be use mobile application user \" tap \" application instead perform mouse click ."
                ]
            }
        },
        {
            "name": "791",
            "value": {
                "id": "791",
                "name": "Incomplete Filtering of Special Elements",
                "description": "The product receives data from an upstream component, but does not completely filter special elements before sending it to a downstream component.",
                "extended_description": "",
                "child_of": [
                    "790"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "340",
            "value": {
                "id": "340",
                "name": "Generation of Predictable Numbers or Identifiers",
                "description": "The product uses a scheme that generates numbers or identifiers that are more predictable than required.",
                "extended_description": "",
                "child_of": [
                    "330"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "304",
            "value": {
                "id": "304",
                "name": "Missing Critical Step in Authentication",
                "description": "The product implements an authentication technique, but it skips a step that weakens the technique.",
                "extended_description": " authentication technique should follow algorithm define exactly , otherwise authentication can be bypass or more easily subject brute force attack .",
                "child_of": [
                    "303",
                    "573"
                ],
                "con_scope": [
                    " access control",
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " read application data",
                    " execute unauthorized code or command"
                ],
                "con_note": " weakness can lead exposure resource or functionality unintended actor , possibly provide attacker sensitive information or allow attacker to execute arbitrary code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "927",
            "value": {
                "id": "927",
                "name": "Use of Implicit Intent for Sensitive Communication",
                "description": "The Android application uses an implicit intent for transmitting sensitive data to other applications.",
                "extended_description": " implicit intent do not specify particular application to receive datum , application can process intent use intent filter intent . can allow untrusted application to obtain sensitive datum . be two variation standard broadcast intent , ordered and sticky . order broadcast intent be deliver series register receiver order priority declare receivers . malicious receiver can give high priority and cause denial service stop broadcast propagate far chain . be also possibility malicious datum modification , receiver may also alter datum intent pass on next receiver . downstream component have way assert datum have not be alter early chain . sticky broadcast intent remain accessible initial broadcast . old sticky intent will be broadcast again new receiver register future , greatly increase chance information exposure time . also , sticky broadcast can not be protect permission may apply other kind intent . addition , broadcast intent may include uri reference datum receive component do not normally have privilege access . sender intent can include special privilege grant receiver read or write access specific uri include intent . malicious receiver intercept intent will also gain privilege and be able to read or write resource specified uri .",
                "child_of": [
                    "285",
                    "668"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " varie context"
                ],
                "con_note": " application may handle response untrusted application device , could cause to perform unexpected or unauthorized action .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "664",
            "value": {
                "id": "664",
                "name": "Improper Control of a Resource Through its Lifetime",
                "description": "The product does not maintain or incorrectly maintains control over a resource throughout its lifetime of creation, use, and release.",
                "extended_description": " resource often have explicit instruction how to be create , use and destroy . when code do not follow instruction , can lead unexpected behavior and potentially exploitable state . even explicit instruction , various principle be expect to be adhere , such \" do not use object creation be complete , \" or \" do not use object have be slate destruction . \"",
                "child_of": [],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "155",
            "value": {
                "id": "155",
                "name": "Improper Neutralization of Wildcards or Matching Symbols",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as wildcards or matching symbols when they are sent to a downstream component.",
                "extended_description": " datum be parse , inject element may cause process to take unexpected action .",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "291",
            "value": {
                "id": "291",
                "name": "Reliance on IP Address for Authentication",
                "description": "The product uses an IP address for authentication.",
                "extended_description": " ip address can be easily spoof . attacker can forge source ip address packet send , but response packet will return forged ip address . to see response packet , attacker have to sniff traffic victim machine and forged ip address . order to accomplish require sniffing , attacker typically attempt to locate same subnet victim machine . attacker may be able to circumvent requirement use source routing , but source routing be disable much internet today . summary , ip address verification can be useful part authentication scheme , but should not be single factor require authentication .",
                "child_of": [
                    "290",
                    "923",
                    "471"
                ],
                "con_scope": [
                    " access control",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " hide activity",
                    " gain privileges or assume identity"
                ],
                "con_note": " malicious user can fake authentication information , impersonate ip address .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "653",
            "value": {
                "id": "653",
                "name": "Improper Isolation or Compartmentalization",
                "description": "The product does not properly compartmentalize or isolate functionality, processes, or resources that require different privilege levels, rights, or permissions.",
                "extended_description": " when weakness occur functionality be accessible lower - privileged user , then strong boundary , attack might extend scope damage high - privileged user .",
                "child_of": [
                    "657",
                    "693"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " bypass protection mechanism"
                ],
                "con_note": " exploitation weakness low - privileged area software can be leverage to reach high - privileged area have to overcome additional obstacle .",
                "alt_term": [
                    " separation privilege"
                ],
                "alt_desc": [
                    " people and publication use term \" separation privilege \" to describe weakness , but term have dual meaning current usage . node conflict original definition \" separation privilege \" saltzer and schroeder ; original definition be more closely associate cwe-654 . be multiple interpretation , use \" separation privilege \" term be discourage ."
                ]
            }
        },
        {
            "name": "1209",
            "value": {
                "id": "1209",
                "name": "Failure to Disable Reserved Bits",
                "description": "The reserved bits in a hardware design are not disabled prior to production. Typically, reserved bits are used for future capabilities and should not support any functional logic in the design. However, designers might covertly use these bits to debug or further develop new capabilities in production hardware. Adversaries with access to these bits will write to them in hopes of compromising hardware state.",
                "extended_description": " reserve bit be label such can be allocate later purpose . be not to do current design .   however , designer might want to use bit to debug or control / configure future capability to help minimize time market ( ttm ) . logic be control bit be still enable production , adversary could use logic to induce unwanted / unsupported behavior hardware .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control",
                    " accountability",
                    " authentication",
                    " authorization",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": " type weakness depend capability logic be control or configure reserve bit",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1253",
            "value": {
                "id": "1253",
                "name": "Incorrect Selection of Fuse Values",
                "description": "The logic level used to set a system to a secure state relies on a fuse being unblown. An attacker can set the system to an insecure state merely by blowing the fuse.",
                "extended_description": " fuse be often use to store secret datum , include security configuration datum . when not blow , fuse be consider to store logic 0 , and , when blow , indicate logic 1 . fuse be generally consider to be one - directional , i.e. , once blow to logic 1 , can not be reset logic 0 . however , logic use to determine system - security state ( leverage value sense fuse ) use negative logic , attacker might blow fuse and drive system insecure state .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " access control",
                    " authorization",
                    " availability",
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " dos : crash , exit , or restart",
                    " read memory",
                    " modify memory",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1224",
            "value": {
                "id": "1224",
                "name": "Improper Restriction of Write-Once Bit Fields",
                "description": "The hardware design control register \"sticky bits\" or write-once bit fields are improperly implemented, such that they can be reprogrammed by software.",
                "extended_description": " integrated circuit and hardware ip software programmable control and setting be commonly store register circuit . register content have to be initialize hardware reset to define default value be hard code hardware description language ( hdl ) code hardware unit . common security protection method use to protect register setting modification software be to make setting write - once or \" sticky . \" allow write such register only once , whereupon become read - only . be useful to allow initial boot software configure system setting to secure value block runtime software modify such hardware setting . failure to implement write - once restriction hardware design can expose such register be re - program software and write multiple time . example , write - once field could be implement to only be write - protect have be set to value \" 1 \" , wherein would work \" write-1 - once \" and not \" write - once \" .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": " system configuration can not be program secure way .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "596",
            "value": {
                "id": "596",
                "name": "DEPRECATED: Incorrect Semantic Object Comparison",
                "description": "This weakness has been deprecated. It was poorly described and difficult to distinguish from other entries. It was also inappropriate to assign a separate ID solely because of domain-specific considerations. Its closest equivalent isCWE-1023.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1243",
            "value": {
                "id": "1243",
                "name": "Sensitive Non-Volatile Information Not Protected During Debug",
                "description": "Access to security-sensitive information stored in fuses is not limited during debug.",
                "extended_description": " several security - sensitive value be program fuse to be use early - boot flow or later runtime . example security - sensitive value include root key , encryption key , manufacturing - specific information , chip - manufacturer - specific information , and original - equipment - manufacturer ( oem ) datum . chip be power , value be sense fuse and store temporary location such register and local memory . location be typically access - control protect untrusted agent capable access . even trust agent , only read - access be provide . however , location be not block debug operation , allow user to access sensitive information .",
                "child_of": [
                    "1263"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control"
                ],
                "con_impacts": [
                    " modify memory",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "669",
            "value": {
                "id": "669",
                "name": "Incorrect Resource Transfer Between Spheres",
                "description": "The product does not properly transfer a resource/behavior to another sphere, or improperly imports a resource/behavior from another sphere, in a manner that provides unintended control over that resource.",
                "extended_description": "",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data",
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1069",
            "value": {
                "id": "1069",
                "name": "Empty Exception Block",
                "description": "An invokable code block contains an exception handling block that does not contain any code, i.e. is empty.",
                "extended_description": " when exception handling block ( such catch and finally block ) be use , but block be empty , can prevent product run reliably .   relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "1071"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "84",
            "value": {
                "id": "84",
                "name": "Improper Neutralization of Encoded URI Schemes in a Web Page",
                "description": "The web application improperly neutralizes user-controlled input for executable script disguised with URI encodings.",
                "extended_description": "",
                "child_of": [
                    "79"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "311",
            "value": {
                "id": "311",
                "name": "Missing Encryption of Sensitive Data",
                "description": "The product does not encrypt sensitive or critical information before storage or transmission.",
                "extended_description": " lack proper datum encryption pass up guarantee confidentiality , integrity , and accountability properly implement encryption convey .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " confidentiality",
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": " omit use encryption program transfer datum network kind should be consider par deliver datum send user local network both sender and receiver . bad , omission allow injection datum stream communication two party -- mean victim to separate valid datum invalid . day widespread network attack and password collection sniffer , be unnecessary risk to omit encryption design system might benefit .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "705",
            "value": {
                "id": "705",
                "name": "Incorrect Control Flow Scoping",
                "description": "The product does not properly return control flow to the proper location after it has completed a task or detected an unusual condition.",
                "extended_description": "",
                "child_of": [
                    "691"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " alter execution logic",
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "531",
            "value": {
                "id": "531",
                "name": "Inclusion of Sensitive Information in Test Code",
                "description": "Accessible test applications can pose a variety of security risks. Since developers or administrators rarely consider that someone besides themselves would even know about the existence of these applications, it is common for them to contain sensitive information or functions.",
                "extended_description": "",
                "child_of": [
                    "540"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "45",
            "value": {
                "id": "45",
                "name": "Path Equivalence: 'file...name' (Multiple Internal Dot)",
                "description": "The product accepts path input in the form of multiple internal dot ('file...dir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "44",
                    "165"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1241",
            "value": {
                "id": "1241",
                "name": "Use of Predictable Algorithm in Random Number Generator",
                "description": "The device uses an algorithm that is predictable and generates a pseudo-random number.",
                "extended_description": "",
                "child_of": [
                    "330"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "26",
            "value": {
                "id": "26",
                "name": "Path Traversal: '/dir/../filename'",
                "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"/dir/../filename\" sequences that can resolve to a location that is outside of that directory.",
                "extended_description": " allow attacker to traverse file system to access file or directory be restricted directory . ' /dir/ .. /filename ' manipulation be useful bypass path traversal protection scheme . sometimes program only check \" .. / \" beginning input , so \" / .. / \" can bypass check .",
                "child_of": [
                    "23"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "75",
            "value": {
                "id": "75",
                "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)",
                "description": "The product does not adequately filter user-controlled input for special elements with control implications.",
                "extended_description": "",
                "child_of": [
                    "74"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " modify application data",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1293",
            "value": {
                "id": "1293",
                "name": "Missing Source Correlation of Multiple Independent Data",
                "description": "The product relies on one source of data, preventing the ability to detect if an adversary has compromised a data source.",
                "extended_description": " to operate successfully , product sometimes have to implicitly trust integrity information source . when information be implicitly sign , can ensure datum be not tamper transit . do not ensure information source be not compromise when respond request . request information multiple source , can check datum be same . be not , system should report information source respond different or minority value potentially compromise . be not enough answer to provide majority or plurality response , system should report source potentially compromise . seriousness impact incorrect integrity increase , so should number independent information source would need to be query .",
                "child_of": [
                    "345"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data",
                    " gain privileges or assume identity"
                ],
                "con_note": " attacker may be able to execute single person - - - middle attack can subvert check external oracle ( e.g. acme protocol check file website ) , and thus inject arbitrary reply single perspective request external oracle .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "279",
            "value": {
                "id": "279",
                "name": "Incorrect Execution-Assigned Permissions",
                "description": "While it is executing, the product sets the permissions of an object in a way that violates the intended permissions that have been specified by the user.",
                "extended_description": "",
                "child_of": [
                    "732"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "285",
            "value": {
                "id": "285",
                "name": "Improper Authorization",
                "description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
                "extended_description": " assume user give identity , authorization be process determine user can access give resource , base user 's privilege and permission or other access - control specification apply resource . when access control check be not apply consistently - or not at all - user be able to access datum or perform action should not be allow to perform . can lead wide range problem , include information exposure , denial service , and arbitrary code execution .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " read files or directory",
                    " modify application data",
                    " modify files or directory",
                    " gain privileges or assume identity"
                ],
                "con_note": " attacker could gain privilege modify or read critical datum directly , or access insufficiently - protect , privileged functionality .",
                "alt_term": [
                    " authz"
                ],
                "alt_desc": [
                    " \" authz \" be typically use abbreviation \" authorization \" web application security community . be distinct \" authn \" ( or , sometimes , \" authc \" ) be abbreviation \" authentication . \" use \" auth \" abbreviation be discourage , could be use authentication or authorization ."
                ]
            }
        },
        {
            "name": "53",
            "value": {
                "id": "53",
                "name": "Path Equivalence: '\\multiple\\\\internal\\backslash'",
                "description": "The product accepts path input in the form of multiple internal backslash ('\\multiple\\trailing\\\\slash') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "41",
                    "165"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "674",
            "value": {
                "id": "674",
                "name": "Uncontrolled Recursion",
                "description": "The product does not properly control the amount of recursion that takes place, consuming excessive resources, such as allocated memory or the program stack.",
                "extended_description": "",
                "child_of": [
                    "834"
                ],
                "con_scope": [
                    " availability",
                    " confidentiality"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " read application data"
                ],
                "con_note": " case , application 's interpreter might kill process or thread appear to be consume too much resource , such php 's memory_limit setting . when interpreter kill process / thread , might report error contain detailed information such application 's installation path .",
                "alt_term": [
                    " stack exhaustion"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "392",
            "value": {
                "id": "392",
                "name": "Missing Report of Error Condition",
                "description": "The product encounters an error but does not provide a status code or return value to indicate that an error has occurred.",
                "extended_description": "",
                "child_of": [
                    "755",
                    "684"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " varie context",
                    " unexpected state"
                ],
                "con_note": " error be not properly report could place system unexpected state could lead unintended behavior .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "820",
            "value": {
                "id": "820",
                "name": "Missing Synchronization",
                "description": "The product utilizes a shared resource in a concurrent manner but does not attempt to synchronize access to the resource.",
                "extended_description": " access share resource be not synchronize , then resource may not be state be expect product . might lead unexpected or insecure behavior , especially attacker can influence share resource .",
                "child_of": [
                    "662"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " other"
                ],
                "con_impacts": [
                    " modify application data",
                    " read application data",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "507",
            "value": {
                "id": "507",
                "name": "Trojan Horse",
                "description": "The product appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.",
                "extended_description": "",
                "child_of": [
                    "506"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1080",
            "value": {
                "id": "1080",
                "name": "Source Code File with Excessive Number of Lines of Code",
                "description": "A source code file has too many lines of code.",
                "extended_description": " issue make more difficult to understand and/or maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability . interpretation \" too many line code \" may vary product or developer , cisq recommend default threshold value 1000 .",
                "child_of": [
                    "1120"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "474",
            "value": {
                "id": "474",
                "name": "Use of Function with Inconsistent Implementations",
                "description": "The code uses a function that has inconsistent implementations across operating systems and versions.",
                "extended_description": " use inconsistent implementation can cause change behavior when code be port or build different environment programmer expect , can lead security problem case . implementation many function vary platform , and time , even different version same platform . implementation difference can include : slight difference way parameter be interpret lead inconsistent result . implementation function carry significant security risk . function might not be define platform . function might change return code can provide , or change meaning return code .",
                "child_of": [
                    "758"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "119",
            "value": {
                "id": "119",
                "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
                "description": "The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.",
                "extended_description": " certain language allow direct addressing memory location and do not automatically ensure location be valid memory buffer be be reference . can cause read or write operation to be perform memory location may be associate other variable , datum structure , or internal program datum . result , attacker may be able to execute arbitrary code , alter intend control flow , read sensitive information , or cause system to crash .",
                "child_of": [
                    "118"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " availability",
                    " confidentiality",
                    " confidentiality"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " modify memory",
                    " read memory",
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " read memory"
                ],
                "con_note": " case out - - bound read , attacker may have access sensitive information . sensitive information contain system detail , such current buffer position memory , knowledge can be use to craft further attack , possibly more severe consequence .",
                "alt_term": [
                    " buffer overflow",
                    " buffer overrun",
                    " memory safety"
                ],
                "alt_desc": [
                    " term have many different meaning different audience .   cwe mapping perspective , term should be avoid where possible . researcher , developer , and tool intend to mean \" write end buffer , \" other use same term to mean \" read or write boundary buffer , beginning buffer or end buffer . \"   still other use same term could mean \" action end buffer , be read or write . \" term be commonly use exploitation and vulnerability , far confuse thing .",
                    " prominent vendor and researcher use term \" buffer overrun , \" but most people use \" buffer overflow . \" see alternate term \" buffer overflow \" context .",
                    " generally use technique avoid weakness relate memory access , such identify cwe-119 and descendant . however , term be not formal , and be likely disagreement practitioner weakness be implicitly cover \" memory safety \" term ."
                ]
            }
        },
        {
            "name": "1089",
            "value": {
                "id": "1089",
                "name": "Large Data Table with Excessive Number of Indices",
                "description": "The product uses a large data table that contains an excessively large number of indices.",
                "extended_description": " issue can make product perform more slowly .   relevant code be reachable attacker , then performance problem might introduce vulnerability . interpretation \" large datum table \" and \" excessively large number index \" may vary product or developer , cisq recommend default threshold 1000000 row \" large \" table and default threshold 3 index .",
                "child_of": [
                    "405"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1327",
            "value": {
                "id": "1327",
                "name": "Binding to an Unrestricted IP Address",
                "description": "The product assigns the address 0.0.0.0 for a database server, a cloud service/instance, or any computing resource that communicates remotely.",
                "extended_description": " when server bind address 0.0.0.0 , allow connection ip address local machine , effectively expose server possible network . might be much broad access intend developer or administrator , might only be expect server to be reachable single interface / network .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : amplification"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "839",
            "value": {
                "id": "839",
                "name": "Numeric Range Comparison Without Minimum Check",
                "description": "The product checks a value to ensure that it is less than or equal to a maximum, but it does not also verify that the value is greater than or equal to the minimum.",
                "extended_description": " product use sign integer or float even when value be only expect to be positive or 0 . input validation check might assume value be positive , and only check maximum value . value be negative , but code assume value be positive , can produce error . error may have security consequence negative value be use memory allocation , array access , buffer access , etc . ultimately , error could lead buffer overflow or other type memory corruption . use negative number positive - only context could have security implication other type resource . example , shopping cart might check user be not request more 10 item , but request -3 item could cause application to calculate negative price and credit attacker 's account .",
                "child_of": [
                    "1023"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " availability",
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data",
                    " execute unauthorized code or command",
                    " dos : resource consumption ( other )",
                    " modify memory",
                    " read memory"
                ],
                "con_note": " negative value be use to access memory , buffer , or other indexable structure , could access memory bound buffer .",
                "alt_term": [
                    " sign comparison"
                ],
                "alt_desc": [
                    " \" sign comparison \" term be often use to describe when product use sign variable and check to ensure be less maximum value ( typically maximum buffer size ) , but do not verify be great 0 ."
                ]
            }
        },
        {
            "name": "501",
            "value": {
                "id": "501",
                "name": "Trust Boundary Violation",
                "description": "The product mixes trusted and untrusted data in the same data structure or structured message.",
                "extended_description": " trust boundary can be think line draw program . one side line , datum be untrusted . other side line , datum be assume to be trustworthy . purpose validation logic be to allow datum to safely cross trust boundary - to move untrusted trust . trust boundary violation occur when program blur line be trust and be untrusted . combine trusted and untrusted datum same data structure , become easy programmer to mistakenly trust unvalidated datum .",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "785",
            "value": {
                "id": "785",
                "name": "Use of Path Manipulation Function without Maximum-sized Buffer",
                "description": "The product invokes a function for normalizing paths or file names, but it provides an output buffer that is smaller than the maximum possible size, such as PATH_MAX.",
                "extended_description": " pass inadequately - sized output buffer path manipulation function can result buffer overflow . such function include realpath ( ) , readlink ( ) , pathappend ( ) , and other .",
                "child_of": [
                    "676",
                    "120"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " modify memory",
                    " execute unauthorized code or command",
                    " dos : crash , exit , or restart"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "775",
            "value": {
                "id": "775",
                "name": "Missing Release of File Descriptor or Handle after Effective Lifetime",
                "description": "The product does not release a file descriptor or handle after its effective lifetime has ended, i.e., after the file descriptor/handle is no longer needed.",
                "extended_description": " when file descriptor or handle be not release use ( typically explicitly close ) , attacker can cause denial service consume available file descriptor / handle , or otherwise prevent other system process obtain own file descriptor / handle .",
                "child_of": [
                    "772"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( other )"
                ],
                "con_note": " attacker can influence allocation resource be not properly release could deplete available resource pool and prevent other process access same type resource .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "116",
            "value": {
                "id": "116",
                "name": "Improper Encoding or Escaping of Output",
                "description": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
                "extended_description": " improper encoding or escaping can allow attacker to change command be send component , insert malicious command instead . most product follow certain protocol use structured message communication component , such query or command . structured message can contain raw datum intersperse metadata or control information . example , \" get /index.html http/1.1 \" be structured message contain command ( \" get \" ) single argument ( \" /index.html \" ) and metadata which protocol version be be use ( \" http/1.1\").if application use attacker - supply input to construct structured message properly encode or escaping , then attacker could insert special character will cause datum to be interpret control information or metadata . consequently , component receive output will perform wrong operation , or otherwise interpret datum incorrectly .",
                "child_of": [
                    "707"
                ],
                "con_scope": [
                    " integrity",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control",
                    " confidentiality"
                ],
                "con_impacts": [
                    " modify application data",
                    " execute unauthorized code or command",
                    " bypass protection mechanism"
                ],
                "con_note": " communication component can be modify unexpected way . unexpected command can be execute , bypass other security mechanism . incoming datum can be misinterpret .",
                "alt_term": [
                    " output sanitization",
                    " output validation",
                    " output encoding"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "72",
            "value": {
                "id": "72",
                "name": "Improper Handling of Apple HFS+ Alternate Data Stream Path",
                "description": "The product does not properly handle special paths that may identify the data or resource fork of a file on the HFS+ file system.",
                "extended_description": " product choose action to take base file name , then attacker provide datum or resource fork , product may take unexpected action . far , product intend to restrict access file , then attacker might still be able to bypass intend access restriction request datum or resource fork file .",
                "child_of": [
                    "66"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1285",
            "value": {
                "id": "1285",
                "name": "Improper Validation of Specified Index, Position, or Offset in Input",
                "description": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.",
                "extended_description": " often , indexable resource such memory buffer or file can be access use specific position , index , or offset , such index array or position file .   when untrusted input be not properly validate be use index , attacker could access ( or attempt to access ) unauthorized portion resource .   could be use to cause buffer overflow , excessive resource allocation , or trigger unexpected failure . \n\t\t\t\t",
                "child_of": [
                    "20"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "749",
            "value": {
                "id": "749",
                "name": "Exposed Dangerous Method or Function",
                "description": "The product provides an Applications Programming Interface (API) or similar interface for interaction with external actors, but the interface includes a dangerous method or function that is not properly restricted.",
                "extended_description": " weakness can lead wide variety resultant weakness , depend behavior expose method . can apply number technology and approach , such activex control , java function , ioctl , and so on . exposure can occur few different way : function / method be never intend to be expose outside actor . function / method be only intend to be accessible limited set actor , such internet - base access single web site .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " read application data",
                    " modify application data",
                    " execute unauthorized code or command",
                    " other"
                ],
                "con_note": " expose critical functionality essentially provide attacker privilege level expose functionality . could result modification or exposure sensitive datum or possibly even execution arbitrary code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1044",
            "value": {
                "id": "1044",
                "name": "Architecture with Number of Horizontal Layers Outside of Expected Range",
                "description": "The product's architecture contains too many - or too few - horizontal layers.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability . interpretation \" expect range \" may vary product or developer , cisq recommend default minimum 4 layer and maximum 8 layer .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1189",
            "value": {
                "id": "1189",
                "name": "Improper Isolation of Shared Resources on System-on-a-Chip (SoC)",
                "description": "The System-On-a-Chip (SoC) does not properly isolate shared resources between trusted and untrusted agents.",
                "extended_description": " system - - - chip ( soc ) have lot functionality , but may have limited number pin or pad . pin can only perform one function time . however , can be configure to perform multiple different function . technique be call pin multiplexing . similarly , several resource chip may be share multiplex and support different feature or function . when such resource be share trusted and untrusted agent , untrusted agent may be able to access asset intend to be access only trust agent .",
                "child_of": [
                    "653",
                    "668"
                ],
                "con_scope": [
                    " access control",
                    " integrity"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " quality degradation"
                ],
                "con_note": " functionality share resource may be intentionally degrade .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1251",
            "value": {
                "id": "1251",
                "name": "Mirrored Regions with Different Values",
                "description": "The product's architecture mirrors regions without ensuring that their contents always stay in sync.",
                "extended_description": " having mirror region different value might result exposure sensitive information or possibly system compromise . interest increase performance , might need to duplicate resource . cache memory be common example concept , keep \" local \" copy data element high speed cache memory . unfortunately , speed improvement come downside , product need to ensure local copy always mirror original copy truthfully . get sync , computational result be no long true . hardware design , memory be not only item gets mirror . be many other entity get mirror , as well : register , memory region , and , case , even whole computational unit . example , multi - core processor , memory access and core go single memory - management unit ( mmu ) then mmu will become performance bottleneck . such case , duplicate local mmu will serve only subset core rather may resolve performance issue . local copy be also call \" shadow copy \" or \" mirror copy . \"if original resource never change , local duplicate copy get sync would never be issue . however , value original copy will sometimes change . when original copy change , mirror copy must also change , and change fast . situation shadow - copy - possibly - - - sync - - original - copy might occur result multiple scenario , include following : \n\t\t\t\t value original copy change , reason original copy do not send \" update \" request shadow copy . value original copy change , original copy dutifully send \" update \" request shadow copy , but reason shadow copy do not \" execute \" update request . value original copy change , original copy send \" update \" request shadow copy , and shadow copy execute update request faithfully . however , small time period when original copy have \" new \" value and shadow copy be still hold \" old \" value , attacker can exploit old value . then become race condition attacker and update process can reach target , shadow copy first , and , attacker reach first , attacker win . attacker might send \" spoofed \" update request target shadow copy , pretend update request be come original copy . spoof request might cause target shadow copy to update value attacker - friendly value , original copy remain unchanged attacker . suppose situation where original copy have system revert back original value do not hear back all shadow copy such copy have successfully complete update request . such case , attack might occur follow : ( 1 ) original copy might send update request ; ( 2 ) shadow copy update ; ( 3 ) shadow copy send back successful completion message ; ( 4 ) separate issue , attacker be able to intercept shadow copy 's completion message . case , original copy think update do not succeed , hence revert original value . now be situation where original copy have \" old \" value , and shadow copy have \" new \" value .",
                "child_of": [
                    "1250"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control",
                    " accountability",
                    " authentication",
                    " authorization",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "480",
            "value": {
                "id": "480",
                "name": "Use of Incorrect Operator",
                "description": "The product accidentally uses the wrong operator, which changes the logic in security-relevant ways.",
                "extended_description": " type error be generally result typo programmer .",
                "child_of": [
                    "670"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " alter execution logic"
                ],
                "con_note": " weakness can cause unintended logic to be execute and other unexpected application behavior .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "575",
            "value": {
                "id": "575",
                "name": "EJB Bad Practices: Use of AWT Swing",
                "description": "The product violates the Enterprise JavaBeans (EJB) specification by using AWT/Swing.",
                "extended_description": " enterprise javabeans specification require bean provider follow set programming guideline design to ensure bean will be portable and behave consistently ejb container . case , product violate following ejb guideline : \" enterprise bean must not use awt functionality to attempt to output information display , or to input information keyboard . \" specification justify requirement following way : \" most server do not allow direct interaction application program and keyboard / display attach server system . \"",
                "child_of": [
                    "695"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "528",
            "value": {
                "id": "528",
                "name": "Exposure of Core Dump File to an Unauthorized Control Sphere",
                "description": "The product generates a core dump file in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.",
                "extended_description": "",
                "child_of": [
                    "552"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data",
                    " read files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "687",
            "value": {
                "id": "687",
                "name": "Function Call With Incorrectly Specified Argument Value",
                "description": "The product calls a function, procedure, or routine, but the caller specifies an argument that contains the wrong value, which may lead to resultant weaknesses.",
                "extended_description": "",
                "child_of": [
                    "628"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1057",
            "value": {
                "id": "1057",
                "name": "Data Access Operations Outside of Expected Data Manager Component",
                "description": "The product uses a dedicated, central data manager component as required by design, but it contains code that performs data-access operations that do not use this data manager.",
                "extended_description": " issue can make product perform more slowly intend , intend central datum manager may have be explicitly optimize performance or other quality characteristic .   relevant code be reachable attacker , then performance problem might introduce vulnerability .",
                "child_of": [
                    "1061"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "247",
            "value": {
                "id": "247",
                "name": "DEPRECATED: Reliance on DNS Lookups in a Security Decision",
                "description": "This entry has been deprecated because it was a duplicate ofCWE-350. All content has been transferred toCWE-350.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "117",
            "value": {
                "id": "117",
                "name": "Improper Output Neutralization for Logs",
                "description": "The product does not neutralize or incorrectly neutralizes output that is written to logs.",
                "extended_description": " can allow attacker to forge log entry or inject malicious content log . log forge vulnerability occur when : datum enter application untrusted source . datum be write application or system log file .",
                "child_of": [
                    "116"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " modify application data",
                    " hide activity",
                    " execute unauthorized code or command"
                ],
                "con_note": " interpretation log file may be hinder or misdirect attacker can supply datum application be subsequently log verbatim . most benign case , attacker may be able to insert false entry log file provide application input include appropriate character . forge or otherwise corrupt log file can be use to cover attacker 's track , possibly skew statistic , or even to implicate party commission malicious act . log file be process automatically , attacker can render file unusable corrupt format file or inject unexpected character . attacker may inject code or other command log file and take advantage vulnerability log processing utility .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "25",
            "value": {
                "id": "25",
                "name": "Path Traversal: '/../filedir'",
                "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"/../\" sequences that can resolve to a location that is outside of that directory.",
                "extended_description": " allow attacker to traverse file system to access file or directory be restricted directory . sometimes program check \" .. / \" beginning input , so \" / .. / \" can bypass check .",
                "child_of": [
                    "23"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "268",
            "value": {
                "id": "268",
                "name": "Privilege Chaining",
                "description": "Two distinct privileges, roles, capabilities, or rights can be combined in a way that allows an entity to perform unsafe actions that would not be allowed without that combination.",
                "extended_description": "",
                "child_of": [
                    "269"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " user can be give or gain access right user . can give user unauthorized access sensitive information include access information user .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "329",
            "value": {
                "id": "329",
                "name": "Generation of Predictable IV with CBC Mode",
                "description": "The product generates and uses a predictable initialization Vector (IV) with Cipher Block Chaining (CBC) Mode, which causes algorithms to be susceptible to dictionary attacks when they are encrypted under the same key.",
                "extended_description": " cbc mode eliminate weakness electronic code \n\t    book ( ecb ) mode allow identical plaintext block to \n\t    be encrypt different ciphertext block . be \n\t    possible xor - ing iv initial plaintext \n\t    block plaintext block chain be xor'd \n\t    different value encryption . iv be \n\t    reuse , then identical plaintext would be encrypt \n\t    identical ciphertext . however , even iv be not \n\t    identical but be predictable , then still break \n\t    security cbc mode chosen plaintext attacks \n\t    ( cpa ) .",
                "child_of": [
                    "1204",
                    "573"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " iv be not properly initialize , datum be encrypt can be compromise and leak information .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1323",
            "value": {
                "id": "1323",
                "name": "Improper Management of Sensitive Trace Data",
                "description": "Trace data collected from several sources on the System-on-Chip (SoC) is stored in unprotected locations or transported to untrusted agents.",
                "extended_description": " to facilitate verification complex system - - chip \n                     ( soc ) design , soc integrator add specific ip block \n                     trace soc 's internal signal real - time . \n                     infrastructure enable observability soc 's internal \n                     behavior , validation functional design , \n                     and detection hardware and software bug . such tracing \n                     ip block collect trace several source soc \n                     include cpu , crypto coprocessor , and - chip fabric . trace collect source be then \n                     aggregate trace ip block and forward to trace \n                     sink , such debug - trace port facilitate debugging \n                     external hardware and software debugger . \n                     trace be collect several security - sensitive \n                     source , must be protect untrusted \n                     debugger . be store unprotected memory , \n                     untrusted software debugger can access trace and \n                     extract secret information . additionally , \n                     security - sensitive trace be not tag secure , \n                     untrusted hardware debugger might access to extract \n                     confidential information .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read memory"
                ],
                "con_note": " adversary can read secret value be capture debug trace and store unsafely .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "24",
            "value": {
                "id": "24",
                "name": "Path Traversal: '../filedir'",
                "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"../\" sequences that can resolve to a location that is outside of that directory.",
                "extended_description": " allow attacker to traverse file system to access file or directory be restricted directory . \" .. / \" manipulation be canonical manipulation operating system use \" / \" directory separator , such unix- and linux - base system . case , be useful bypass protection scheme environment \" / \" be support but not primary separator , such windows , use \" \\ \" but can also accept \" / \" .",
                "child_of": [
                    "23"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1025",
            "value": {
                "id": "1025",
                "name": "Comparison Using Wrong Factors",
                "description": "The code performs a comparison between two entities, but the comparison examines the wrong factors or characteristics of the entities, which can lead to incorrect results and resultant weaknesses.",
                "extended_description": " can lead incorrect result and resultant weakness .   example , code might inadvertently compare reference object , instead relevant content object , cause two \" equal \" object to be consider unequal .",
                "child_of": [
                    "697"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "123",
            "value": {
                "id": "123",
                "name": "Write-what-where Condition",
                "description": "Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.",
                "extended_description": "",
                "child_of": [
                    "787"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control",
                    " integrity",
                    " availability",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " modify memory",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " dos : crash , exit , or restart",
                    " bypass protection mechanism",
                    " dos : crash , exit , or restart",
                    " modify memory",
                    " bypass protection mechanism",
                    " other"
                ],
                "con_note": " when consequence be arbitrary code execution , can often be use to subvert other security service .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "488",
            "value": {
                "id": "488",
                "name": "Exposure of Data Element to Wrong Session",
                "description": "The product does not sufficiently enforce boundaries between the states of different sessions, causing data to be provided to, or used by, the wrong session.",
                "extended_description": " datum can \" bleed \" one session member variable singleton object , such servlets , and object share pool . case servlets , developer sometimes do not understand , servlet implement singlethreadmodel interface , servlet be singleton ; be only one instance servlet , and single instance be use and re - used to handle multiple request be process simultaneously different thread . common result be developer use servlet member field such way one user may inadvertently see user 's datum . other word , store user datum servlet member field introduce datum access race condition .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "670",
            "value": {
                "id": "670",
                "name": "Always-Incorrect Control Flow Implementation",
                "description": "The code contains a control flow path that does not reflect the algorithm that the path is intended to implement, leading to incorrect behavior any time this path is navigated.",
                "extended_description": " weakness capture case particular code segment be always incorrect respect algorithm be implement . example , c programmer intend to include multiple statement single block but do not include enclose brace ( cwe-483 ) , then logic be always incorrect . issue be contrast most weakness code usually behave correctly , when be externally manipulate malicious way .",
                "child_of": [
                    "691"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "188",
            "value": {
                "id": "188",
                "name": "Reliance on Data/Memory Layout",
                "description": "The product makes invalid assumptions about how protocol data or memory is organized at a lower level, resulting in unintended program behavior.",
                "extended_description": " when change platform or protocol version , - memory organization datum may change unintended way . example , architecture may place local variable a and b right next other top ; may place next other b top ; and other may add padding . padding size may vary to ensure variable be align proper word size . protocol implementation , be common to calculate offset relative field to pick out specific piece datum . exceptional condition , often involve new protocol version , may add corner case change datum layout unusual way . result can be implementation access unintended field packet , treat datum one type datum type .",
                "child_of": [
                    "1105",
                    "435"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory"
                ],
                "con_note": " can result unintended modification or exposure sensitive memory .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "187",
            "value": {
                "id": "187",
                "name": "Partial String Comparison",
                "description": "The product performs a comparison that only examines a portion of a factor before determining whether there is a match, such as a substring, leading to resultant weaknesses.",
                "extended_description": " example , attacker might succeed authentication provide small password match associated portion large , correct password .",
                "child_of": [
                    "1023"
                ],
                "con_scope": [
                    " integrity",
                    " access control"
                ],
                "con_impacts": [
                    " alter execution logic",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "619",
            "value": {
                "id": "619",
                "name": "Dangling Database Cursor ('Cursor Injection')",
                "description": "If a database cursor is not closed properly, then it could become accessible to other users while retaining the same privileges that were originally assigned, leaving the cursor \"dangling.\"",
                "extended_description": " example , improper dangle cursor could arise unhandled exception . impact issue depend cursor 's role , but sql injection attack be commonly possible .",
                "child_of": [
                    "402"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "684",
            "value": {
                "id": "684",
                "name": "Incorrect Provision of Specified Functionality",
                "description": "The code does not function according to its published specifications, potentially leading to incorrect usage.",
                "extended_description": " when provide functionality external party , be important product behave accordance detail specify . when requirement nuance be not document , functionality may produce unintended behavior caller , possibly lead exploitable state .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "420",
            "value": {
                "id": "420",
                "name": "Unprotected Alternate Channel",
                "description": "The product protects a primary channel, but it does not use the same level of protection for an alternate channel.",
                "extended_description": "",
                "child_of": [
                    "923"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1062",
            "value": {
                "id": "1062",
                "name": "Parent Class with References to Child Class",
                "description": "The code has a parent class that contains references to a child class, its methods, or its members.",
                "extended_description": " issue can prevent product run reliably .   relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "1061"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "553",
            "value": {
                "id": "553",
                "name": "Command Shell in Externally Accessible Directory",
                "description": "A possible shell file exists in /cgi-bin/ or other accessible directories. This is extremely dangerous and can be used by an attacker to execute commands on the web server.",
                "extended_description": "",
                "child_of": [
                    "552"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "121",
            "value": {
                "id": "121",
                "name": "Stack-based Buffer Overflow",
                "description": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
                "extended_description": "",
                "child_of": [
                    "788",
                    "787"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " modify memory",
                    " execute unauthorized code or command",
                    " bypass protection mechanism",
                    " modify memory",
                    " execute unauthorized code or command",
                    " bypass protection mechanism",
                    " other"
                ],
                "con_note": " when consequence be arbitrary code execution , can often be use to subvert other security service .",
                "alt_term": [
                    " stack overflow"
                ],
                "alt_desc": [
                    " \" stack overflow \" be often use to mean same thing stack - base buffer overflow , however be also use occasion to mean stack exhaustion , usually result excessively recursive function call . ambiguity term , use stack overflow to describe circumstance be discourage ."
                ]
            }
        },
        {
            "name": "666",
            "value": {
                "id": "666",
                "name": "Operation on Resource in Wrong Phase of Lifetime",
                "description": "The product performs an operation on a resource at the wrong phase of the resource's lifecycle, which can lead to unexpected behaviors.",
                "extended_description": " resource 's lifecycle include several phase : initialization , use , and release . phase , be important to follow specification outline how to operate resource and to ensure resource be expect phase . otherwise , resource be one phase but operation be not valid phase ( i.e. , incorrect phase resource 's lifetime ) , then can produce resultant weakness . example , use resource have be fully initialize could cause corruption or incorrect datum to be use .",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "362",
            "value": {
                "id": "362",
                "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
                "description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
                "extended_description": " can have security implication when expect synchronization be security - critical code , such record user be authenticate or modify important state information should not be influence outsider . race condition occur concurrent environment , and be effectively property code sequence . depend context , code sequence may be form function call , small number instruction , series program invocation , etc . race condition violate property , be closely relate : exclusivity - code sequence be give exclusive access share resource , i.e. , other code sequence can modify property share resource original sequence have complete execution . atomicity - code sequence be behaviorally atomic , i.e. , other thread or process can concurrently execute same sequence instruction ( or subset ) same resource . race condition exist when \" interfere code sequence \" can still access share resource , violate exclusivity . programmer may assume certain code sequence execute too quickly to be affect interfere code sequence ; when be not , violate atomicity . example , single \" x++ \" statement may appear atomic code layer , but be actually non - atomic instruction layer , involve read ( original value x ) , follow computation ( x+1 ) , follow write ( save result interfere code sequence could be \" trust \" or \" untrusted . \" trust interfere code sequence occur product ; can not be modify attacker , and can only be invoke indirectly . untrusted interfere code sequence can be author directly attacker , and typically be external vulnerable product .",
                "child_of": [
                    "691"
                ],
                "con_scope": [
                    " availability",
                    " availability",
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : resource consumption ( other )",
                    " dos : crash , exit , or restart",
                    " dos : instability",
                    " read files or directory",
                    " read application data"
                ],
                "con_note": " when race condition be combine predictable resource name and loose permission , may be possible attacker to overwrite or access confidential datum ( cwe-59 ) .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "34",
            "value": {
                "id": "34",
                "name": "Path Traversal: '....//'",
                "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....//' (doubled dot dot slash) sequences that can resolve to a location that is outside of that directory.",
                "extended_description": " allow attacker to traverse file system to access file or directory be restricted directory . ' .... // ' manipulation be useful bypass path traversal protection scheme . \" .. / \" be filter sequential fashion , do regular expression engine , then \" .... // \" can collapse \" .. / \" unsafe value ( cwe-182 ) . could also be useful when \" .. \" be remove , operating system treat \" // \" and \" / \" equivalent .",
                "child_of": [
                    "23"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "201",
            "value": {
                "id": "201",
                "name": "Insertion of Sensitive Information Into Sent Data",
                "description": "The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.",
                "extended_description": " sensitive information could include datum be sensitive and ( such credential or private message ) , or otherwise useful further exploitation system ( such internal file system structure ) . \n\t ",
                "child_of": [
                    "200"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read files or directory",
                    " read memory",
                    " read application data"
                ],
                "con_note": " sensitive datum may be expose attacker .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "668",
            "value": {
                "id": "668",
                "name": "Exposure of Resource to Wrong Sphere",
                "description": "The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.",
                "extended_description": " resource such file and directory may be inadvertently expose mechanism such insecure permission , or when program accidentally operate wrong object . example , program may intend private file can only be provide specific user . effectively define control sphere be intend to prevent attacker access private file . file permission be insecure , then party other user will be able to access file . separate control sphere might effectively require user can only access private file , but not other file system . program do not ensure user be only request private file , then user might be able to access other file system . case , end result be resource have be expose wrong party .",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data",
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "229",
            "value": {
                "id": "229",
                "name": "Improper Handling of Values",
                "description": "The product does not properly handle when the expected number of values for parameters, fields, or arguments is not provided in input, or if those values are undefined.",
                "extended_description": "",
                "child_of": [
                    "228"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1279",
            "value": {
                "id": "1279",
                "name": "Cryptographic Operations are run Before Supporting Units are Ready",
                "description": "Performing cryptographic operations without ensuring that the supporting inputs are ready to supply valid data may compromise the cryptographic result.",
                "extended_description": " many cryptographic hardware unit depend other hardware unit to supply information to produce securely encrypt result . example , cryptographic unit depend external random - number - generator ( rng ) unit entropy must wait rng unit be produce random number . cryptographic unit retrieve private encryption key fuse unit , fuse unit must be up and run key may be supply . \n\t\t\t",
                "child_of": [
                    "665"
                ],
                "con_scope": [
                    " access control",
                    " confidentiality",
                    " integrity",
                    " availability",
                    " accountability",
                    " authentication",
                    " authorization",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "592",
            "value": {
                "id": "592",
                "name": "DEPRECATED: Authentication Bypass Issues",
                "description": "This weakness has been deprecated because it covered redundant concepts already described inCWE-287.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "508",
            "value": {
                "id": "508",
                "name": "Non-Replicating Malicious Code",
                "description": "Non-replicating malicious code only resides on the target system or product that is attacked; it does not attempt to spread to other systems.",
                "extended_description": "",
                "child_of": [
                    "507"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "576",
            "value": {
                "id": "576",
                "name": "EJB Bad Practices: Use of Java I/O",
                "description": "The product violates the Enterprise JavaBeans (EJB) specification by using the java.io package.",
                "extended_description": " enterprise javabeans specification require bean provider follow set programming guideline design to ensure bean will be portable and behave consistently ejb container . case , product violate following ejb guideline : \" enterprise bean must not use java.io package to attempt to access file and directory file system . \" specification justify requirement following way : \" file system api be not well - suit business component access datum . business component should use resource manager api , such jdbc , to store datum . \"",
                "child_of": [
                    "695"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1239",
            "value": {
                "id": "1239",
                "name": "Improper Zeroization of Hardware Register",
                "description": "The hardware product does not properly clear sensitive information from built-in registers when the user of the hardware block changes.",
                "extended_description": " hardware logic operate datum store register local hardware block . most hardware ip , include cryptographic accelerator , rely register to buffer i / o , store intermediate value , and interface software . result be sensitive information , such password or encryption key , can exist location not transparent user hardware logic . when different entity obtain access ip change operating mode or condition , new entity can extract information belong previous user mechanism be place clear register content . be important to clear information store hardware physical attack product be detect , or user hardware block change . process clearing register content hardware ip be refer zeroization standard cryptographic hardware module such fips-140 - 2 [ ref-267 ] .",
                "child_of": [
                    "226"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": " consequence will depend information disclose vulnerability .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "565",
            "value": {
                "id": "565",
                "name": "Reliance on Cookies without Validation and Integrity Checking",
                "description": "The product relies on the existence or values of cookies when performing security-critical operations, but it does not properly ensure that the setting is valid for the associated user.",
                "extended_description": " attacker can easily modify cookie , browser or implement client - side code browser . reliance cookie detailed validation and integrity checking can allow attacker to bypass authentication , conduct injection attack such sql injection and cross - site scripting , or otherwise modify input unexpected way .",
                "child_of": [
                    "642",
                    "602"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " be dangerous to use cookie to set user 's privilege . cookie can be manipulate to escalate attacker 's privilege administrative level .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "647",
            "value": {
                "id": "647",
                "name": "Use of Non-Canonical URL Paths for Authorization Decisions",
                "description": "The product defines policy namespaces and makes authorization decisions based on the assumption that a URL is canonical. This can allow a non-canonical URL to bypass the authorization.",
                "extended_description": " application define policy namespace and make authorization decision base url , but do not require or convert canonical url make authorization decision , then open application to attack . example , application only want to allow access http://www.example.com/mypage , then attacker might be able to bypass restriction use equivalent url such : http://www.example.com / mypagehttp://www.example.com/%6dypage ( alternate encoding)http://192.168.1.1 / mypage ( ip address)http://www.example.com / mypage/ ( trail /)http://www.example.com:80 / mypagetherefore be important to specify access control policy be base path information canonical form alternate encoding reject ( can be accomplish default deny rule ) .",
                "child_of": [
                    "863"
                ],
                "con_scope": [
                    " access control",
                    " confidentiality"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " read files or directory"
                ],
                "con_note": " non - canonical url be use , server may choose to return content file , instead pre - process file ( e.g. program ) .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "67",
            "value": {
                "id": "67",
                "name": "Improper Handling of Windows Device Names",
                "description": "The product constructs pathnames from user input, but it does not handle or incorrectly handles a pathname containing a Windows device name such as AUX or CON. This typically leads to denial of service or an information exposure when the application attempts to process the pathname as a regular file.",
                "extended_description": " not properly handle virtual filename ( e.g. aux , con , prn , com1 , lpt1 ) can result different type vulnerability . case attacker can request device injection virtual filename url , may cause error lead denial service or error page reveal sensitive information . product allow device name to bypass filtering run risk attacker inject malicious code file name device .",
                "child_of": [
                    "66"
                ],
                "con_scope": [
                    " availability",
                    " confidentiality",
                    " other"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " read application data",
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "432",
            "value": {
                "id": "432",
                "name": "Dangerous Signal Handler not Disabled During Sensitive Operations",
                "description": "The product uses a signal handler that shares state with other signal handlers, but it does not properly mask or prevent those signal handlers from being invoked while the original signal handler is still running.",
                "extended_description": " execution signal handler , can be interrupt handler when different signal be send . two handler share state - such global variable - then attacker can corrupt state send signal first handler have complete execution .",
                "child_of": [
                    "364"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "544",
            "value": {
                "id": "544",
                "name": "Missing Standardized Error Handling Mechanism",
                "description": "The product does not use a standardized method for handling errors throughout the code, which might introduce inconsistent error handling and resultant weaknesses.",
                "extended_description": " product handle error message individually , one - - one basis , be likely to result inconsistent error handling . cause error may be lose . also , detailed information cause error may be unintentionally return user .",
                "child_of": [
                    "755"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " quality degradation",
                    " unexpected state",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "126",
            "value": {
                "id": "126",
                "name": "Buffer Over-read",
                "description": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.",
                "extended_description": " typically occur when pointer or index be incremente position bound buffer or when pointer arithmetic result position valid memory location to name few . may result exposure sensitive information or possibly crash .",
                "child_of": [
                    "125",
                    "788"
                ],
                "con_scope": [
                    " confidentiality",
                    " confidentiality"
                ],
                "con_impacts": [
                    " read memory",
                    " bypass protection mechanism"
                ],
                "con_note": " read - - bound memory , attacker might be able to get secret value , such memory address , can be bypass protection mechanism such aslr order to improve reliability and likelihood exploit separate weakness to achieve code execution instead just denial service .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "676",
            "value": {
                "id": "676",
                "name": "Use of Potentially Dangerous Function",
                "description": "The product invokes a potentially dangerous function that could introduce a vulnerability if it is used incorrectly, but the function can also be used safely.",
                "extended_description": "",
                "child_of": [
                    "1177"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context",
                    " quality degradation",
                    " unexpected state"
                ],
                "con_note": " function be use incorrectly , then could result security problem .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1055",
            "value": {
                "id": "1055",
                "name": "Multiple Inheritance from Concrete Classes",
                "description": "The product contains a class with inheritance from more than one concrete class.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1093"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "912",
            "value": {
                "id": "912",
                "name": "Hidden Functionality",
                "description": "The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators.",
                "extended_description": " hide functionality can take many form , such intentionally malicious code , \" easter eggs \" contain extraneous functionality such game , developer - friendly shortcut reduce maintenance or support cost such hard - code account , etc . security perspective , even when functionality be not intentionally malicious or damaging , can increase product 's attack surface and expose additional weakness be already expose intend functionality . even be not easily accessible , hidden functionality could be useful attack modify control flow application .",
                "child_of": [
                    "684"
                ],
                "con_scope": [
                    " other",
                    " integrity"
                ],
                "con_impacts": [
                    " varie context",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "292",
            "value": {
                "id": "292",
                "name": "DEPRECATED: Trusting Self-reported DNS Name",
                "description": "This entry has been deprecated because it was a duplicate ofCWE-350. All content has been transferred toCWE-350.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "56",
            "value": {
                "id": "56",
                "name": "Path Equivalence: 'filedir*' (Wildcard)",
                "description": "The product accepts path input in the form of asterisk wildcard ('filedir*') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "41",
                    "155"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "662",
            "value": {
                "id": "662",
                "name": "Improper Synchronization",
                "description": "The product utilizes multiple threads or processes to allow temporary access to a shared resource that can only be exclusive to one process at a time, but it does not properly synchronize these actions, which might cause simultaneous accesses of this resource by multiple threads or processes.",
                "extended_description": " synchronization refer variety behavior and mechanism allow two or more independently - operate process or thread to ensure operate share resource predictable way do not interfere other .   share resource operation can not be execute atomically ; be , multiple step must be guarantee to execute sequentially , interference other process .   synchronization mechanism vary widely , but may include lock , mutexe , and semaphore .   when multi - step operation share resource can not be guarantee to execute independent interference , then result behavior can be unpredictable . improper synchronization could lead datum or memory corruption , denial service , etc .",
                "child_of": [
                    "664",
                    "691"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " other"
                ],
                "con_impacts": [
                    " modify application data",
                    " read application data",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "206",
            "value": {
                "id": "206",
                "name": "Observable Internal Behavioral Discrepancy",
                "description": "The product performs multiple behaviors that are combined to produce a single result, but the individual behaviors are observable separately in a way that allows attackers to reveal internal state or internal decision points.",
                "extended_description": " ideally , product should provide little information possible attacker .   hint attacker may be make progress can then be use to simplify or optimize attack .   example , login procedure require username and password , ultimately be only one decision : success or failure .   however , internally , two separate action be perform : determine username exist , and check password be correct .   product behave differently base username exist or not , then attacker only need to concentrate password . \n\t ",
                "child_of": [
                    "205"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1118",
            "value": {
                "id": "1118",
                "name": "Insufficient Documentation of Error Handling Techniques",
                "description": "The documentation does not sufficiently describe the techniques that are used for error handling, exception processing, or similar mechanisms.",
                "extended_description": " documentation may need to cover error handle technique multiple layer , such module , executable , compilable code unit , or callable .",
                "child_of": [
                    "1059"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "837",
            "value": {
                "id": "837",
                "name": "Improper Enforcement of a Single, Unique Action",
                "description": "The product requires that an actor should only be able to perform an action once, or to have only one unique action, but the product does not enforce or improperly enforces this restriction.",
                "extended_description": " various application , user be only expect to perform certain action once , such voting , request refund , or make purchase . when restriction be not enforce , sometimes can have security implication . example , voting application , attacker could attempt to \" stuff ballot box \" vote multiple time . vote be count separately , then attacker could directly affect win vote . could have significant business impact depend purpose product .",
                "child_of": [
                    "799"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [],
                "con_note": " attacker might be able to gain advantage other user perform action multiple time , or affect correctness product .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "606",
            "value": {
                "id": "606",
                "name": "Unchecked Input for Loop Condition",
                "description": "The product does not properly check inputs that are used for loop conditions, potentially leading to a denial of service or other consequences because of excessive looping.",
                "extended_description": "",
                "child_of": [
                    "1284"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "608",
            "value": {
                "id": "608",
                "name": "Struts: Non-private Field in ActionForm Class",
                "description": "An ActionForm class contains a field that has not been declared private, which can be accessed without using a setter or getter.",
                "extended_description": "",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " modify application data",
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1065",
            "value": {
                "id": "1065",
                "name": "Runtime Resource Management Control Element in a Component Built to Run on Application Servers",
                "description": "The product uses deployed components from application servers, but it also uses low-level functions/methods for management of resources, instead of the API provided by the application server.",
                "extended_description": " issue can prevent product run reliably .   relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1287",
            "value": {
                "id": "1287",
                "name": "Improper Validation of Specified Type of Input",
                "description": "The product receives input that is expected to be of a certain type, but it does not validate or incorrectly validates that the input is actually of the expected type.",
                "extended_description": " when input do not comply expect type , attacker could trigger unexpected error , cause incorrect action to take place , or exploit latent vulnerability would not be possible input conform expect type . weakness can appear type - unsafe programming language , or programming language support casting or conversion input type .",
                "child_of": [
                    "20"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "89",
            "value": {
                "id": "89",
                "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
                "description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.",
                "extended_description": " sufficient removal or quoting sql syntax user - controllable input , generate sql query can cause input to be interpret sql instead ordinary user datum . can be use to alter query logic to bypass security check , or to insert additional statement modify back - end database , possibly include execution system command . sql injection have become common issue database - drive web site . flaw be easily detect , and easily exploit , and such , site or product package even minimal user base be likely to be subject attempt attack kind . flaw depend fact sql make real distinction control and datum plane .",
                "child_of": [
                    "943"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control",
                    " access control",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " bypass protection mechanism",
                    " bypass protection mechanism",
                    " modify application data"
                ],
                "con_note": " just may be possible to read sensitive information , be also possible to make change or even delete information sql injection attack .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "624",
            "value": {
                "id": "624",
                "name": "Executable Regular Expression Error",
                "description": "The product uses a regular expression that either (1) contains an executable component with user-controlled inputs, or (2) allows a user to enable execution by inserting pattern modifiers.",
                "extended_description": " case ( 2 ) be possible php preg_replace ( ) function , and possibly other language when user - control input be insert string be later parse regular expression .",
                "child_of": [
                    "77"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "680",
            "value": {
                "id": "680",
                "name": "Integer Overflow to Buffer Overflow",
                "description": "The product performs a calculation to determine how much memory to allocate, but an integer overflow can occur that causes less memory to be allocated than expected, leading to a buffer overflow.",
                "extended_description": "",
                "child_of": [
                    "190"
                ],
                "con_scope": [
                    " integrity",
                    " availability",
                    " confidentiality"
                ],
                "con_impacts": [
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "761",
            "value": {
                "id": "761",
                "name": "Free of Pointer not at Start of Buffer",
                "description": "The product calls free() on a pointer to a memory resource that was allocated on the heap, but the pointer is not at the start of the buffer.",
                "extended_description": " can cause product to crash , or case , modify critical program variable or execute code . weakness often occur when memory be allocate explicitly heap one malloc ( ) family function and free ( ) be call , but pointer arithmetic have cause pointer to be interior or end buffer .",
                "child_of": [
                    "763"
                ],
                "con_scope": [
                    " integrity",
                    " availability",
                    " confidentiality"
                ],
                "con_impacts": [
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "609",
            "value": {
                "id": "609",
                "name": "Double-Checked Locking",
                "description": "The product uses double-checked locking to access a resource without the overhead of explicit synchronization, but the locking is insufficient.",
                "extended_description": " double - check locking refer situation where programmer check to see resource have be initialize , grab lock , check again to see resource have be initialize , and then perform initialization have not occur yet . should not be do , be not guarantee to work language and architecture . summary , other thread may not be operate synchronous block and be not guarantee to see operation execute same order would appear synchronous block .",
                "child_of": [
                    "667"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " modify application data",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "218",
            "value": {
                "id": "218",
                "name": "DEPRECATED: Failure to provide confidentiality for stored data",
                "description": "This weakness has been deprecated because it was a duplicate ofCWE-493. All content has been transferred toCWE-493.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1045",
            "value": {
                "id": "1045",
                "name": "Parent Class with a Virtual Destructor and a Child Class without a Virtual Destructor",
                "description": "A parent class has a virtual destructor method, but the parent has a child class that does not have a virtual destructor.",
                "extended_description": " issue can prevent product run reliably , child might not perform essential destruction operation .   relevant code be reachable attacker , then reliability problem might introduce vulnerability , such memory leak ( cwe-401 ) .",
                "child_of": [
                    "1076"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "588",
            "value": {
                "id": "588",
                "name": "Attempt to Access Child of a Non-structure Pointer",
                "description": "Casting a non-structure type to a structure type and accessing a field can lead to memory access errors or data corruption.",
                "extended_description": "",
                "child_of": [
                    "704",
                    "758"
                ],
                "con_scope": [
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " modify memory",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " execution may end memory access error .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "164",
            "value": {
                "id": "164",
                "name": "Improper Neutralization of Internal Special Elements",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes internal special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
                "extended_description": " datum be parse , improperly handle internal special element may cause process to take unexpected action result attack .",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "246",
            "value": {
                "id": "246",
                "name": "J2EE Bad Practices: Direct Use of Sockets",
                "description": "The J2EE application directly uses sockets instead of using framework method calls.",
                "extended_description": " j2ee standard permit use socket only purpose communication legacy system when high - level protocol be available . author own communication protocol require wrestle difficult security issue . significant scrutiny security expert , chance be good custom communication protocol will suffer security problem . many same issue apply custom implementation standard protocol . be usually more resource available address security concern relate implement standard protocol , resource be also available attacker .",
                "child_of": [
                    "695"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "20",
            "value": {
                "id": "20",
                "name": "Improper Input Validation",
                "description": "The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.",
                "extended_description": " input validation be frequently - use technique \n\t    check potentially dangerous input order to \n\t    ensure input be safe processing \n\t    code , or when communicate other component .   when \n\t    software do not validate input properly , attacker be \n\t    able to craft input form be not expect \n\t    rest application . will lead part \n\t    system receive unintended input , may result \n\t    alter control flow , arbitrary control resource , or \n\t    arbitrary code execution . input validation be not only technique \n\t    processing input , however .   other technique attempt to \n\t    transform potentially - dangerous input safe , such \n\t    filtering ( cwe-790 ) - attempt to remove dangerous \n\t    input - or encoding / escape ( cwe-116 ) , attempt to \n\t    ensure input be not misinterpret when be include \n\t    output component . other technique exist as well \n\t    ( see cwe-138 more examples.)input validation can be apply : raw data - string , number , parameter , file content , etc.metadata - information raw datum , such header or sizedata can be simple or structure .   structured datum \n\t    can be compose many nested layer , compose \n\t    combination metadata and raw datum , other simple or \n\t    structured datum . many property raw datum or metadata may need \n\t    to be validate entry code , such \n\t    : specify quantity such size , length , frequency , price , rate , number operation , time , etc.implie or derive quantity , such actual size file instead specify sizeindexe , offset , or position more complex datum structuressymbolic key or other element hash table , associative array , etc.well - formedness , i.e. syntactic correctness - compliance expect syntax lexical token correctness - compliance rule be treat tokenspecified or derive type - actual type input ( or input appear be)consistency - individual datum element , raw datum and metadata , reference , etc.conformance domain - specific rule , e.g. business logic equivalence - ensure equivalent input be treat sameauthenticity , ownership , or other attestation input , e.g. cryptographic signature to prove source dataimplied or derive property datum must often \n\t    be calculate or infer code .   error \n\t    deriving property may be consider contribute factor \n\t    improper input validation . \n\t    note \" input validation \" have very different \n\t    meaning different people , or different \n\t    classification scheme .   caution must be use when \n\t    reference cwe entry or mapping .   example , \n\t    weakness might involve inadvertently give control \n\t    attacker input when should not be able \n\t    to provide input at all , but sometimes be refer \n\t    input validation . finally , be important to emphasize \n\t    distinction input validation and output escaping \n\t    be often blur , and developer must be careful to \n\t    understand difference , include how input validation \n\t    be not always sufficient to prevent vulnerability , \n\t    especially when less stringent datum type must be \n\t    support , such free - form text . consider sql injection \n\t    scenario person 's last name be insert \n\t    query . name \" o'reilly \" would likely pass validation \n\t    step be common last name english \n\t    language . however , valid name can not be directly \n\t    insert database contain \" ' \" \n\t    apostrophe character , would need to be escape or \n\t    otherwise transform . case , remove \n\t    apostrophe might reduce risk sql injection , but \n\t    would produce incorrect behavior wrong name \n\t    would be record .",
                "child_of": [
                    "707"
                ],
                "con_scope": [
                    " availability",
                    " confidentiality",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " read memory",
                    " read files or directory",
                    " modify memory",
                    " execute unauthorized code or command"
                ],
                "con_note": " attacker could use malicious input to modify datum or possibly alter control flow unexpected way , include arbitrary command execution .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1078",
            "value": {
                "id": "1078",
                "name": "Inappropriate Source Code Style or Formatting",
                "description": "The source code does not follow desired style or formatting for indentation, white space, comments, etc.",
                "extended_description": "",
                "child_of": [
                    "1076"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "506",
            "value": {
                "id": "506",
                "name": "Embedded Malicious Code",
                "description": "The product contains code that appears to be malicious in nature.",
                "extended_description": " malicious flaw have acquire colorful name , include trojan horse , trapdoor , timebomb , and logic - bomb . developer might insert malicious code intent to subvert security product or host system time future . generally refer program perform useful service but exploit right program 's user way user do not intend .",
                "child_of": [
                    "912"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "196",
            "value": {
                "id": "196",
                "name": "Unsigned to Signed Conversion Error",
                "description": "The product uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value if the value of the unsigned primitive can not be represented using a signed primitive.",
                "extended_description": " less frequent issue sign - - unsigned conversion , unsigned - to - sign conversion can be perfect precursor dangerous buffer underwrite condition allow attacker to move stack where otherwise might not have access normal buffer overflow condition . buffer underwrite occur frequently when large unsigned value be cast sign value , and then use index buffer or pointer arithmetic .",
                "child_of": [
                    "681"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " modify memory",
                    " execute unauthorized code or command",
                    " bypass protection mechanism"
                ],
                "con_note": " improper sign - - unsigned conversion proper checking can sometimes trigger buffer overflow can be use to execute arbitrary code . be usually scope program 's implicit security policy .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1313",
            "value": {
                "id": "1313",
                "name": "Hardware Allows Activation of Test or Debug Logic at Runtime",
                "description": "During runtime, the hardware allows for test or debug logic (feature) to be activated, which allows for changing the state of the hardware. This feature can alter the intended behavior of the system and allow for alteration and leakage of sensitive data by an adversary.",
                "extended_description": " adversary can take advantage test or debug logic be make accessible hardware normal operation to modify intended behavior system . example , accessible test / debug mode may allow read / write access system datum . use error injection ( common test / debug feature ) transmit / receive operation bus , datum may be modify to produce unintended message . similarly , confidentiality could be compromise such feature allow access secret .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " dos : crash , exit , or restart",
                    " dos : instability",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : resource consumption ( other )",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " alter execution logic",
                    " quality degradation",
                    " unexpected state",
                    " reduce performance",
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1320",
            "value": {
                "id": "1320",
                "name": "Improper Protection for Outbound Error Messages and Alert Signals",
                "description": "Untrusted agents can disable alerts about signal conditions exceeding limits or the response mechanism that handles such alerts.",
                "extended_description": " hardware sensor be use to detect device be operate design limit . threshold value limit be set hardware fuse or trust software such bios .  \n\t\t\t\t modification limit may be protect hardware mechanism . when device sensor detect bind condition , alert signal may be generate remedial action , may take form device shutdown or throttling . warning signal be not properly secure may be disabled or use to generate spurious alert , cause degraded performance or denial - - service ( dos ) . \n\t\t\t\t alert may be mask untrusted software . example alert involve thermal and power sensor alert .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : instability",
                    " dos : crash , exit , or restart",
                    " reduce reliability",
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1038",
            "value": {
                "id": "1038",
                "name": "Insecure Automated Optimizations",
                "description": "The product uses a mechanism that automatically optimizes code, e.g. to improve a characteristic such as performance, but the optimizations can have an unintended side effect that might violate an intended security assumption.",
                "extended_description": "",
                "child_of": [
                    "435",
                    "758"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " alter execution logic"
                ],
                "con_note": " optimization alter order execution result side effect be not intend original developer .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1096",
            "value": {
                "id": "1096",
                "name": "Singleton Class Instance Creation without Proper Locking or Synchronization",
                "description": "The product implements a Singleton design pattern but does not use appropriate locking or other synchronization mechanism to ensure that the singleton class is only instantiated once.",
                "extended_description": " issue can prevent product run reliably , e.g. make instantiation process non - thread - safe and introduce deadlock ( cwe-833 ) or livelock condition .   relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "820"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1384",
            "value": {
                "id": "1384",
                "name": "Improper Handling of Physical or Environmental Conditions",
                "description": "The product does not properly handle unexpected physical or environmental conditions that occur naturally or are artificially induced.",
                "extended_description": " hardware product be typically only guarantee to behave correctly certain physical limit or environmental condition . such product can not necessarily control physical or external condition to be subject . however , inability to handle such condition can undermine product 's security . example , unexpected physical or environmental condition may cause flipping bit be use authentication decision . unexpected condition could occur naturally or be induce artificially adversary . physical or environmental condition concern be : atmospheric characteristic : extreme temperature range , etc . interference : electromagnetic interference ( emi ) , radio frequency interference ( rfi ) , etc . assorted light source : white light , ultra - violet light ( uv ) , laser , infrare ( ir ) , etc . power variance : - voltage , - voltage , under - current , - current , etc . clock variance : glitche , overclocking , clock stretching , etc . component aging and degradationmaterial manipulation : focus ion beam ( fib ) , etc . exposure radiation : x - ray , cosmic radiation , etc .",
                "child_of": [
                    "703"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " varie context",
                    " unexpected state"
                ],
                "con_note": " consequence weakness be highly dependent role affect component large product .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "401",
            "value": {
                "id": "401",
                "name": "Missing Release of Memory after Effective Lifetime",
                "description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
                "extended_description": " be often trigger improper handling malformed datum or unexpectedly interrupt session .   language , developer be responsible track memory allocation and release memory .   be more pointer or reference memory , then can no long be track and identify release .",
                "child_of": [
                    "772"
                ],
                "con_scope": [
                    " availability",
                    " other"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " dos : instability",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " reduce performance"
                ],
                "con_note": " most memory leak result general product reliability problem , but attacker can intentionally trigger memory leak , attacker might be able to launch denial service attack ( crash or hang program ) or take advantage other unexpected program behavior result low memory condition .",
                "alt_term": [
                    " memory leak"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "595",
            "value": {
                "id": "595",
                "name": "Comparison of Object References Instead of Object Contents",
                "description": "The product compares object references instead of the contents of the objects themselves, preventing it from detecting equivalent objects.",
                "extended_description": " example , java , compare object use = usually produce deceptive result , = = operator compare object reference rather value ; often , mean use = string be actually compare string ' reference , not value .",
                "child_of": [
                    "1025"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": " weakness can lead erroneous result can cause unexpected application behavior .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "289",
            "value": {
                "id": "289",
                "name": "Authentication Bypass by Alternate Name",
                "description": "The product performs authentication based on the name of a resource being accessed, or the name of the actor performing the access, but it does not properly check all possible names for that resource or actor.",
                "extended_description": "",
                "child_of": [
                    "1390"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1290",
            "value": {
                "id": "1290",
                "name": "Incorrect Decoding of Security Identifiers",
                "description": "The product implements a decoding mechanism to decode certain bus-transaction signals to security identifiers. If the decoding is implemented incorrectly, then untrusted agents can now gain unauthorized access to the asset.",
                "extended_description": " system - - chip ( soc ) , various integrate circuit and hardware engine generate transaction such access ( read / write ) asset or perform certain action ( e.g. , reset , fetch , compute , etc . ) . various type message information , typical transaction be comprise source identity ( to identify originator transaction ) and destination identity ( to route transaction respective entity ) . sometimes transaction be qualified security identifier . security identifier help destination agent decide set allow action ( e.g. , access asset read and write ) . decoder decode bus transaction to map security identifier necessary access - control / protection . common weakness can exist scenario be incorrect decode untrusted agent 's security identifier be decode trusted agent 's security identifier . thus , untrusted agent previously access asset can now gain access asset .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " dos : resource consumption ( other )",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1056",
            "value": {
                "id": "1056",
                "name": "Invokable Control Element with Variadic Parameters",
                "description": "A named-callable or method control element has a signature that supports a variable (variadic) number of parameters or arguments.",
                "extended_description": " issue can prevent product run reliably .   relevant code be reachable attacker , then reliability problem might introduce vulnerability . variadic argument , can be difficult or inefficient manual analysis to be certain which function / method be be invoke .",
                "child_of": [
                    "1120"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1095",
            "value": {
                "id": "1095",
                "name": "Loop Condition Value Update within the Loop",
                "description": "The product uses a loop with a control flow condition based on a value that is updated within the body of the loop.",
                "extended_description": " issue make more difficult to understand and/or maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1120"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "939",
            "value": {
                "id": "939",
                "name": "Improper Authorization in Handler for Custom URL Scheme",
                "description": "The product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.",
                "extended_description": " mobile platform and other architecture allow use custom url scheme to facilitate communication application . case ios , be only method to do inter - application communication . implementation be developer 's discretion may open security flaw application . example could be potentially dangerous functionality such modify file custom url scheme .",
                "child_of": [
                    "862"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "347",
            "value": {
                "id": "347",
                "name": "Improper Verification of Cryptographic Signature",
                "description": "The product does not verify, or incorrectly verifies, the cryptographic signature for data.",
                "extended_description": "",
                "child_of": [
                    "345"
                ],
                "con_scope": [
                    " access control",
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " modify application data",
                    " execute unauthorized code or command"
                ],
                "con_note": " attacker could gain access sensitive datum and possibly execute unauthorized code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "120",
            "value": {
                "id": "120",
                "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
                "description": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.",
                "extended_description": " buffer overflow condition exist when product attempt to put more datum buffer can hold , or when attempt to put datum memory area boundary buffer . simple type error , and most common cause buffer overflow , be \" classic \" case product copy buffer restrict how much be copy . other variant exist , but existence classic overflow strongly suggest programmer be not consider even most basic security protection .",
                "child_of": [
                    "119"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " availability"
                ],
                "con_impacts": [
                    " modify memory",
                    " execute unauthorized code or command",
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )"
                ],
                "con_note": " buffer overflow generally lead crash . other attack lead lack availability be possible , include put product infinite loop .",
                "alt_term": [
                    " classic buffer overflow",
                    " unbounded transfer"
                ],
                "alt_desc": [
                    " term be frequently use vulnerability researcher approximately 1995 2005 to differentiate buffer copy length check ( have be know decade ) other emerge weakness still involve invalid access buffer , vulnerability researcher begin to develop advanced exploitation technique ."
                ]
            }
        },
        {
            "name": "466",
            "value": {
                "id": "466",
                "name": "Return of Pointer Value Outside of Expected Range",
                "description": "A function can return a pointer to memory that is outside of the buffer that the pointer is expected to reference.",
                "extended_description": "",
                "child_of": [
                    "119"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read memory",
                    " modify memory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "192",
            "value": {
                "id": "192",
                "name": "Integer Coercion Error",
                "description": "Integer coercion refers to a set of flaws pertaining to the type casting, extension, or truncation of primitive data types.",
                "extended_description": " several flaw fall category integer coercion error . most part , error and result only availability and datum integrity issue . however , circumstance , may result other , more complicated security relate flaw , such buffer overflow condition .",
                "child_of": [
                    "681"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command",
                    " other"
                ],
                "con_note": " integer coercion error result incorrect value be store variable question .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "287",
            "value": {
                "id": "287",
                "name": "Improper Authentication",
                "description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
                "extended_description": "",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " gain privileges or assume identity",
                    " execute unauthorized code or command"
                ],
                "con_note": " weakness can lead exposure resource or functionality unintended actor , possibly provide attacker sensitive information or even execute arbitrary code .",
                "alt_term": [
                    " authentification",
                    " authn",
                    " authc"
                ],
                "alt_desc": [
                    " alternate term be \" authentification \" , appear to be most commonly use people non - english - speak country .",
                    " \" authn \" be typically use abbreviation \" authentication \" web application security community . be also distinct \" authz , \" be abbreviation \" authorization . \" use \" auth \" abbreviation be discourage , could be use authentication or authorization .",
                    " \" authc \" be use abbreviation \" authentication , \" but appear to use less frequently \" authn. \""
                ]
            }
        },
        {
            "name": "489",
            "value": {
                "id": "489",
                "name": "Active Debug Code",
                "description": "The product is deployed to unauthorized actors with debugging code still enabled or active, which can create unintended entry points or expose sensitive information.",
                "extended_description": " common development practice be to add \" back door \" code specifically design debug or testing purpose be not intend to be ship or deploy product . back door entry point create security risk be not consider design or testing and fall outside expected operating condition product .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " read application data",
                    " gain privileges or assume identity",
                    " varie context"
                ],
                "con_note": " severity expose debug application will depend particular instance . least , will give attacker sensitive information setting and mechanic web application server . bad , be often case , debug application will allow attacker complete control web application and server , as well confidential information access .",
                "alt_term": [
                    " leftover debug code"
                ],
                "alt_desc": [
                    " term originate seven pernicious kingdom"
                ]
            }
        },
        {
            "name": "693",
            "value": {
                "id": "693",
                "name": "Protection Mechanism Failure",
                "description": "The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.",
                "extended_description": " weakness cover three distinct situation . \" miss \" protection mechanism occur when application do not define mechanism certain class attack . \" insufficient \" protection mechanism might provide defense - example , most common attack - but do not protect be intend . finally , \" ignore \" mechanism occur when mechanism be available and active use product , but developer have not apply code path .",
                "child_of": [],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "36",
            "value": {
                "id": "36",
                "name": "Absolute Path Traversal",
                "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as \"/abs/path\" that can resolve to a location that is outside of that directory.",
                "extended_description": " allow attacker to traverse file system to access file or directory be restricted directory .",
                "child_of": [
                    "22"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " modify files or directory",
                    " read files or directory",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " attacker may be able to overwrite , delete , or corrupt unexpected critical file such program , library , or important datum . may prevent product work at all and case protection mechanism such authentication , have potential to lockout user product .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "622",
            "value": {
                "id": "622",
                "name": "Improper Validation of Function Hook Arguments",
                "description": "The product adds hooks to user-accessible API functions, but it does not properly validate the arguments. This could lead to resultant vulnerabilities.",
                "extended_description": " such hook can be use defensive software run privilege , such anti - virus or firewall , hook kernel call . when argument be not validate , could be use to bypass protection scheme or attack product .",
                "child_of": [
                    "20"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "537",
            "value": {
                "id": "537",
                "name": "Java Runtime Error Message Containing Sensitive Information",
                "description": "In many cases, an attacker can leverage the conditions that cause unhandled exception errors in order to gain unauthorized access to the system.",
                "extended_description": "",
                "child_of": [
                    "211"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1351",
            "value": {
                "id": "1351",
                "name": "Improper Handling of Hardware Behavior in Exceptionally Cold Environments",
                "description": "A hardware device, or the firmware running on it, is missing or has incorrect protection features to maintain goals of security primitives when the device is cooled below standard operating temperatures.",
                "extended_description": " hardware designer may improperly anticipate \n                     hardware behavior when expose exceptionally cold \n                     condition . result may introduce weakness not \n                     account modified behavior critical component \n                     when extreme environment . example change behavior be power loss \n                     will not clear / reset volatile state when cool \n                     standard operating temperature . may result \n                     weakness when start state volatile memory be \n                     be rely security decision . example , \n                     physical unclonable function ( puf ) may be supply \n                     security primitive to improve confidentiality , \n                     authenticity , and integrity guarantee . however , when \n                     puf be pair dram , sram , or temperature \n                     sensitive entropy source , system designer may introduce \n                     weakness fail to account choose entropy \n                     source 's behavior exceptionally low temperature . \n                     case dram and sram , when power be cycle low \n                     temperature , device will not contain bitwise \n                     biasing cause inconsistency manufacturing and will \n                     instead contain datum previous boot . should puf \n                     primitive be use cryptographic construction \n                     do not account full adversary control puf seed \n                     datum , weakness would arise . weakness do not cover \" cold boot attacks \" \n                     wherein ram or other external storage be super cooled and \n                     read externally attacker .",
                "child_of": [
                    "1384"
                ],
                "con_scope": [
                    " integrity",
                    " authentication"
                ],
                "con_impacts": [
                    " varie context",
                    " unexpected state"
                ],
                "con_note": " consequence weakness be highly contextual .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "306",
            "value": {
                "id": "306",
                "name": "Missing Authentication for Critical Function",
                "description": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
                "extended_description": " datum be migrate cloud , access do not require authentication , can be easy attacker to access datum anywhere internet .",
                "child_of": [
                    "287"
                ],
                "con_scope": [
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " other"
                ],
                "con_note": " expose critical functionality essentially provide attacker privilege level functionality . consequence will depend associated functionality , but can range read or modify sensitive datum , access administrative or other privileged functionality , or possibly even execution arbitrary code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "567",
            "value": {
                "id": "567",
                "name": "Unsynchronized Access to Shared Data in a Multithreaded Context",
                "description": "The product does not properly synchronize shared data, such as static variables across threads, which can lead to undefined behavior and unpredictable data changes.",
                "extended_description": " servlet , share static variable be not protect concurrent access , but servlet be multithreade . be typical programming mistake j2ee application , multithreading be handle framework . when share variable can be influence attacker , one thread could wind up modify variable to contain datum be not valid different thread be also use datum variable . note weakness be not unique servlet .",
                "child_of": [
                    "820"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data",
                    " dos : instability",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " share variable contain sensitive datum , may be manipulate or display user session . data be use to control application , value can be manipulate to cause application to crash or perform poorly .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "52",
            "value": {
                "id": "52",
                "name": "Path Equivalence: '/multiple/trailing/slash//'",
                "description": "The product accepts path input in the form of multiple trailing slash ('/multiple/trailing/slash//') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "41",
                    "163"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "443",
            "value": {
                "id": "443",
                "name": "DEPRECATED: HTTP response splitting",
                "description": "This weakness can be found atCWE-113.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "94",
            "value": {
                "id": "94",
                "name": "Improper Control of Generation of Code ('Code Injection')",
                "description": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
                "extended_description": " when product allow user 's input to contain code syntax , might be possible attacker to craft code such way will alter intend control flow product . such alteration could lead arbitrary code execution . injection problem encompass wide variety issue -- mitigate very different way . reason , most effective way to discuss weakness be to note distinct feature classify injection weakness . most important issue to note be injection problem share one thing common -- i.e. , allow injection control plane datum user - control data plane . mean execution process may be alter send code in legitimate datum channel , use other mechanism . buffer overflow , and many other flaw , involve use further issue to gain execution , injection problem need only datum to be parse . most classic instantiation category weakness be sql injection and format string vulnerability .",
                "child_of": [
                    "74",
                    "913"
                ],
                "con_scope": [
                    " access control",
                    " access control",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " execute unauthorized code or command",
                    " hide activity"
                ],
                "con_note": " often action perform inject control code be unlogged .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1286",
            "value": {
                "id": "1286",
                "name": "Improper Validation of Syntactic Correctness of Input",
                "description": "The product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.",
                "extended_description": " often , complex input be expect to follow particular syntax , be assume input , or declare metadata such header . syntax could be datum exchange format , markup language , or even programming language .   when untrusted input be not properly validate expect syntax , attacker could cause parse failure , trigger unexpected error , or expose latent vulnerability might not be directly exploitable input have conform syntax .",
                "child_of": [
                    "20"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1051",
            "value": {
                "id": "1051",
                "name": "Initialization with Hard-Coded Network Resource Configuration Data",
                "description": "The product initializes data using hard-coded values that act as network resource identifiers.",
                "extended_description": " issue can prevent product run reliably , e.g. run environment do not use hard - code network resource identifier . relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "665"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1093",
            "value": {
                "id": "1093",
                "name": "Excessively Complex Data Representation",
                "description": "The product uses an unnecessarily complex internal representation for its data structures or interrelationships between those structures.",
                "extended_description": " issue make more difficult to understand or maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other",
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability",
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "335",
            "value": {
                "id": "335",
                "name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
                "description": "The product uses a Pseudo-Random Number Generator (PRNG) but does not correctly manage seeds.",
                "extended_description": " prng be deterministic and , output appear \n\t\t    random , can not actually create entropy . rely \n\t\t    cryptographically secure and unique seed entropy so \n\t\t    proper seeding be critical secure operation \n\t\t    prng.management seed could be break down two main area : \n\t\t    ( 1 ) protect seed cryptographic material ( such cryptographic key ) ; \n\t\t\t  ( 2 ) whenever possible , use uniquely generate seed \n\t\t    cryptographically secure source \n\t\t\t  prng require seed input to generate stream \n\t\t\t    number be functionally indistinguishable \n\t\t\t    random number .   output be , many case , \n\t\t\t    sufficient cryptographic use , output \n\t\t\t    prng be directly determine seed provide \n\t\t\t    input . seed can be ascertain third party , \n\t\t\t    entire output prng can be make known \n\t\t\t    . such , seed should be keep secret and \n\t\t\t    should ideally not be able to be guess . example , \n\t\t\t    current time may be poor seed . know \n\t\t\t    approximate time prng be seed greatly reduce \n\t\t\t    possible key space . \n\t\t\t  seed do not necessarily need to be unique , but reuse seed may open up attack seed be discover . \n\t\t\t ",
                "child_of": [
                    "330"
                ],
                "con_scope": [
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " other"
                ],
                "con_note": " prng be use incorrectly , such use same seed initialization or use predictable seed , then attacker may be able to easily guess seed and thus random number . could lead unauthorized access system seed be use authentication and authorization .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "645",
            "value": {
                "id": "645",
                "name": "Overly Restrictive Account Lockout Mechanism",
                "description": "The product contains an account lockout protection mechanism, but the mechanism is too restrictive and can be triggered too easily, which allows attackers to deny service to legitimate users by causing their accounts to be locked out.",
                "extended_description": " account lockout be security feature often present application countermeasure brute force attack password base authentication mechanism system . certain number fail login attempt , user ' account may be disable certain period time or be unlock administrator . other security event may also possibly trigger account lockout . however , attacker may use very security feature to deny service legitimate system user . be therefore important to ensure account lockout security mechanism be not overly restrictive .",
                "child_of": [
                    "287"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( other )"
                ],
                "con_note": " user could be lock account .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "321",
            "value": {
                "id": "321",
                "name": "Use of Hard-coded Cryptographic Key",
                "description": "The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.",
                "extended_description": "",
                "child_of": [
                    "798"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": " hard - code cryptographic key be use , be almost certain malicious user will gain access account question .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "366",
            "value": {
                "id": "366",
                "name": "Race Condition within a Thread",
                "description": "If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined.",
                "extended_description": "",
                "child_of": [
                    "362"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " alter execution logic",
                    " unexpected state"
                ],
                "con_note": " main problem be -- lock be overcome -- datum could be alter bad state .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "176",
            "value": {
                "id": "176",
                "name": "Improper Handling of Unicode Encoding",
                "description": "The product does not properly handle when an input contains Unicode encoding.",
                "extended_description": "",
                "child_of": [
                    "172"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "207",
            "value": {
                "id": "207",
                "name": "Observable Behavioral Discrepancy With Equivalent Products",
                "description": "The product operates in an environment in which its existence or specific identity should not be known, but it behaves differently than other products with equivalent functionality, in a way that is observable to an attacker.",
                "extended_description": " many kind product , multiple product may be available perform same functionality , such web server , network interface , or intrusion detection system .   attacker often perform \" fingerprinting , \" use discrepancy order to identify which specific product be use .   once specific product have be identify , attack can be make more customized and efficient .   often , organization might intentionally allow specific product to be identifiable .   however , environment , ability to identify distinct product be unacceptable , and be expect product would behave exactly same way .   more restricted environment , behavioral difference might pose unacceptable risk make easy to identify product 's vendor , model , configuration , version , etc . \n\t ",
                "child_of": [
                    "205"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "319",
            "value": {
                "id": "319",
                "name": "Cleartext Transmission of Sensitive Information",
                "description": "The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.",
                "extended_description": " many communication channel can be \" sniff \" ( monitor ) adversary data transmission . example , networking , packet can traverse many intermediary node source destination , internet , internal network , cloud , etc . actor might have privilege access network interface or link channel , such router , but might not be authorize to collect underlie datum . result , network traffic could be sniff adversary , spill security - critical datum . applicable communication channel be not limit software product . applicable channel include hardware - specific technology such internal hardware network and external debug channel , support remote jtag debugging . when mitigation be not apply to combat adversary product 's threat model , weakness significantly lower difficulty exploitation such adversary . when full communication be record or log , such packet dump , adversary could attempt to obtain dump long transmission have occur and try to \" sniff \" cleartext record communication dump . even information be encode way be not human - readable , certain technique could determine which encoding be be use , then decode information . \n",
                "child_of": [
                    "311"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data",
                    " modify files or directory"
                ],
                "con_note": " can read information gain access channel be use communication .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1074",
            "value": {
                "id": "1074",
                "name": "Class with Excessively Deep Inheritance",
                "description": "A class has an inheritance level that is too high, i.e., it has a large number of parent classes.",
                "extended_description": " issue make more difficult to understand and maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability . interpretation \" large number parent class \" may vary product or developer , cisq recommend default maximum 7 parent class .",
                "child_of": [
                    "1093"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "115",
            "value": {
                "id": "115",
                "name": "Misinterpretation of Input",
                "description": "The product misinterprets an input, whether from an attacker or another product, in a security-relevant fashion.",
                "extended_description": "",
                "child_of": [
                    "436"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1067",
            "value": {
                "id": "1067",
                "name": "Excessive Execution of Sequential Searches of Data Resource",
                "description": "The product contains a data query against an SQL table or view that is configured in a way that does not utilize an index and may cause sequential searches to be performed.",
                "extended_description": " issue can make product perform more slowly .   relevant code be reachable attacker , then performance problem might introduce vulnerability .",
                "child_of": [
                    "1176"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "186",
            "value": {
                "id": "186",
                "name": "Overly Restrictive Regular Expression",
                "description": "A regular expression is overly restrictive, which prevents dangerous values from being detected.",
                "extended_description": " weakness be not about regular expression complexity . rather , be regular expression do not match value be intend . consider use regexp to identify acceptable value or to spot unwanted term . overly restrictive regexp miss potentially security - relevant value lead false positive * or * false negative , depend how regexp be be use code . consider expression /[0 - 8]/ where intention be /[0 - 9]/.   expression be not \" complex \" but value \" 9 \" be not match when maybe programmer plan to check .",
                "child_of": [
                    "185"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "274",
            "value": {
                "id": "274",
                "name": "Improper Handling of Insufficient Privileges",
                "description": "The product does not handle or incorrectly handles when it has insufficient privileges to perform an operation, leading to resultant weaknesses.",
                "extended_description": "",
                "child_of": [
                    "755",
                    "269"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1075",
            "value": {
                "id": "1075",
                "name": "Unconditional Control Flow Transfer outside of Switch Block",
                "description": "The product performs unconditional control transfer (such as a \"goto\") in code outside of a branching structure such as a switch block.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1120"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1257",
            "value": {
                "id": "1257",
                "name": "Improper Access Control Applied to Mirrored or Aliased Memory Regions",
                "description": "Aliased or mirrored memory regions in hardware designs may have inconsistent read/write permissions enforced by the hardware. A possible result is that an untrusted agent is blocked from accessing a memory region but is not blocked from accessing the corresponding aliased memory region.",
                "extended_description": " hardware product design often need to implement memory protection feature enable privileged software to define isolated memory region and access control ( read / write ) policy . isolated memory region can be define different memory space design ( e.g. system physical address , virtual address , memory map io).each memory cell should be map and assign system address core software can use to read / write memory . be possible to map same memory cell multiple system address such read / write aliased system address would be decode same memory cell . be commonly do hardware design redundancy and simplifying address decode logic . one memory region be corrupt or faulty , then hardware can switch use datum mirrored memory region . memory alias can also be create system address map address decoder unit ignore high order address bit when map small address region full system address . common security weakness can exist such memory mapping be aliased memory region could have different read / write access protection enforce hardware such untrusted agent be block access memory address but be not block access correspond aliase memory address . such inconsistency can then be use to bypass access protection primary memory block and read or modify protect memory . untrusted agent could also possibly create memory alias system address map malicious purpose be able to change mapping address region or modify memory region size .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " read memory",
                    " modify memory",
                    " dos : instability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1127",
            "value": {
                "id": "1127",
                "name": "Compilation with Insufficient Warnings or Errors",
                "description": "The code is compiled without sufficient warnings enabled, which may prevent the detection of subtle bugs or quality issues.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "156",
            "value": {
                "id": "156",
                "name": "Improper Neutralization of Whitespace",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as whitespace when they are sent to a downstream component.",
                "extended_description": " can include space , tab , etc .",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [
                    " white space"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "470",
            "value": {
                "id": "470",
                "name": "Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')",
                "description": "The product uses external input with reflection to select which classes or code to use, but it does not sufficiently prevent the input from selecting improper classes or code.",
                "extended_description": " product use external input to determine which class to instantiate or which method to invoke , then attacker could supply value to select unexpected class or method . occur , then attacker could create control flow path be not intend developer . path could bypass authentication or access control check , or otherwise cause product to behave unexpected manner . situation become doomsday scenario attacker can upload file location appear product 's classpath ( cwe-427 ) or add new entry product 's classpath ( cwe-426 ) . condition , attacker can use reflection to introduce new , malicious behavior product .",
                "child_of": [
                    "913",
                    "610"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " other",
                    " availability",
                    " other",
                    " confidentiality"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " alter execution logic",
                    " dos : crash , exit , or restart",
                    " other",
                    " read application data"
                ],
                "con_note": " cause wrong code to be invoke , attacker might be able to trigger runtime error leak sensitive information error message , such cwe-536 .",
                "alt_term": [
                    " reflection injection"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "342",
            "value": {
                "id": "342",
                "name": "Predictable Exact Value from Previous Values",
                "description": "An exact value or random number can be precisely predicted by observing previous values.",
                "extended_description": "",
                "child_of": [
                    "340"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "498",
            "value": {
                "id": "498",
                "name": "Cloneable Class Containing Sensitive Information",
                "description": "The code contains a class with sensitive data, but the class is cloneable. The data can then be accessed by cloning the class.",
                "extended_description": " cloneable class be effectively open class , datum can not be hide . class do not explicitly deny cloning can be clone other class run constructor .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": " class can be clone can be produce execute constructor . be dangerous constructor may perform security - relate check . allow object to be clone , check may be bypass .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "516",
            "value": {
                "id": "516",
                "name": "DEPRECATED: Covert Timing Channel",
                "description": "This weakness can be found atCWE-385.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "165",
            "value": {
                "id": "165",
                "name": "Improper Neutralization of Multiple Internal Special Elements",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple internal special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
                "extended_description": " datum be parse , improperly handle multiple internal special element may cause process to take unexpected action result attack .",
                "child_of": [
                    "164"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "309",
            "value": {
                "id": "309",
                "name": "Use of Password System for Primary Authentication",
                "description": "The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.",
                "extended_description": "",
                "child_of": [
                    "1390",
                    "654"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": " password authentication mechanism error will almost always result attacker be authorize valid user .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1050",
            "value": {
                "id": "1050",
                "name": "Excessive Platform Resource Consumption within a Loop",
                "description": "The product has a loop body or loop condition that contains a control element that directly or indirectly consumes platform resources, e.g. messaging, sessions, locks, or file descriptors.",
                "extended_description": " issue can make product perform more slowly .   attacker can influence number iteration loop , then performance problem might allow denial service consume more platform resource intend .",
                "child_of": [
                    "405"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "591",
            "value": {
                "id": "591",
                "name": "Sensitive Data Storage in Improperly Locked Memory",
                "description": "The product stores sensitive data in memory that is not locked, or that has been incorrectly locked, which might cause the memory to be written to swap files on disk by the virtual memory manager. This can make the data more accessible to external actors.",
                "extended_description": " windows system virtuallock function can lock page memory to ensure will remain present memory and not be swap disk . however , old version windows , such 95 , 98 , or , virtuallock ( ) function be only stub and provide protection . posix system mlock ( ) call ensure page will stay resident memory but do not guarantee page will not appear swap . therefore , be unsuitable use protection mechanism sensitive datum . platform , particular linux , do make guarantee page will not be swap , but be non - standard and be not portable . call mlock ( ) also require supervisor privilege . return value call must be check to ensure lock operation be actually successful .",
                "child_of": [
                    "413"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data",
                    " read memory"
                ],
                "con_note": " sensitive datum be write swap file may be expose .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "698",
            "value": {
                "id": "698",
                "name": "Execution After Redirect (EAR)",
                "description": "The web application sends a redirect to another location, but instead of exiting, it executes additional code.",
                "extended_description": "",
                "child_of": [
                    "705",
                    "670"
                ],
                "con_scope": [
                    " other",
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " alter execution logic",
                    " execute unauthorized code or command"
                ],
                "con_note": " weakness could affect control flow application and allow execution untrusted code .",
                "alt_term": [
                    " redirect exit"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "778",
            "value": {
                "id": "778",
                "name": "Insufficient Logging",
                "description": "When a security-critical event occurs, the product either does not record the event or omits important details about the event when logging it.",
                "extended_description": " when security - critical event be not log properly , such fail login attempt , can make malicious behavior more difficult to detect and may hinder forensic analysis attack succeed . organization adopt cloud storage resource , technology often require configuration change to enable detailed log information , detail logging can incur additional cost . could lead telemetry gap critical audit log . example , azure , default value logging be disabled .",
                "child_of": [
                    "223",
                    "693"
                ],
                "con_scope": [
                    " non - repudiation"
                ],
                "con_impacts": [
                    " hide activity"
                ],
                "con_note": " security critical information be not record , will be trail forensic analysis and discover cause problem or source attack may become more difficult or impossible .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "918",
            "value": {
                "id": "918",
                "name": "Server-Side Request Forgery (SSRF)",
                "description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
                "extended_description": " provide url unexpected host or port , attacker can make appear server be send request , possibly bypass access control such firewall prevent attacker access url directly . server can be use proxy to conduct port scanning host internal network , use other url such can access document system ( use file:// ) , or use other protocol such gopher:// or tftp:// , may provide great control content request .",
                "child_of": [
                    "441"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [
                    " xspa"
                ],
                "alt_desc": [
                    " cross site port attack"
                ]
            }
        },
        {
            "name": "560",
            "value": {
                "id": "560",
                "name": "Use of umask() with chmod-style Argument",
                "description": "The product calls umask() with an incorrect argument that is specified as if it is an argument to chmod().",
                "extended_description": "",
                "child_of": [
                    "687"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "370",
            "value": {
                "id": "370",
                "name": "Missing Check for Certificate Revocation after Initial Check",
                "description": "The product does not check the revocation status of a certificate after its initial revocation check, which can cause the product to perform privileged actions even after the certificate is revoked at a later time.",
                "extended_description": " revocation status certificate be not check action require privilege , system may be subject race condition . certificate be revoke initial check , subsequent action take owner revoke certificate will lose benefit guarantee certificate . fact , be almost certain use revoke certificate indicate malicious activity .",
                "child_of": [
                    "299"
                ],
                "con_scope": [
                    " access control",
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " modify application data",
                    " read application data"
                ],
                "con_note": " datum may be disclose entity impersonate trusted entity , result information disclosure .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "280",
            "value": {
                "id": "280",
                "name": "Improper Handling of Insufficient Permissions or Privileges",
                "description": "The product does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the product in an invalid state.",
                "extended_description": "",
                "child_of": [
                    "755"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "682",
            "value": {
                "id": "682",
                "name": "Incorrect Calculation",
                "description": "The product performs a calculation that generates incorrect or unintended results that are later used in security-critical decisions or resource management.",
                "extended_description": " when product perform security - critical calculation incorrectly , might lead incorrect resource allocation , incorrect privilege assignment , or fail comparison other thing . many direct result incorrect calculation can lead even large problem such fail protection mechanism or even arbitrary code execution .",
                "child_of": [],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control",
                    " access control"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( other )",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " bypass protection mechanism"
                ],
                "con_note": " incorrect calculation lead insufficient comparison ( cwe-697 ) , may compromise protection mechanism such validation routine and allow attacker to bypass security - critical code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "473",
            "value": {
                "id": "473",
                "name": "PHP External Variable Modification",
                "description": "A PHP application does not properly protect against the modification of variables from external sources, such as query parameters or cookies. This can expose the application to numerous weaknesses that would not exist otherwise.",
                "extended_description": "",
                "child_of": [
                    "471"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "328",
            "value": {
                "id": "328",
                "name": "Use of Weak Hash",
                "description": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
                "extended_description": " hash function be define algorithm map arbitrarily size datum fix - sized digest ( output ) such follow property hold:1 . algorithm be not invertible ( also call \" one - way \" or \" not reversible\")2 . algorithm be deterministic ; same input produce same digest timebuilding definition , cryptographic hash function must also ensure malicious actor can not leverage hash function to have reasonable chance success determine following:1 . original input ( preimage attack ) , give only digest2 . input can produce same digest ( 2nd preimage attack ) , give original input3 . set two or more input evaluate same digest ( birthday attack ) , give actor can arbitrarily choose input to be hash and can do so reasonable amount timeswhat be regard \" reasonable \" varie context and threat model , but general , \" reasonable \" could cover attack be more efficient brute force ( i.e. , average , attempt half possible combination ) . note attack might be more efficient brute force but be still not regard achievable real world . algorithm do not meet above condition will generally be consider weak general use hash . addition algorithmic weakness , hash function can be make weak use hash security context break security guarantee . example , use hash function salt store password ( be sufficiently short ) could enable adversary to create \" rainbow table \" [ ref-637 ] to recover password certain condition ; attack work such hash function md5 , sha-1 , and sha-2 .",
                "child_of": [
                    "326",
                    "327"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "151",
            "value": {
                "id": "151",
                "name": "Improper Neutralization of Comment Delimiters",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as comment delimiters when they are sent to a downstream component.",
                "extended_description": "",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "359",
            "value": {
                "id": "359",
                "name": "Exposure of Private Personal Information to an Unauthorized Actor",
                "description": "The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected.",
                "extended_description": " be many type sensitive information product must protect attacker , include system datum , communication , configuration , business secret , intellectual property , and individual 's personal ( private ) information .   private personal information may include password , phone number , geographic location , personal message , credit card number , etc .   private information be important to consider person be user product , or part datum set be process product .   exposure private information do not necessarily prevent product work properly , and fact exposure might be intend developer , e.g. part datum share other organization .   however , exposure personal private information can still be undesirable or explicitly prohibit law or regulation . type private information include : government identifier , such social security numberscontact information , such home address and telephone numbersgeographic location - where user be ( or was)employment historyfinancial datum - such credit card number , salary , bank account , and debtspicture , video , or audiobehavioral pattern - such web surfing history , when certain activity be perform , etc . relationships ( and type relationship ) other - family , friend , contact , etc . communications - e - mail address , private message , text message , chat log , etc . health - medical condition , insurance status , prescription recordsaccount password and other credentialssome information may be characterize pii ( personally identifiable information ) , protected health information ( phi ) , etc . category private information may overlap or vary base intend usage or policy and practice particular industry . sometimes datum be not label private can have privacy implication different context . example , student identification number be usually not consider private be explicit and publicly - available mapping individual student 's personal information . however , school generate identification number base student social security number , then identification number should be consider private .",
                "child_of": [
                    "200"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [
                    " privacy violation",
                    " privacy leak",
                    " privacy leakage"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "415",
            "value": {
                "id": "415",
                "name": "Double Free",
                "description": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
                "extended_description": " when program call free ( ) twice same argument , program 's memory management datum structure become corrupt . corruption can cause program to crash or , circumstance , cause two later call malloc ( ) to return same pointer . malloc ( ) return same value twice and program later give attacker control datum be write doubly - allocate memory , program become vulnerable buffer overflow attack .",
                "child_of": [
                    "825",
                    "1341",
                    "666"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " modify memory",
                    " execute unauthorized code or command"
                ],
                "con_note": " doubly free memory may result write - - where condition , allow attacker to execute arbitrary code .",
                "alt_term": [
                    " double - free"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "694",
            "value": {
                "id": "694",
                "name": "Use of Multiple Resources with Duplicate Identifier",
                "description": "The product uses multiple resources that can have the same identifier, in a context in which unique identifiers are required.",
                "extended_description": " product assume resource have unique identifier , product could operate wrong resource attacker can cause multiple resource to be associate same identifier .",
                "child_of": [
                    "99",
                    "573"
                ],
                "con_scope": [
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " quality degradation"
                ],
                "con_note": " unique identifier be assume when protect sensitive resource , then duplicate identifier might allow attacker to bypass protection .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1066",
            "value": {
                "id": "1066",
                "name": "Missing Serialization Control Element",
                "description": "The product contains a serializable data element that does not have an associated serialization method.",
                "extended_description": " issue can prevent product run reliably , e.g. trigger exception .   relevant code be reachable attacker , then reliability problem might introduce vulnerability . example , serializable nature datum element come serializable serializableattribute attribute .net and inheritance java.io . serializable interface java .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1288",
            "value": {
                "id": "1288",
                "name": "Improper Validation of Consistency within Input",
                "description": "The product receives a complex input with multiple elements or fields that must be consistent with each other, but it does not validate or incorrectly validates that the input is actually consistent.",
                "extended_description": " input datum can be structure multiple element or field must be consistent other , e.g. number - - item field be follow expect number element .   when such complex input be inconsistent , attacker could trigger unexpected error , cause incorrect action to take place , or exploit latent vulnerability .",
                "child_of": [
                    "20"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "527",
            "value": {
                "id": "527",
                "name": "Exposure of Version-Control Repository to an Unauthorized Control Sphere",
                "description": "The product stores a CVS, git, or other repository in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.",
                "extended_description": " version control repository such cvs or git store version - specific metadata and other detail subdirectory . subdirectory be store web server or add archive , then could be use attacker . information may include username , filename , path root , ip address , and detail \" diff \" datum how file have be change - could reveal source code snippet be never intend to be make public .",
                "child_of": [
                    "552"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data",
                    " read files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "161",
            "value": {
                "id": "161",
                "name": "Improper Neutralization of Multiple Leading Special Elements",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple leading special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
                "extended_description": " datum be parse , improperly handle multiple lead special element may cause process to take unexpected action result attack .",
                "child_of": [
                    "160"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "924",
            "value": {
                "id": "924",
                "name": "Improper Enforcement of Message Integrity During Transmission in a Communication Channel",
                "description": "The product establishes a communication channel with an endpoint and receives a message from that endpoint, but it does not sufficiently ensure that the message was not modified during transmission.",
                "extended_description": " attacker might be able to modify message and spoof endpoint interfere datum cross network or redirect connection system control .",
                "child_of": [
                    "345"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " attacker can spoof endpoint , attacker gain all privilege be intend original endpoint .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "482",
            "value": {
                "id": "482",
                "name": "Comparing instead of Assigning",
                "description": "The code uses an operator for comparison when the intention was to perform an assignment.",
                "extended_description": " many language , compare statement be very close appearance assignment statement ; be often confused .",
                "child_of": [
                    "480"
                ],
                "con_scope": [
                    " availability",
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": " assignment will not take place , should cause obvious program execution problem .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1072",
            "value": {
                "id": "1072",
                "name": "Data Resource Access without Use of Connection Pooling",
                "description": "The product accesses a data resource through a database without using a connection pooling capability.",
                "extended_description": " issue can make product perform more slowly , connection pool allow connection to be reuse overhead and time consumption opening and close new connection .   relevant code be reachable attacker , then performance problem might introduce vulnerability .",
                "child_of": [
                    "405"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1246",
            "value": {
                "id": "1246",
                "name": "Improper Write Handling in Limited-write Non-Volatile Memories",
                "description": "The product does not implement or incorrectly implements wear leveling operations in limited-write non-volatile memories.",
                "extended_description": " non - volatile memory such nand flash , eeprom , etc . have individually erasable segment , can be put limited number program / erase or write cycle . example , device can only endure limited number write , device become unreliable . order to wear out cell uniform manner , non - volatile memory and storage product base above - mention technology implement technique call wear leveling . once set threshold be reach , wear level map write logical block different physical block . prevent single physical block prematurely fail high concentration write . wear leveling be improperly implement , attacker may be able to programmatically cause storage to become unreliable much short time would normally be expect .",
                "child_of": [
                    "400"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : instability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "106",
            "value": {
                "id": "106",
                "name": "Struts: Plug-in Framework not in Use",
                "description": "When an application does not use an input validation framework such as the Struts Validator, there is a greater risk of introducing weaknesses related to insufficient input validation.",
                "extended_description": " unchecked input be lead cause vulnerability j2ee application . unchecked input lead cross - site scripting , process control , and sql injection vulnerability , other . j2ee application be not generally susceptible memory corruption attack , j2ee application interface native code do not perform array bound check , attacker may be able to use input validation mistake j2ee application to launch buffer overflow attack .",
                "child_of": [
                    "1173"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1117",
            "value": {
                "id": "1117",
                "name": "Callable with Insufficient Behavioral Summary",
                "description": "The code contains a function or method whose signature and/or associated inline documentation does not sufficiently describe the callable's inputs, outputs, side effects, assumptions, or return codes.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1078"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1275",
            "value": {
                "id": "1275",
                "name": "Sensitive Cookie with Improper SameSite Attribute",
                "description": "The SameSite attribute for sensitive cookies is not set, or an insecure value is used.",
                "extended_description": " samesite attribute control how cookie be send cross - domain request . attribute may have three value : ' lax ' , ' strict ' , or ' none ' . ' none ' value be use , website may create cross - domain post http request website , and browser automatically add cookie request . may lead cross - site - request - forgery ( csrf ) attack be additional protection place ( such anti - csrf token ) .",
                "child_of": [
                    "923"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " non - repudiation",
                    " access control"
                ],
                "con_impacts": [
                    " modify application data"
                ],
                "con_note": " website do not impose additional defense csrf attack , fail to use ' lax ' or ' strict ' value could increase risk exposure csrf attack . likelihood integrity breach be low successful attack do not only depend insecure samesite attribute . order to perform csrf attack be many condition must be meet , such lack csrf token , confirmation sensitive action website , \" simple \" \" content - type \" header http request and many more .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1283",
            "value": {
                "id": "1283",
                "name": "Mutable Attestation or Measurement Reporting Data",
                "description": "The register contents used for attestation or measurement reporting data to verify boot flow are modifiable by an adversary.",
                "extended_description": " system - - chip ( soc ) implement secure boot or verified boot . boot flow , soc often measure code authenticate . measurement be usually do calculate one - way hash code binary and extend previous hash . hash algorithm should be secure one - way hash function . final hash , i.e. , value obtain completion boot flow , serve measurement datum use reporting or attestation . calculated hash be often store register can later be read party interest to determine tampering boot flow . common weakness be content register be modifiable adversary , thus spoof measurement .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read memory",
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1090",
            "value": {
                "id": "1090",
                "name": "Method Containing Access of a Member Element from Another Class",
                "description": "A method for a class performs an operation that directly accesses a member element from another class.",
                "extended_description": " issue suggest poor encapsulation and make more difficult to understand and maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1061"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "325",
            "value": {
                "id": "325",
                "name": "Missing Cryptographic Step",
                "description": "The product does not implement a required step in a cryptographic algorithm, resulting in weaker encryption than advertised by the algorithm.",
                "extended_description": "",
                "child_of": [
                    "573"
                ],
                "con_scope": [
                    " access control",
                    " confidentiality",
                    " integrity",
                    " accountability",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " read application data",
                    " modify application data",
                    " hide activity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "628",
            "value": {
                "id": "628",
                "name": "Function Call with Incorrectly Specified Arguments",
                "description": "The product calls a function, procedure, or routine with arguments that are not correctly specified, leading to always-incorrect behavior and resultant weaknesses.",
                "extended_description": " be multiple way weakness can be introduce , include : wrong variable or incorrect number arguments;incorrect order arguments;wrong type argument ; orwrong value .",
                "child_of": [
                    "573"
                ],
                "con_scope": [
                    " other",
                    " access control"
                ],
                "con_impacts": [
                    " quality degradation",
                    " gain privileges or assume identity"
                ],
                "con_note": " weakness can cause unintended behavior and can lead additional weakness such allow attacker to gain unintended access system resource .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1103",
            "value": {
                "id": "1103",
                "name": "Use of Platform-Dependent Third Party Components",
                "description": "The product relies on third-party components that do not provide equivalent functionality across all desirable platforms.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "758"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "407",
            "value": {
                "id": "407",
                "name": "Inefficient Algorithmic Complexity",
                "description": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
                "extended_description": "",
                "child_of": [
                    "405"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : resource consumption ( other )"
                ],
                "con_note": " typical consequence be cpu consumption , but memory consumption and consumption other resource can also occur .",
                "alt_term": [
                    " quadratic complexity"
                ],
                "alt_desc": [
                    " use when algorithmic complexity be relate square number input ( n^2 )"
                ]
            }
        },
        {
            "name": "1254",
            "value": {
                "id": "1254",
                "name": "Incorrect Comparison Logic Granularity",
                "description": "The product's comparison logic is performed over a series of steps rather than across the entire string in one operation. If there is a comparison logic failure on one of these steps, the operation may be vulnerable to a timing attack that can result in the interception of the process for nefarious purposes.",
                "extended_description": " comparison logic be use to compare variety object include password , message \n          authentication codes ( macs ) , and response verification challenge . when comparison logic be \n          implement fine granularity ( e.g. , byte - - byte comparison ) and break case \n          comparison failure , attacker can exploit implementation to identify when exactly \n          failure occur . multiple attempt , attacker may be able to guess correct \n          password / response to challenge and elevate privilege .",
                "child_of": [
                    "208",
                    "697"
                ],
                "con_scope": [
                    " confidentiality",
                    " authorization"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "428",
            "value": {
                "id": "428",
                "name": "Unquoted Search Path or Element",
                "description": "The product uses a search path that contains an unquoted element, in which the element contains whitespace or other separators. This can cause the product to access resources in a parent path.",
                "extended_description": " malicious individual have access file system , be possible to elevate privilege insert such file \" c:\\program.exe \" to be run privileged program make use winexec .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "454",
            "value": {
                "id": "454",
                "name": "External Initialization of Trusted Variables or Data Stores",
                "description": "The product initializes critical internal variables or data stores using inputs that can be modified by untrusted actors.",
                "extended_description": " product system should be reluctant to trust variable have be initialize outside trust boundary , especially be initialize user . variable may have be initialize incorrectly . attacker can initialize variable , then can influence vulnerable system will do .",
                "child_of": [
                    "665"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data"
                ],
                "con_note": " attacker could gain access and modify sensitive datum or system information .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "367",
            "value": {
                "id": "367",
                "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
                "description": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
                "extended_description": " weakness can be security - relevant when attacker can influence state resource check and use . can happen share resource such file , memory , or even variable multithreade program .",
                "child_of": [
                    "362"
                ],
                "con_scope": [
                    " integrity",
                    " other",
                    " integrity",
                    " other",
                    " integrity",
                    " other",
                    " non - repudiation",
                    " non - repudiation",
                    " other"
                ],
                "con_impacts": [
                    " alter execution logic",
                    " unexpected state",
                    " modify application data",
                    " modify files or directory",
                    " modify memory",
                    " other",
                    " other",
                    " hide activity",
                    " other"
                ],
                "con_note": " case may be possible to delete file malicious user might not otherwise have access , such log file .",
                "alt_term": [
                    " tocttou",
                    " tocctou"
                ],
                "alt_desc": [
                    " tocttou acronym expand \" time check time use \" .",
                    " tocctou acronym be most likely typo tocttou , but have be use influential document , typo be repeat fairly frequently ."
                ]
            }
        },
        {
            "name": "99",
            "value": {
                "id": "99",
                "name": "Improper Control of Resource Identifiers ('Resource Injection')",
                "description": "The product receives input from an upstream component, but it does not restrict or incorrectly restricts the input before it is used as an identifier for a resource that may be outside the intended sphere of control.",
                "extended_description": " resource injection issue occur when follow two condition be meet : attacker can specify identifier use to access system resource . example , attacker might be able to specify part name file to be open or port number to be use . specify resource , attacker gain capability would not otherwise be permit . example , program may give attacker ability to overwrite specified file , run configuration control attacker , or transmit sensitive information third - party server . may enable attacker access or modify otherwise protect system resource .",
                "child_of": [
                    "74"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data",
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": " attacker could gain access or modify sensitive datum or system resource . could allow access protect file or directory include configuration file and file contain sensitive information .",
                "alt_term": [
                    " insecure direct object reference"
                ],
                "alt_desc": [
                    " owasp use term , be effectively same resource injection ."
                ]
            }
        },
        {
            "name": "284",
            "value": {
                "id": "284",
                "name": "Improper Access Control",
                "description": "The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.",
                "extended_description": " access control involve use several protection mechanism such : authentication ( prove identity actor)authorization ( ensure give actor can access resource ) , andaccountability ( tracking activity be performed)when mechanism be not apply or otherwise fail , attacker can compromise security product gain privilege , read sensitive information , execute command , evade detection , etc . be two distinct behavior can introduce access control weakness : specification : incorrect privilege , permission , ownership , etc . be explicitly specify either user or resource ( example , set password file to be world - writable , or give administrator capability guest user ) . action could be perform program or administrator . enforcement : mechanism contain error prevent properly enforce specify access control requirement ( e.g. , allow user to specify own privilege , or allow syntactically - incorrect acl to produce insecure setting ) . problem occur program , do not actually enforce intend security policy administrator specifie .",
                "child_of": [],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [
                    " authorization"
                ],
                "alt_desc": [
                    " term \" access control \" and \" authorization \" be often use interchangeably , many people have distinct definition . cwe usage \" access control \" be intend general term various mechanism restrict user can access which resource , and \" authorization \" be more narrowly define . be unlikely will be community consensus use term ."
                ]
            }
        },
        {
            "name": "524",
            "value": {
                "id": "524",
                "name": "Use of Cache Containing Sensitive Information",
                "description": "The code uses a cache that contains sensitive information, but the cache can be read by an actor outside of the intended control sphere.",
                "extended_description": " application may use cache to improve efficiency when communicate remote entity or perform intensive calculation .   cache maintain pool object , thread , connection , page , financial datum , password , or other resource to minimize time take to initialize and access resource .   cache be accessible unauthorized actor , attacker can read cache and obtain sensitive information . \n\t ",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1324",
            "value": {
                "id": "1324",
                "name": "DEPRECATED: Sensitive Information Accessible by Physical Probing of JTAG Interface",
                "description": "This entry has been deprecated because it was at a lower level of abstraction than supported by CWE. All relevant content has been integrated intoCWE-319.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1304",
            "value": {
                "id": "1304",
                "name": "Improperly Preserved Integrity of Hardware Configuration State During a Power Save/Restore Operation",
                "description": "The product performs a power save/restore operation, but it does not ensure that the integrity of the configuration state is maintained and/or verified between the beginning and ending of the operation.",
                "extended_description": " power down , intellectual \n                 property ( ip ) save current state ( s ) persistent \n                 storage such flash or always - on memory order to \n                 optimize restore operation .   process , \n                 attacker access persistent storage may \n                 alter ( s ) configuration could potentially \n                 modify privilege , disable protection , and/or cause \n                 damage hardware . ip do not validate \n                 configuration state store persistent memory , \n                 regain power or become operational again , \n                 ip could be compromise activation \n                 unwanted / harmful configuration . \n                ",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " dos : instability",
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( other )",
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " alter execution logic",
                    " quality degradation",
                    " unexpected state",
                    " reduce maintainability",
                    " reduce performance",
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "31",
            "value": {
                "id": "31",
                "name": "Path Traversal: 'dir\\..\\..\\filename'",
                "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize 'dir\\..\\..\\filename' (multiple internal backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
                "extended_description": " allow attacker to traverse file system to access file or directory be restricted directory . ' dir\\ .. \\ .. \\filename ' manipulation be useful bypass path traversal protection scheme . sometimes program only remove one \" .. \\ \" sequence , so multiple \" .. \\ \" can bypass check . alternately , manipulation could be use to bypass check \" .. \\ \" beginning pathname , move up more one directory level .",
                "child_of": [
                    "23"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "637",
            "value": {
                "id": "637",
                "name": "Unnecessary Complexity in Protection Mechanism (Not Using 'Economy of Mechanism')",
                "description": "The product uses a more complex mechanism than necessary, which could lead to resultant weaknesses when the mechanism is not correctly understood, modeled, configured, implemented, or used.",
                "extended_description": " security mechanism should be as simple possible . complex security mechanism may engender partial implementation and compatibility problem , result mismatch assumption and implement security . corollary principle be datum specification should be as simple possible , complex data specification result complex validation code . complex task and system may also need to be guard complex security check , so simple system should be prefer .",
                "child_of": [
                    "657"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [
                    " unnecessary complexity"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "1104",
            "value": {
                "id": "1104",
                "name": "Use of Unmaintained Third Party Components",
                "description": "The product relies on third-party components that are not actively supported or maintained by the original developer or a trusted proxy for the original developer.",
                "extended_description": " reliance component be no long maintain can make difficult or impossible to fix significant bug , vulnerability , or quality issue . effect , unmaintained code can become obsolete . issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1357"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1049",
            "value": {
                "id": "1049",
                "name": "Excessive Data Query Operations in a Large Data Table",
                "description": "The product performs a data query with a large number of joins and sub-queries on a large data table.",
                "extended_description": " issue can make product perform more slowly .   relevant code be reachable attacker , then performance problem might introduce vulnerability . interpretation \" large datum table \" and \" large number join or sub - query \" may vary product or developer , cisq recommend default 1 million row \" large \" datum table , default minimum 5 join , and default minimum 3 sub - query .",
                "child_of": [
                    "1176"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1318",
            "value": {
                "id": "1318",
                "name": "Missing Support for Security Features in On-chip Fabrics or Buses",
                "description": "On-chip fabrics or buses either do not support or are not configured to support privilege separation or other security features, such as access control.",
                "extended_description": " certain - chip fabric and bus , especially simple and low - power bus , do not support security feature .   apart datum transfer and address port , fabric and bus do not have interface to transfer privilege , immutable identity , or other security attribute come bus master .   similarly , do not have dedicate signal to transport security - sensitive datum slave master , such completion certain type transaction .   few other - chip fabric and bus support security feature and define specific interface / signal transport security attribute master slave or vice - versa .   however , include signal be not mandatory and could be leave unconfigured when generate register - transfer - level ( rtl ) description fabric .   such fabric or bus should not be use to transport security attribute come bus master .   general , peripheral security asset should not be connect such bus transaction bus master reach bus , form access control be perform fabric bridge or intermediate module .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control",
                    " availability"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " read memory",
                    " modify memory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "252",
            "value": {
                "id": "252",
                "name": "Unchecked Return Value",
                "description": "The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.",
                "extended_description": " two common programmer assumption be \" function call can never fail \" and \" do not matter function call fail \" . attacker can force function to fail or otherwise return value be not expect , then subsequent program logic could lead vulnerability , product be not state programmer assume . example , program call function to drop privilege but do not check return code to ensure privilege be successfully drop , then program will continue to operate high privilege .",
                "child_of": [
                    "754"
                ],
                "con_scope": [
                    " availability",
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " unexpected return value could place system state could lead crash or other unintended behavior .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "158",
            "value": {
                "id": "158",
                "name": "Improper Neutralization of Null Byte or NUL Character",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes NUL characters or null bytes when they are sent to a downstream component.",
                "extended_description": " datum be parse , inject nul character or null byte may cause product to believe input be terminate early actually be , or otherwise cause input to be misinterpret . could then be use to inject potentially dangerous input occur null byte or otherwise bypass validation routine and other protection mechanism .",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "298",
            "value": {
                "id": "298",
                "name": "Improper Validation of Certificate Expiration",
                "description": "A certificate expiration is not validated or is incorrectly validated, so trust may be assigned to certificates that have been abandoned due to age.",
                "extended_description": " when expiration certificate be not take account , trust have necessarily be convey . therefore , validity certificate can not be verify and benefit certificate be lose .",
                "child_of": [
                    "295",
                    "672"
                ],
                "con_scope": [
                    " integrity",
                    " other",
                    " authentication",
                    " other"
                ],
                "con_impacts": [
                    " other",
                    " other"
                ],
                "con_note": " trust afford system question - base expired certificate - may allow spoof attack .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1120",
            "value": {
                "id": "1120",
                "name": "Excessive Code Complexity",
                "description": "The code is too complex, as calculated using a well-defined, quantitative measure.",
                "extended_description": " issue make more difficult to understand and/or maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability . issue can make product perform more slowly .   relevant code be reachable attacker , then performance problem might introduce vulnerability .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other",
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability",
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "260",
            "value": {
                "id": "260",
                "name": "Password in Configuration File",
                "description": "The product stores a password in a configuration file that might be accessible to actors who do not know the password.",
                "extended_description": " can result compromise system password be use . attacker could gain access file and learn store password or bad yet , change password one choosing .",
                "child_of": [
                    "522"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "65",
            "value": {
                "id": "65",
                "name": "Windows Hard Link",
                "description": "The product, when opening a file or directory, does not sufficiently handle when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
                "extended_description": " failure system to check hard link can result vulnerability different type attack . example , attacker can escalate privilege file use privileged program be replace hard link sensitive file ( e.g. autoexec.bat ) . when process open file , attacker can assume privilege process , or prevent program accurately process datum .",
                "child_of": [
                    "59"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "191",
            "value": {
                "id": "191",
                "name": "Integer Underflow (Wrap or Wraparound)",
                "description": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
                "extended_description": " can happen sign and unsigned case .",
                "child_of": [
                    "682"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : instability",
                    " modify memory",
                    " execute unauthorized code or command",
                    " bypass protection mechanism"
                ],
                "con_note": " weakness can sometimes trigger buffer overflow can be use to execute arbitrary code . be usually scope program 's implicit security policy .",
                "alt_term": [
                    " integer underflow"
                ],
                "alt_desc": [
                    " \" integer underflow \" be sometimes use to identify signedness error originally positive number become negative result subtraction . however , be case bad subtraction unsigned integer be involve , so be not always signedness issue . \"integer underflow \" be occasionally use to describe array index error index be negative ."
                ]
            }
        },
        {
            "name": "1333",
            "value": {
                "id": "1333",
                "name": "Inefficient Regular Expression Complexity",
                "description": "The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles.",
                "extended_description": " regular expression engine have feature call \" backtrack \" . token can not match , engine \" backtrack \" position may result different token can match . backtracking become weakness condition be meet : number possible backtracking attempt be exponential relative length input . input can fail to match regular expression . input can be long enough . attacker can create craft input \n\t\t   intentionally cause regular expression to use \n\t\t   excessive backtracking way cause cpu \n\t\t   consumption spike . \n\t\t",
                "child_of": [
                    "407"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )"
                ],
                "con_note": "",
                "alt_term": [
                    " redos",
                    " regular expression denial service",
                    " catastrophic backtracking"
                ],
                "alt_desc": [
                    " redos be abbreviation \" regular expression denial service \" .",
                    " term be attack - focus , be commonly use to describe weakness .",
                    " term be use to describe behavior regular expression negative technical impact ."
                ]
            }
        },
        {
            "name": "733",
            "value": {
                "id": "733",
                "name": "Compiler Optimization Removal or Modification of Security-critical Code",
                "description": "The developer builds a security-critical protection mechanism into the software, but the compiler optimizes the program such that the mechanism is removed or modified.",
                "extended_description": "",
                "child_of": [
                    "1038"
                ],
                "con_scope": [
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1052",
            "value": {
                "id": "1052",
                "name": "Excessive Use of Hard-Coded Literals in Initialization",
                "description": "The product initializes a data element using a hard-coded literal that is not a simple integer or static constant element.",
                "extended_description": " issue make more difficult to modify or maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "665"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "85",
            "value": {
                "id": "85",
                "name": "Doubled Character XSS Manipulations",
                "description": "The web application does not filter user-controlled input for executable script disguised using doubling of the involved characters.",
                "extended_description": "",
                "child_of": [
                    "79"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " read application data",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "762",
            "value": {
                "id": "762",
                "name": "Mismatched Memory Management Routines",
                "description": "The product attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource.",
                "extended_description": " weakness can be generally describe mismatch memory management routine , such : memory be allocate stack ( automatically ) , but be deallocate use memory management routine free ( ) ( cwe-590 ) , be intend explicitly allocate heap memory . memory be allocate explicitly use one set memory management function , and deallocate use different set . example , memory might be allocate malloc ( ) c++ instead new operator , and then deallocate delete operator . when memory management function be mismatch , consequence may be as severe code execution , memory corruption , or program crash . consequence and ease exploit will vary depend implementation routine and object be manage .",
                "child_of": [
                    "763"
                ],
                "con_scope": [
                    " integrity",
                    " availability",
                    " confidentiality"
                ],
                "con_impacts": [
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "222",
            "value": {
                "id": "222",
                "name": "Truncation of Security-relevant Information",
                "description": "The product truncates the display, recording, or processing of security-relevant information in a way that can obscure the source or nature of an attack.",
                "extended_description": "",
                "child_of": [
                    "221"
                ],
                "con_scope": [
                    " non - repudiation"
                ],
                "con_impacts": [
                    " hide activity"
                ],
                "con_note": " source attack will be difficult or impossible to determine . can allow attack system to continue notice .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "257",
            "value": {
                "id": "257",
                "name": "Storing Passwords in a Recoverable Format",
                "description": "The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.",
                "extended_description": "",
                "child_of": [
                    "522"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control",
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " gain privileges or assume identity"
                ],
                "con_note": " reveal password may be reuse elsewhere to impersonate user question .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1083",
            "value": {
                "id": "1083",
                "name": "Data Access from Outside Expected Data Manager Component",
                "description": "The product is intended to manage data access through a particular data manager component such as a relational or non-SQL database, but it contains code that performs data access operations without using that component.",
                "extended_description": " when product have datum access component , design may be intend to handle datum access operation component .   data access operation be perform outside component , then may indicate violation intend design . issue can prevent product run reliably .   relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "1061"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "364",
            "value": {
                "id": "364",
                "name": "Signal Handler Race Condition",
                "description": "The product uses a signal handler that introduces a race condition.",
                "extended_description": " race condition frequently occur signal handler , signal handler support asynchronous action . race condition have variety root cause and symptom . attacker may be able to exploit signal handler race condition to cause product state to be corrupt , possibly lead denial service or even code execution . issue occur when non - reentrant function , or state - sensitive action occur signal handler , where may be call time . behavior can violate assumption be make \" regular \" code be interrupt , or other signal handler may also be invoke . function be call inopportune moment - such non - reentrant function be already run - memory corruption could occur may be exploitable code execution . signal race condition commonly find occur when free be call signal handler , result double free and therefore write - - where condition . even give pointer be set null have be free , race condition still exist time memory be free and pointer be set null . be especially problematic same signal handler have be set more one signal -- mean signal handler may be reentere . be several know behavior relate to signal handler have receive label \" signal handler race condition\":share state ( e.g. global datum or static variable ) be accessible both signal handler and \" regular \" codeshared state signal handler and other signal handlersuse non - reentrant functionality signal handler - generally imply share state be be use . example , malloc ( ) and free ( ) be non - reentrant may use global or static datum structure manage memory , and be indirectly use innocent - seem function such syslog ( ) ; function could be exploit memory corruption and , possibly , code execution . association same signal handler function multiple signal - might imply share state , same code and resource be access . example , can be source double - free and use - - free weakness . use setjmp and longjmp , or other mechanism prevent signal handler return control back original functionalitywhile not technically race condition , signal handler be design to be call most once , and be call more once can introduce security problem , even when be not concurrent call signal handler . can be source double - free and use - - free weakness . signal handler vulnerability be often classify base absence specific protection mechanism , style classification be discourage cwe programmer often have choice several different mechanism address weakness . such protection mechanism may preserve exclusivity access share resource , and behavioral atomicity relevant code : avoid share stateuse synchronization signal handleruse synchronization regular codedisabling or mask other signal , provide atomicity ( effectively ensure exclusivity )",
                "child_of": [
                    "362"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " modify application data",
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity"
                ],
                "con_note": " signal handler interrupt code be execute privilege , may be possible signal handler will also be execute elevated privilege , possibly make subsequent exploit more severe .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "230",
            "value": {
                "id": "230",
                "name": "Improper Handling of Missing Values",
                "description": "The product does not handle or incorrectly handles when a parameter, field, or argument name is specified, but the associated value is missing, i.e. it is empty, blank, or null.",
                "extended_description": "",
                "child_of": [
                    "229"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "406",
            "value": {
                "id": "406",
                "name": "Insufficient Control of Network Message Volume (Network Amplification)",
                "description": "The product does not sufficiently monitor or control transmitted network traffic volume, so that an actor can cause the product to transmit more traffic than should be allowed for that actor.",
                "extended_description": " absence policy to restrict asymmetric resource consumption , application or system can not distinguish legitimate transmission and traffic intend to serve amplifying attack target system . system can often be configure to restrict amount traffic send out behalf client , base client 's origin or access level . be usually define resource allocation policy . absence mechanism to keep track transmission , system or application can be easily abuse to transmit asymmetrically great traffic request or client should be permit .",
                "child_of": [
                    "405"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : amplification",
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : resource consumption ( other )"
                ],
                "con_note": " system resource can be quickly consume lead poor application performance or system crash . may affect network performance and could be use to attack other system and application rely network performance .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1058",
            "value": {
                "id": "1058",
                "name": "Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element",
                "description": "The code contains a function or method that operates in a multi-threaded environment but owns an unsafe non-final static storable or member data element.",
                "extended_description": " issue can prevent product run reliably .   relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "662"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "282",
            "value": {
                "id": "282",
                "name": "Improper Ownership Management",
                "description": "The product assigns the wrong ownership, or does not properly verify the ownership, of an object or resource.",
                "extended_description": "",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "911",
            "value": {
                "id": "911",
                "name": "Improper Update of Reference Count",
                "description": "The product uses a reference count to manage a resource, but it does not update or incorrectly updates the reference count.",
                "extended_description": " reference count can be use when track how many object contain reference particular resource , such memory management or garbage collection . when reference count reach zero , resource can be de - allocate or reuse be more object use . reference count accidentally reach zero , then resource might be release too soon , even be still use . object no long use resource , but reference count be not zero , then resource might not ever be release .",
                "child_of": [
                    "664"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "297",
            "value": {
                "id": "297",
                "name": "Improper Validation of Certificate with Host Mismatch",
                "description": "The product communicates with a host that provides a certificate, but the product does not properly ensure that the certificate is actually associated with that host.",
                "extended_description": " even certificate be well - form , sign , and follow chain trust , may simply be valid certificate different site site product be interact . certificate 's host - specific data be not properly check - such common name ( cn ) subject or subject alternative name ( san ) extension x.509 certificate - may be possible redirection or spoof attack to allow malicious host valid certificate to provide datum , impersonate trust host . order to ensure data integrity , certificate must be valid and must pertain site be be access . even product attempt to check hostname , be still possible to incorrectly check hostname . example , attacker could create certificate name begin trust name follow nul byte , could cause string - base comparison to only examine portion contain trust name . weakness can occur even when product use certificate pinning , product do not verify hostname time certificate be pin .",
                "child_of": [
                    "923",
                    "295"
                ],
                "con_scope": [
                    " access control",
                    " authentication",
                    " other"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " other"
                ],
                "con_note": " trust afford system question - base malicious certificate - may allow spoof or redirection attack .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "167",
            "value": {
                "id": "167",
                "name": "Improper Handling of Additional Special Element",
                "description": "The product receives input from an upstream component, but it does not handle or incorrectly handles when an additional unexpected special element is provided.",
                "extended_description": "",
                "child_of": [
                    "159",
                    "703"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "338",
            "value": {
                "id": "338",
                "name": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
                "description": "The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG's algorithm is not cryptographically strong.",
                "extended_description": " when non - cryptographic prng be use cryptographic context , can expose cryptography certain type attack . often pseudo - random number generator ( prng ) be not design cryptography . sometimes mediocre source randomness be sufficient or preferable algorithm use random number . weak generator generally take less processing power and/or do not use precious , finite , entropy source system . such prngs might have very useful feature , same feature could be use to break cryptography .",
                "child_of": [
                    "330"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": " prng be use authentication and authorization , such session id or seed generate cryptographic key , then attacker may be able to easily guess id or cryptographic key and gain access restrict functionality .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "440",
            "value": {
                "id": "440",
                "name": "Expected Behavior Violation",
                "description": "A feature, API, or function does not perform according to its specification.",
                "extended_description": "",
                "child_of": [
                    "684"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "250",
            "value": {
                "id": "250",
                "name": "Execution with Unnecessary Privileges",
                "description": "The product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.",
                "extended_description": " new weakness can be expose run extra privilege , such root or administrator , can disable normal security check be perform operating system or surround environment . other pre - existing weakness can turn security vulnerability occur operate raise privilege . privilege management function can behave less - - obvious way , and have different quirk different platform . inconsistency be particularly pronounce be transition one non - root user . signal handler and spawn process run privilege owning process , process be run root when signal fire or sub - process be execute , signal handler or sub - process will operate root privilege .",
                "child_of": [
                    "657",
                    "269"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " execute unauthorized code or command",
                    " read application data",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " attacker will be able to gain access resource be allow extra privilege . common result include execute code , disable service , and read restricted datum .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1110",
            "value": {
                "id": "1110",
                "name": "Incomplete Design Documentation",
                "description": "The product's design documentation does not adequately describe control flow, data flow, system initialization, relationships between tasks, components, rationales, or other important aspects of the design.",
                "extended_description": "",
                "child_of": [
                    "1059"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "908",
            "value": {
                "id": "908",
                "name": "Use of Uninitialized Resource",
                "description": "The product uses or accesses a resource that has not been initialized.",
                "extended_description": " when resource have not be properly initialize , product may behave unexpectedly . may lead crash or invalid memory access , but consequence vary depend type resource and how be use product .",
                "child_of": [
                    "665"
                ],
                "con_scope": [
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " read memory",
                    " read application data",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " uninitialized resource may contain value cause program flow to change way programmer do not intend .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "671",
            "value": {
                "id": "671",
                "name": "Lack of Administrator Control over Security",
                "description": "The product uses security features in a way that prevents the product's administrator from tailoring security settings to reflect the environment in which the product is being used. This introduces resultant weaknesses or prevents it from operating at a level of security that is desired by the administrator.",
                "extended_description": " product 's administrator do not have ability to manage security - relate decision time , then protect product outside threat - include product 's developer - can become impossible . example , hard - code account name and password can not be change administrator , thus expose product to attack administrator can not prevent .",
                "child_of": [
                    "657"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "348",
            "value": {
                "id": "348",
                "name": "Use of Less Trusted Source",
                "description": "The product has two different sources of the same data or information, but it uses the source that has less support for verification, is less trusted, or is less resistant to attack.",
                "extended_description": "",
                "child_of": [
                    "345"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": " attacker could utilize untrusted data source to bypass protection mechanism and gain access sensitive datum .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "396",
            "value": {
                "id": "396",
                "name": "Declaration of Catch for Generic Exception",
                "description": "Catching overly broad exceptions promotes complex error handling code that is more likely to contain security vulnerabilities.",
                "extended_description": " multiple catch block can get ugly and repetitive , but \" condense \" catch block catch high - level class exception can obscure exception deserve special treatment or should not be catch point program . catch overly broad exception essentially defeat purpose language 's type exception , and can become particularly dangerous program grow and begin to throw new type exception . new exception type will not receive attention .",
                "child_of": [
                    "705",
                    "755",
                    "221"
                ],
                "con_scope": [
                    " non - repudiation",
                    " other"
                ],
                "con_impacts": [
                    " hide activity",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "562",
            "value": {
                "id": "562",
                "name": "Return of Stack Variable Address",
                "description": "A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.",
                "extended_description": " local variable be allocate stack , when program return pointer local variable , be return stack address . subsequent function call be likely to re - use same stack address , thereby overwrite value pointer , no long correspond same variable function 's stack frame be invalidate when return . good will cause value pointer to change unexpectedly . many case cause program to crash next time pointer be dereference .",
                "child_of": [
                    "758"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " read memory",
                    " modify memory",
                    " execute unauthorized code or command",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " return stack buffer address be dereference return , then attacker may be able to modify or read memory , depend how address be use .   address be use reading , then address may be expose , or content address point to .   address be use writing , can lead crash and possibly code execution .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "807",
            "value": {
                "id": "807",
                "name": "Reliance on Untrusted Inputs in a Security Decision",
                "description": "The product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.",
                "extended_description": " developer may assume input such cookie , environment variable , and hide form field can not be modify . however , attacker could change input use customize client or other attack . change might not be detect . when security decision such authentication and authorization be make base value input , attacker can bypass security software . sufficient encryption , integrity checking , or other mechanism , input originate outsider can not be trust .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control",
                    " availability",
                    " other"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " varie context"
                ],
                "con_note": " attacker can bypass security decision to access be be protect . consequence will depend associated functionality , but can range grant additional privilege untrusted user bypass important security check . ultimately , weakness may lead exposure or modification sensitive datum , system crash , or execution arbitrary code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "198",
            "value": {
                "id": "198",
                "name": "Use of Incorrect Byte Ordering",
                "description": "The product receives input from an upstream component, but it does not account for byte ordering (e.g. big-endian and little-endian) when processing the input, causing an incorrect number or value to be used.",
                "extended_description": "",
                "child_of": [
                    "188"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1071",
            "value": {
                "id": "1071",
                "name": "Empty Code Block",
                "description": "The source code contains a block that does not contain any code, i.e., the block is empty.",
                "extended_description": " empty code block can occur body conditional , function or method definition , exception handler , etc .   empty code block might be intentional , might also indicate incomplete implementation , accidental code deletion , unexpected macro expansion , etc .   programming language and construct , empty block might be allow syntax , but lack behavior block might violate convention or api such way be error .",
                "child_of": [
                    "1164"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "337",
            "value": {
                "id": "337",
                "name": "Predictable Seed in Pseudo-Random Number Generator (PRNG)",
                "description": "A Pseudo-Random Number Generator (PRNG) is initialized from a predictable seed, such as the process ID or system time.",
                "extended_description": " use predictable seed significantly reduce number possible seed attacker would need to test order to predict random number will be generate prng .",
                "child_of": [
                    "335"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "79",
            "value": {
                "id": "79",
                "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                "description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
                "extended_description": " cross - site scripting ( xss ) vulnerability occur when : untrusted datum enter web application , typically web request . web application dynamically generate web page contain untrusted datum . page generation , application do not prevent datum contain content be executable web browser , such javascript , html tag , html attribute , mouse event , flash , activex , etc . victim visit generate web page web browser , contain malicious script be inject use untrusted datum . script come web page be send web server , victim 's web browser execute malicious script context web server 's domain . effectively violate intention web browser 's same - origin policy , state script one domain should not be able to access resource or run code different domain . be three main kind xss : type 1 : reflect xss ( or non - persistent)- \n         \t\t\t server read datum directly http request and reflect back http response . reflect xss exploit occur when attacker cause victim to supply dangerous content vulnerable web application , be then reflect back victim and execute web browser . most common mechanism deliver malicious content be to include parameter url be post publicly or e - mail directly victim . url construct manner constitute core many phishe scheme , whereby attacker convince victim to visit url refer vulnerable site . site reflect attacker 's content back victim , content be execute victim 's browser . type 2 : store xss ( or persistent)- \n                application store dangerous datum database , message forum , visitor log , or other trusted data store . later time , dangerous data be subsequently read back application and include dynamic content . attacker 's perspective , optimal place to inject malicious content be area be display either many user or particularly interesting user . interesting user typically have elevate privilege application or interact sensitive datum be valuable attacker . one user execute malicious content , attacker may be able to perform privileged operation behalf user or gain access sensitive datum belong user . example , attacker might inject xss log message , might not be handle properly when administrator view log . \n             type 0 : dom - base xss- \n                dom - base xss , client perform injection xss page ; other type , server perform injection . dom - base xss generally involve server - control , trust script be send client , such javascript perform sanity check form user submit . server - supply script process user - supply datum and then inject back web page ( such dynamic html ) , then dom - base xss be possible . \n             once malicious script be inject , attacker can perform variety malicious activity . attacker could transfer private information , such cookie may include session information , victim 's machine attacker . attacker could send malicious request web site behalf victim , could be especially dangerous site victim have administrator privilege to manage site . phishe attack could be use to emulate trust web site and trick victim enter password , allow attacker to compromise victim 's account web site . finally , script could exploit vulnerability web browser possibly take over victim 's machine , sometimes refer \" drive - by hacking . \"in many case , attack can be launch victim even be aware . even careful user , attacker frequently use variety method to encode malicious portion attack , such url encoding or unicode , request look less suspicious .",
                "child_of": [
                    "74"
                ],
                "con_scope": [
                    " access control",
                    " confidentiality",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " read application data",
                    " execute unauthorized code or command",
                    " execute unauthorized code or command",
                    " bypass protection mechanism",
                    " read application data"
                ],
                "con_note": " consequence xss attack be same regardless be store or reflect . difference be how payload arrive server . xss can cause variety problem end user range severity annoyance to complete account compromise . cross - site scripting vulnerability can be exploit to manipulate or steal cookie , create request can be mistaken valid user , compromise confidential information , or execute malicious code end user system variety nefarious purpose . other damaging attack include disclosure end user file , installation trojan horse program , redirect user other page or site , run \" active x \" control ( microsoft internet explorer ) site user perceive trustworthy , and modify presentation content .",
                "alt_term": [
                    " xss",
                    " html injection",
                    " css"
                ],
                "alt_desc": [
                    " common abbreviation cross - site scripting .",
                    " use synonym store ( type 2 ) xss .",
                    " early year initial discovery xss , \" css \" be commonly - use acronym .   however , would cause confusion \" cascade style sheets , \" so usage acronym have decline significantly ."
                ]
            }
        },
        {
            "name": "44",
            "value": {
                "id": "44",
                "name": "Path Equivalence: 'file.name' (Internal Dot)",
                "description": "The product accepts path input in the form of internal dot ('file.ordir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "41"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1339",
            "value": {
                "id": "1339",
                "name": "Insufficient Precision or Accuracy of a Real Number",
                "description": "The product processes a real number with an implementation in which the number's representation does not preserve required accuracy and precision in its fractional part, causing an incorrect result.",
                "extended_description": " when security decision or calculation require highly precise , accurate number such financial calculation or price , then small variation number could be exploit attacker . \n             be multiple way to store fractional part real number computer . case , be limit accuracy record fraction . fraction can be represent fix number digit ( binary or decimal ) , might not be enough digit assign to represent number . other case number can not be represent fix number digit repeat decimal or binary notation ( e.g. 0.333333 ... ) or transcendental number such \u03a0 or \u221a2 . round number can lead situation where computer result do not adequately match result sufficiently accurate math .",
                "child_of": [
                    "682"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command",
                    " read application data",
                    " modify application data"
                ],
                "con_note": " weakness can sometimes trigger buffer overflow can be use to execute arbitrary code . be usually scope product 's implicit security policy .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1316",
            "value": {
                "id": "1316",
                "name": "Fabric-Address Map Allows Programming of Unwarranted Overlaps of Protected and Unprotected Ranges",
                "description": "The address map of the on-chip fabric has protected and unprotected regions overlapping, allowing an attacker to bypass access control to the overlapping portion of the protected region.",
                "extended_description": " various range can be define system - address map , either memory or memory - map - io ( mmio ) space . range be usually define use special range register contain information , such base address and size . address decode be process determine range incoming transaction be destine . to ensure isolation , range contain secret datum be access - control protect . occasionally , range could overlap . overlap could either be intentional ( e.g. due limited number range register or limited choice choose size range ) or unintentional ( e.g. introduce error ) . hardware design allow dynamic remapping address range assign peripheral mmio range . such design , intentional address overlap can be create misconfiguration malicious software . when protect and unprotected range overlap , attacker could send transaction and potentially compromise protection place , violate principle least privilege .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control",
                    " authorization"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " read memory",
                    " modify memory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "82",
            "value": {
                "id": "82",
                "name": "Improper Neutralization of Script in Attributes of IMG Tags in a Web Page",
                "description": "The web application does not neutralize or incorrectly neutralizes scripting elements within attributes of HTML IMG tags, such as the src attribute.",
                "extended_description": " attacker can embed xss exploit value img attribute ( e.g. src ) be stream and then execute victim 's browser . note when page be load user 's browser , exploit will automatically execute .",
                "child_of": [
                    "83"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " read application data",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1092",
            "value": {
                "id": "1092",
                "name": "Use of Same Invokable Control Element in Multiple Architectural Layers",
                "description": "The product uses the same control element across multiple architectural layers.",
                "extended_description": " issue make more difficult to understand and maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "706",
            "value": {
                "id": "706",
                "name": "Use of Incorrectly-Resolved Name or Reference",
                "description": "The product uses a name or reference to access a resource, but the name/reference resolves to a resource that is outside of the intended control sphere.",
                "extended_description": "",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1273",
            "value": {
                "id": "1273",
                "name": "Device Unlock Credential Sharing",
                "description": "The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.",
                "extended_description": " \" unlock device \" often mean activate certain unadvertised debug and manufacturer - specific capability device use sensitive credential . unlock device might be necessary purpose troubleshoot device problem . example , suppose device contain ability to dump content full system memory disable memory - protection mechanism . be highly security - sensitive capability , capability be \" lock \" production part . device gets unlocked supply proper credential , debug capability be not available . case where chip designer , chip manufacturer ( fabricator ) , and manufacturing and assembly tester be employ same company , risk compromise credential be greatly reduce . however , risk be great when chip designer be employ one company , chip manufacturer be employ company ( foundry ) , and assembler and tester be employ yet third company . different company will need to perform various test device to verify correct device function , need to share unlock key . unfortunately , level secrecy and policy might be quite different company , greatly increase risk sensitive credential be compromise .",
                "child_of": [
                    "200"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control",
                    " accountability",
                    " authentication",
                    " authorization",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " modify files or directory",
                    " read files or directory",
                    " modify application data",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " bypass protection mechanism"
                ],
                "con_note": " unlock credential be compromise , attacker can use credential to unlock device and gain unauthorized access hidden functionality protect credential .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1004",
            "value": {
                "id": "1004",
                "name": "Sensitive Cookie Without 'HttpOnly' Flag",
                "description": "The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.",
                "extended_description": " httponly flag direct compatible browser to prevent client - side script access cookie . include httponly flag set - cookie http response header help mitigate risk associate cross - site scripting ( xss ) where attacker 's script code might attempt to read content cookie and exfiltrate information obtain . when set , browser support flag will not reveal content cookie third party client - side script execute xss .",
                "child_of": [
                    "732"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " gain privileges or assume identity"
                ],
                "con_note": " cookie question be authentication cookie , then not set httponly flag may allow adversary to steal authentication datum ( e.g. , session id ) and assume identity user .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1106",
            "value": {
                "id": "1106",
                "name": "Insufficient Use of Symbolic Constants",
                "description": "The source code uses literal constants that may need to change or evolve over time, instead of using symbolic constants.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1078"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1102",
            "value": {
                "id": "1102",
                "name": "Reliance on Machine-Dependent Data Representation",
                "description": "The code uses a data representation that relies on low-level data representation or constructs that may vary across different processors, physical machines, OSes, or other physical components.",
                "extended_description": " issue make more difficult to maintain and/or port product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "758"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "224",
            "value": {
                "id": "224",
                "name": "Obscured Security-relevant Information by Alternate Name",
                "description": "The product records security-relevant information according to an alternate name of the affected entity, instead of the canonical name.",
                "extended_description": "",
                "child_of": [
                    "221"
                ],
                "con_scope": [
                    " non - repudiation",
                    " access control"
                ],
                "con_impacts": [
                    " hide activity",
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1336",
            "value": {
                "id": "1336",
                "name": "Improper Neutralization of Special Elements Used in a Template Engine",
                "description": "The product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine.",
                "extended_description": " many web application use template engine allow developer to insert externally - influence value free text or message order to generate full web page , document , message , etc . such engine include twig , jinja2 , pug , java server pages , freemarker , velocity , coldfusion , smarty , and many other - include php . cms ( content management systems ) also use template . template engine often have own custom command or expression language . attacker can influence input template be process , then attacker can invoke arbitrary expression , i.e. perform injection attack . example , template language , attacker could inject expression \" { { 7 * 7 } } \" and determine output return \" 49 \" instead . syntax vary depend language . case , xss - style attack can work , can obscure root cause developer do not closely investigate root cause error . template engine can be use server or client , so \" side \" could be affect injection . mechanism attack or affected technology might be different , but mistake be fundamentally same .",
                "child_of": [
                    "94"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [
                    " server - side template injection / ssti",
                    " client - side template injection / csti"
                ],
                "alt_desc": [
                    " term be use injection template engine be use server .",
                    " term be use injection template engine be use client ."
                ]
            }
        },
        {
            "name": "318",
            "value": {
                "id": "318",
                "name": "Cleartext Storage of Sensitive Information in Executable",
                "description": "The product stores sensitive information in cleartext in an executable.",
                "extended_description": " attacker can reverse engineer binary code to obtain secret datum . be especially easy when cleartext be plain ascii . even information be encode way be not human - readable , certain technique could determine which encoding be be use , then decode information .",
                "child_of": [
                    "312"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "11",
            "value": {
                "id": "11",
                "name": "ASP.NET Misconfiguration: Creating Debug Binary",
                "description": "Debugging messages help attackers learn about the system and plan a form of attack.",
                "extended_description": " asp .net application can be configure to produce debug binary . binary give detailed debugging message and should not be use production environment . debug binary be mean to be use development or testing environment and can pose security risk be deploy production .",
                "child_of": [
                    "489"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " attacker can leverage additional information gain debug output mount attack target framework , database , or other resource use application .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "535",
            "value": {
                "id": "535",
                "name": "Exposure of Information Through Shell Error Message",
                "description": "A command shell error message indicates that there exists an unhandled exception in the web application code. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.",
                "extended_description": "",
                "child_of": [
                    "211"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "233",
            "value": {
                "id": "233",
                "name": "Improper Handling of Parameters",
                "description": "The product does not properly handle when the expected number of parameters, fields, or arguments is not provided in input, or if those parameters are undefined.",
                "extended_description": "",
                "child_of": [
                    "228"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "272",
            "value": {
                "id": "272",
                "name": "Least Privilege Violation",
                "description": "The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed.",
                "extended_description": "",
                "child_of": [
                    "271"
                ],
                "con_scope": [
                    " access control",
                    " confidentiality"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " read application data",
                    " read files or directory"
                ],
                "con_note": " attacker may be able to access resource elevated privilege could not be access attacker 's original privilege . be particularly likely conjunction flaw , such buffer overflow .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "383",
            "value": {
                "id": "383",
                "name": "J2EE Bad Practices: Direct Use of Threads",
                "description": "Thread management in a Web application is forbidden in some circumstances and is always highly error prone.",
                "extended_description": " thread management web application be forbid j2ee standard circumstance and be always highly error prone . manage thread be difficult and be likely to interfere unpredictable way behavior application container . even interfere container , thread management usually lead bug be hard to detect and diagnose deadlock , race condition , and other synchronization error .",
                "child_of": [
                    "695"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1252",
            "value": {
                "id": "1252",
                "name": "CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations",
                "description": "The CPU is not configured to provide hardware support for exclusivity of write and execute operations on memory. This allows an attacker to execute data from all of memory.",
                "extended_description": " cpu provide special bit support exclusivity write and execute operation . bit be use to segregate area memory either mark code ( instruction , can be execute ) or datum ( should not be execute ) . way , user can write region memory , user can not execute region and vice versa . exclusivity provide special hardware bit be leverage operating system to protect executable space . bit be available most modern processor default , cpu exclusivity be implement memory - protection unit ( mpu ) and memory - management unit ( mmu ) which memory region can be carve out exact read , write , and execute permission . however , cpu do not have mmu / mpu , then be write exclusivity . configure exclusivity operation segregated area memory , attacker may be able to inject malicious code memory and later execute .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1063",
            "value": {
                "id": "1063",
                "name": "Creation of Class Instance within a Static Code Block",
                "description": "A static code block creates an instance of a class.",
                "extended_description": " pattern identify situation where storable datum element or member datum element be initialize value block code be declare static . issue can make product perform more slowly perform initialization be need .   relevant code be reachable attacker , then performance problem might introduce vulnerability .",
                "child_of": [
                    "1176"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "773",
            "value": {
                "id": "773",
                "name": "Missing Reference to Active File Descriptor or Handle",
                "description": "The product does not properly maintain references to a file descriptor or handle, which prevents that file descriptor/handle from being reclaimed.",
                "extended_description": " can cause product to consume available file descriptor or handle , can prevent other process perform critical file processing operation .",
                "child_of": [
                    "771"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( other )"
                ],
                "con_note": " attacker can influence allocation resource be not properly maintain could deplete available resource pool and prevent other process access same type resource .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "780",
            "value": {
                "id": "780",
                "name": "Use of RSA Algorithm without OAEP",
                "description": "The product uses the RSA algorithm but does not incorporate Optimal Asymmetric Encryption Padding (OAEP), which might weaken the encryption.",
                "extended_description": " padding scheme be often use cryptographic algorithm to make plaintext less predictable and complicate attack effort . oaep scheme be often use rsa to nullify impact predictable common text .",
                "child_of": [
                    "327"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": " oaep rsa encryption , will take less work attacker decrypt datum or to infer pattern ciphertext .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1174",
            "value": {
                "id": "1174",
                "name": "ASP.NET Misconfiguration: Improper Model Validation",
                "description": "The ASP.NET application does not use, or incorrectly uses, the model validation framework.",
                "extended_description": "",
                "child_of": [
                    "1173"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": " unchecked input lead cross - site scripting , process control , and sql injection vulnerability , other .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "129",
            "value": {
                "id": "129",
                "name": "Improper Validation of Array Index",
                "description": "The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.",
                "extended_description": "",
                "child_of": [
                    "1285"
                ],
                "con_scope": [
                    " integrity",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " integrity",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " integrity",
                    " availability",
                    " confidentiality"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " modify memory",
                    " modify memory",
                    " read memory",
                    " execute unauthorized code or command",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command",
                    " read memory",
                    " modify memory"
                ],
                "con_note": " single fault could allow either overflow ( cwe-788 ) or underflow ( cwe-786 ) array index . happen next will depend type operation be perform bound , but can expose sensitive information , cause system crash , or possibly lead arbitrary code execution .",
                "alt_term": [
                    " - - bound array index",
                    " index - - - range",
                    " array index underflow"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "707",
            "value": {
                "id": "707",
                "name": "Improper Neutralization",
                "description": "The product does not ensure or incorrectly ensures that structured messages or data are well-formed and that certain security properties are met before being read from an upstream component or sent to a downstream component.",
                "extended_description": " message be malforme , may cause message to be incorrectly interpret . neutralization be abstract term technique ensure input ( and output ) conform expectation and be \" safe . \"   can be do : check input / output be already \" safe \" ( e.g. validation)transformation input / output to be \" safe \" use technique such filtering , encoding / decode , escape / unescaping , quote / unquoting , or canonicalizationprevente input / output be directly provide attacker ( e.g. \" indirect selection \" map externally - provide value internally - control values)prevente input / output be process weakness typically apply case where product prepare control message process must act on , such command or query , and malicious input be intend datum , can enter control plane instead . however , weakness also apply more general case where be not always control implication .",
                "child_of": [],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "821",
            "value": {
                "id": "821",
                "name": "Incorrect Synchronization",
                "description": "The product utilizes a shared resource in a concurrent manner, but it does not correctly synchronize access to the resource.",
                "extended_description": " access share resource be not correctly synchronize , then resource may not be state be expect product . might lead unexpected or insecure behavior , especially attacker can influence share resource .",
                "child_of": [
                    "662"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " other"
                ],
                "con_impacts": [
                    " modify application data",
                    " read application data",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "672",
            "value": {
                "id": "672",
                "name": "Operation on a Resource after Expiration or Release",
                "description": "The product uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.",
                "extended_description": "",
                "child_of": [
                    "666"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " other",
                    " availability"
                ],
                "con_impacts": [
                    " modify application data",
                    " read application data",
                    " other",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " when resource be release might not be expected state , later attempt to access resource may lead resultant error may lead crash .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "240",
            "value": {
                "id": "240",
                "name": "Improper Handling of Inconsistent Structural Elements",
                "description": "The product does not handle or incorrectly handles when two or more structural elements should be consistent, but are not.",
                "extended_description": "",
                "child_of": [
                    "237",
                    "707"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " varie context",
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "276",
            "value": {
                "id": "276",
                "name": "Incorrect Default Permissions",
                "description": "During installation, installed file permissions are set to allow anyone to modify those files.",
                "extended_description": "",
                "child_of": [
                    "732"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "455",
            "value": {
                "id": "455",
                "name": "Non-exit on Failed Initialization",
                "description": "The product does not exit or otherwise modify its operation when security-relevant errors occur during initialization, such as when a configuration file has a format error or a hardware security module (HSM) cannot be activated, which can cause the product to execute in a less secure fashion than intended by the administrator.",
                "extended_description": "",
                "child_of": [
                    "665",
                    "705",
                    "636"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " modify application data",
                    " alter execution logic"
                ],
                "con_note": " application could be place insecure state may allow attacker to modify sensitive datum or allow unintended logic to be execute .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "486",
            "value": {
                "id": "486",
                "name": "Comparison of Classes by Name",
                "description": "The product compares classes by name, which can cause it to use the wrong class when multiple classes can have the same name.",
                "extended_description": " decision to trust method and datum object be base name class , be possible malicious user to send object same name trust class and thereby gain trust afford know class and type .",
                "child_of": [
                    "1025"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": " product rely solely name object to determine identity , may execute incorrect or unintended code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "430",
            "value": {
                "id": "430",
                "name": "Deployment of Wrong Handler",
                "description": "The wrong \"handler\" is assigned to process an object.",
                "extended_description": " example deploy wrong handler would be call servlet to reveal source code .jsp file , or automatically \" determine \" type object even be contradictory explicitly specify type .",
                "child_of": [
                    "691"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " varie context",
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "159",
            "value": {
                "id": "159",
                "name": "Improper Handling of Invalid Use of Special Elements",
                "description": "The product does not properly filter, remove, quote, or otherwise manage the invalid use of special elements in user-controlled input, which could cause adverse effect on its behavior and integrity.",
                "extended_description": "",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "394",
            "value": {
                "id": "394",
                "name": "Unexpected Status Code or Return Value",
                "description": "The product does not properly check when a function or operation returns a value that is legitimate for the function, but is not expected by the product.",
                "extended_description": "",
                "child_of": [
                    "754"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " unexpected state",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "781",
            "value": {
                "id": "781",
                "name": "Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code",
                "description": "The product defines an IOCTL that uses METHOD_NEITHER for I/O, but it does not validate or incorrectly validates the addresses that are provided.",
                "extended_description": " when ioctl use method_neither option / o control , be responsibility ioctl to validate address have be supply . validation be miss or incorrect , attacker can supply arbitrary memory address , lead code execution or denial service .",
                "child_of": [
                    "1285"
                ],
                "con_scope": [
                    " integrity",
                    " availability",
                    " confidentiality"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " execute unauthorized code or command",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " attacker may be able to access memory belong process or user . attacker can control content ioctl write , may lead code execution high privilege level . least , crash can occur .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "77",
            "value": {
                "id": "77",
                "name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
                "description": "The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
                "extended_description": " command injection vulnerability typically occur when:1 . datum enter application untrusted source.2 . datum be part string be execute command application.3 . execute command , application give attacker privilege or capability attacker would not otherwise have . many protocol and product have own custom command language . os or shell command string be frequently discover and target , developer may not realize other command language might also be vulnerable attack . command injection be common problem wrapper program .",
                "child_of": [
                    "74"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": " malicious user inject character ( such semi - colon ) delimit end one command and beginning , may be possible to then insert entirely new and unrelated command be not intend to be execute .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "610",
            "value": {
                "id": "610",
                "name": "Externally Controlled Reference to a Resource in Another Sphere",
                "description": "The product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.",
                "extended_description": "",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "125",
            "value": {
                "id": "125",
                "name": "Out-of-bounds Read",
                "description": "The product reads data past the end, or before the beginning, of the intended buffer.",
                "extended_description": " typically , can allow attacker to read sensitive information other memory location or cause crash .   crash can occur when code read variable amount datum and assume sentinel exist to stop read operation , such nul string .   expect sentinel might not be locate out - - bound memory , cause excessive datum to be read , lead segmentation fault or buffer overflow .   product may modify index or perform pointer arithmetic reference memory location be outside boundary buffer .   subsequent read operation then produce undefined or unexpected result .",
                "child_of": [
                    "119"
                ],
                "con_scope": [
                    " confidentiality",
                    " confidentiality"
                ],
                "con_impacts": [
                    " read memory",
                    " bypass protection mechanism"
                ],
                "con_note": " read - - bound memory , attacker might be able to get secret value , such memory address , can be bypass protection mechanism such aslr order to improve reliability and likelihood exploit separate weakness to achieve code execution instead just denial service .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "395",
            "value": {
                "id": "395",
                "name": "Use of NullPointerException Catch to Detect NULL Pointer Dereference",
                "description": "Catching NullPointerException should not be used as an alternative to programmatic checks to prevent dereferencing a null pointer.",
                "extended_description": " programmer typically catch nullpointerexception three circumstance : program contain null pointer dereference . catch result exception be easy fix underlying problem . program explicitly throw nullpointerexception to signal error condition . code be part test harness supply unexpected input class test . three circumstance , only last be acceptable .",
                "child_of": [
                    "705",
                    "755"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1232",
            "value": {
                "id": "1232",
                "name": "Improper Lock Behavior After Power State Transition",
                "description": "Register lock bit protection disables changes to system configuration once the bit is set. Some of the protected registers or lock bits become programmable after power state transitions (e.g., Entry and wake from low power sleep modes) causing the system configuration to be changeable.",
                "extended_description": " device may allow device configuration control need to be program device power reset trust firmware or software module ( commonly set bios / bootloader ) and then lock further modification . action be commonly implement use programmable lock bit , , when set , disable write protect set register or address region . power state transition , lock bit be set to unlocked . common weakness can exist such protection scheme be lock gets clear , value protect register get reset , or lock become programmable .",
                "child_of": [
                    "667"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " modify memory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "692",
            "value": {
                "id": "692",
                "name": "Incomplete Denylist to Cross-Site Scripting",
                "description": "The product uses a denylist-based protection mechanism to defend against XSS attacks, but the denylist is incomplete, allowing XSS variants to succeed.",
                "extended_description": " xss might seem simple to prevent , web browser vary so widely how parse web page , denylist can not keep track all variation . \" xss cheat sheet \" [ ref-714 ] contain large number attack be intend to bypass incomplete denylist .",
                "child_of": [
                    "184"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1261",
            "value": {
                "id": "1261",
                "name": "Improper Handling of Single Event Upsets",
                "description": "The hardware logic does not effectively handle when single-event upsets (SEUs) occur.",
                "extended_description": " technology trend such cmos - transistor down - size , use \n             new material , and system - - chip architecture continue to increase \n             sensitivity system soft error . error be random , and \n             cause might be internal ( e.g. , interconnect coupling ) or external \n             ( e.g. , cosmic radiation ) . soft error be not permanent nature \n             and cause temporary bit flip know single - event upset ( seus ) . \n             seu be induce error circuit cause when charge particle lose \n             energy ionize medium pass , leave behind \n             wake electron - hole pair cause temporary failure . \n             failure occur security - sensitive module chip , might \n             compromise security guarantee chip . instance , \n             temporary failure could be bit flip change privilege \n\t     regular user root .",
                "child_of": [
                    "1384"
                ],
                "con_scope": [
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " dos : instability",
                    " gain privileges or assume identity",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "769",
            "value": {
                "id": "769",
                "name": "DEPRECATED: Uncontrolled File Descriptor Consumption",
                "description": "This entry has been deprecated because it was a duplicate ofCWE-774. All content has been transferred toCWE-774.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "833",
            "value": {
                "id": "833",
                "name": "Deadlock",
                "description": "The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.",
                "extended_description": "",
                "child_of": [
                    "667"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( other )",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " thread execution will \" hang \" and prevent task complete . case , cpu consumption may occur lock check occur tight loop .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "91",
            "value": {
                "id": "91",
                "name": "XML Injection (aka Blind XPath Injection)",
                "description": "The product does not properly neutralize special elements that are used in XML, allowing attackers to modify the syntax, content, or commands of the XML before it is processed by an end system.",
                "extended_description": " xml , special element could include reserve word or character such \" < \" , \" > \" , \" \" \" , and \" & \" , could then be use to add new datum or modify xml syntax .",
                "child_of": [
                    "74"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " read application data",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "95",
            "value": {
                "id": "95",
                "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. \"eval\").",
                "extended_description": " may allow attacker to execute arbitrary code , or least modify code can be execute .",
                "child_of": [
                    "94"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control",
                    " access control",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " other",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " read files or directory",
                    " read application data",
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " execute unauthorized code or command",
                    " hide activity"
                ],
                "con_note": " often action perform inject control code be unlogged .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "105",
            "value": {
                "id": "105",
                "name": "Struts: Form Field Without Validator",
                "description": "The product has a form field that is not validated by a corresponding validation form, which can introduce other weaknesses related to insufficient input validation.",
                "extended_description": " omit validation even single input field may give attacker leeway need to compromise product . j2ee application be not generally susceptible memory corruption attack , j2ee application interface native code do not perform array bound check , attacker may be able to use input validation mistake j2ee application to launch buffer overflow attack .",
                "child_of": [
                    "1173"
                ],
                "con_scope": [
                    " integrity",
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state",
                    " bypass protection mechanism"
                ],
                "con_note": " unused field be not validate , share business logic action may allow attacker to bypass validation check be perform other use form .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1023",
            "value": {
                "id": "1023",
                "name": "Incomplete Comparison with Missing Factors",
                "description": "The product performs a comparison between entities that must consider multiple factors or characteristics of each entity, but the comparison does not include one or more of these factors.",
                "extended_description": " incomplete comparison can lead resultant weakness , e.g. , operate wrong object or make security decision consider require factor . \n      ",
                "child_of": [
                    "697"
                ],
                "con_scope": [
                    " integrity",
                    " access control"
                ],
                "con_impacts": [
                    " alter execution logic",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1325",
            "value": {
                "id": "1325",
                "name": "Improperly Controlled Sequential Memory Allocation",
                "description": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.",
                "extended_description": " product might limit amount memory be allocate single operation single object ( such malloc array ) , attacker can cause multiple object to be allocate separate operation , then might cause high total memory consumption developer intend , lead denial service .",
                "child_of": [
                    "770"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( memory )"
                ],
                "con_note": " not control memory allocation can result request too much system memory , possibly lead crash application out - - memory condition , or consumption large amount memory system .",
                "alt_term": [
                    " stack exhaustion"
                ],
                "alt_desc": [
                    " when weakness allocate excessive memory stack , be often describe \" stack exhaustion , \" be technical impact weakness . technical impact be often encounter consequence cwe-789 and/or cwe-1325 ."
                ]
            }
        },
        {
            "name": "102",
            "value": {
                "id": "102",
                "name": "Struts: Duplicate Validation Forms",
                "description": "The product uses multiple validation forms with the same name, which might cause the Struts Validator to validate a form that the programmer does not expect.",
                "extended_description": " two validation form have same name , struts validator arbitrarily choose one form to use input validation and discard other . decision might not correspond programmer 's expectation , possibly lead resultant weakness . moreover , indicate validation logic be not up - - date , and can indicate other , more subtle validation error be present .",
                "child_of": [
                    "694",
                    "1173"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1272",
            "value": {
                "id": "1272",
                "name": "Sensitive Information Uncleared Before Debug/Power State Transition",
                "description": "The product performs a power or debug state transition, but it does not clear sensitive information that should no longer be accessible due to changes to information access restrictions.",
                "extended_description": " device or system frequently employ many power and sleep state normal operation ( e.g. , normal power , additional power , low power , hibernate , deep sleep , etc . ) . device also may be operate debug condition . state transition can happen one power or debug state . be information available previous state should not be available next state and be not properly remove transition next state , sensitive information may leak system .",
                "child_of": [
                    "226"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control",
                    " accountability",
                    " authentication",
                    " authorization",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " read memory",
                    " read application data"
                ],
                "con_note": " sensitive information may be use to unlock additional capability device and take advantage hide functionality could be use to compromise device security .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1112",
            "value": {
                "id": "1112",
                "name": "Incomplete Documentation of Program Execution",
                "description": "The document does not fully define all mechanisms that are used to control or influence how product-specific programs are executed.",
                "extended_description": " include environmental variable , configuration file , registry key , command - line switch or option , or system setting .",
                "child_of": [
                    "1059"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "502",
            "value": {
                "id": "502",
                "name": "Deserialization of Untrusted Data",
                "description": "The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid.",
                "extended_description": " be often convenient to serialize object communication or to save later use . however , deserialize datum or code can often be modify use provide accessor function do not use cryptography to protect . furthermore , cryptography would still be client - side security -- be dangerous security assumption . datum be untrusted can not be trust to be well - form . when developer place restriction \" gadget chain , \" or series instance and method invocation can self - execute deserialization process ( i.e. , object be return caller ) , be sometimes possible attacker to leverage to perform unauthorized action , generate shell .",
                "child_of": [
                    "913"
                ],
                "con_scope": [
                    " integrity",
                    " availability",
                    " other"
                ],
                "con_impacts": [
                    " modify application data",
                    " unexpected state",
                    " dos : resource consumption ( cpu )",
                    " varie context"
                ],
                "con_note": " consequence can vary widely , depend object or method be be deserialize , and how be use . make assumption code deserialize object be valid be dangerous and can enable exploitation .",
                "alt_term": [
                    " marshaling , unmarshale",
                    " pickling , unpickling",
                    " php object injection"
                ],
                "alt_desc": [
                    " marshaling and unmarshaling be effectively synonym serialization and deserialization , respectively .",
                    " python , \" pickle \" functionality be use to perform serialization and deserialization .",
                    " php application researcher use term when attack unsafe use unserialize ( ) function ; but be also use cwe-915 ."
                ]
            }
        },
        {
            "name": "351",
            "value": {
                "id": "351",
                "name": "Insufficient Type Distinction",
                "description": "The product does not properly distinguish between different types of elements in a way that leads to insecure behavior.",
                "extended_description": "",
                "child_of": [
                    "345"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "150",
            "value": {
                "id": "150",
                "name": "Improper Neutralization of Escape, Meta, or Control Sequences",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.",
                "extended_description": " datum be parse , inject / absent / malforme delimiter may cause process to take unexpected action .",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "755",
            "value": {
                "id": "755",
                "name": "Improper Handling of Exceptional Conditions",
                "description": "The product does not handle or incorrectly handles an exceptional condition.",
                "extended_description": "",
                "child_of": [
                    "703"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "157",
            "value": {
                "id": "157",
                "name": "Failure to Sanitize Paired Delimiters",
                "description": "The product does not properly handle the characters that are used to mark the beginning and ending of a group of entities, such as parentheses, brackets, and braces.",
                "extended_description": " pair delimiter might include : < and > angle bracket ( and ) parenthese { and } brace [ and ] square bracket \" \" double quote ' ' single quote",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "479",
            "value": {
                "id": "479",
                "name": "Signal Handler Use of a Non-reentrant Function",
                "description": "The product defines a signal handler that calls a non-reentrant function.",
                "extended_description": " non - reentrant function be function can not safely be call , interrupted , and then recall first call have finish result memory corruption . can lead unexpected system state and unpredictable result variety potential consequence depend context , include denial service and code execution . many function be not reentrant , but can result corruption memory be use signal handler . function call syslog ( ) be example . order to perform functionality , allocate small amount memory \" scratch space . \" syslog ( ) be suspend signal call and signal handler call syslog ( ) , memory use function enter undefined , and possibly , exploitable state . implementation malloc ( ) and free ( ) manage metadata global structure order to track which memory be allocate which memory be available , but be non - reentrant . simultaneous call function can cause corruption metadata .",
                "child_of": [
                    "828",
                    "663"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " integrity"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " modify memory",
                    " modify application data"
                ],
                "con_note": " signal race condition often result datum corruption .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1250",
            "value": {
                "id": "1250",
                "name": "Improper Preservation of Consistency Between Independent Representations of Shared State",
                "description": "The product has or supports multiple distributed components or sub-systems that are each required to keep their own local copy of shared data - such as state or cache - but the product does not ensure that all local copies remain consistent with each other.",
                "extended_description": " highly distribute environment , or system distinct physical component operate independently , be often need component to store and update own local copy key datum such state or cache , component have same \" view \" overall system and operate coordinated fashion .   example , user social medium service or massively multiplayer online game might be use own personal computer also interact different physical host globally distribute service , but participant must be able to have same \" view \" world .   alternately , processor 's memory management unit ( mmu ) might have \" shadow \" mmu to distribute workload , and shadow mmu be expect to have same accessible range memory . such environment , become critical \n\t\t product to ensure \" share state \" be \n\t\t consistently modify distribute system . \n\t\t state be not consistently maintain \n\t\t system , then critical transaction might take place \n\t\t order , or user might not get same \n\t\t datum other user .   when inconsistency affect \n\t\t correctness operation , can introduce \n\t\t vulnerability mechanism depend \n\t\t consistent state .",
                "child_of": [
                    "664"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "651",
            "value": {
                "id": "651",
                "name": "Exposure of WSDL File Containing Sensitive Information",
                "description": "The Web services architecture may require exposing a Web Service Definition Language (WSDL) file that contains information on the publicly accessible services and how callers of these services should interact with them (e.g. what parameters they expect and what types they return).",
                "extended_description": " information exposure may occur following apply : wsdl file be accessible wide audience intend . wsdl file contain information method / service should not be publicly accessible or information deprecate method . problem be make more likely wsdl often be automatically generate code . information wsdl file help guess name / location method / resource should not be publicly accessible .",
                "child_of": [
                    "538"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " attacker may find sensitive information locate wsdl file .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "81",
            "value": {
                "id": "81",
                "name": "Improper Neutralization of Script in an Error Message Web Page",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters that could be interpreted as web-scripting elements when they are sent to an error page.",
                "extended_description": " error page may include customize 403 forbidden or 404 not find page . when attacker can trigger error contain script syntax attacker 's input , then cross - site scripting attack may be possible .",
                "child_of": [
                    "79"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " read application data",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "627",
            "value": {
                "id": "627",
                "name": "Dynamic Variable Evaluation",
                "description": "In a language where the user can influence the name of a variable at runtime, if the variable names are not controlled, an attacker can read or write to arbitrary variables, or access arbitrary functions.",
                "extended_description": " resultant vulnerability depend behavior application , both crossover point and control / datum flow be reachable relate variable or function .",
                "child_of": [
                    "914"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " modify application data",
                    " execute unauthorized code or command"
                ],
                "con_note": " attacker could gain unauthorized access internal program variable and execute arbitrary code .",
                "alt_term": [
                    " dynamic evaluation"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "41",
            "value": {
                "id": "41",
                "name": "Improper Resolution of Path Equivalence",
                "description": "The product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.",
                "extended_description": " path equivalence be usually employ order to circumvent access control express use incomplete set file name or file path representation . be different path traversal , wherein manipulation be perform to generate name different object .",
                "child_of": [
                    "706"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory",
                    " bypass protection mechanism"
                ],
                "con_note": " attacker may be able to traverse file system unintended location and read or overwrite content unexpected file . file be use security mechanism attacker may be able to bypass mechanism .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "184",
            "value": {
                "id": "184",
                "name": "Incomplete List of Disallowed Inputs",
                "description": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete, leading to resultant weaknesses.",
                "extended_description": " developer often try to protect product malicious input perform test input be know to be bad , such special character can invoke new command .   however , such list often only account most well - know bad input . attacker may be able to find other malicious input be not expect developer , allow to bypass intend protection mechanism .",
                "child_of": [
                    "693",
                    "1023"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [
                    " denylist / deny list",
                    " blocklist / block list",
                    " blacklist / black list"
                ],
                "alt_desc": [
                    " be use cwe and capec instead other commonly - use term .   counterpart be allowlist .",
                    " be often use security tool such firewall , email or web gateway , proxy , etc .",
                    " term be frequently use , but usage have be decline organization have start to adopt other term ."
                ]
            }
        },
        {
            "name": "118",
            "value": {
                "id": "118",
                "name": "Incorrect Access of Indexable Resource ('Range Error')",
                "description": "The product does not restrict or incorrectly restricts operations within the boundaries of a resource that is accessed using an index or pointer, such as memory or files.",
                "extended_description": "",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1126",
            "value": {
                "id": "1126",
                "name": "Declaration of Variable with Unnecessarily Wide Scope",
                "description": "The source code declares a variable in one scope, but the variable is only used within a narrower scope.",
                "extended_description": " issue make more difficult to understand and/or maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "238",
            "value": {
                "id": "238",
                "name": "Improper Handling of Incomplete Structural Elements",
                "description": "The product does not handle or incorrectly handles when a particular structural element is not completely specified.",
                "extended_description": "",
                "child_of": [
                    "237"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "42",
            "value": {
                "id": "42",
                "name": "Path Equivalence: 'filename.' (Trailing Dot)",
                "description": "The product accepts path input in the form of trailing dot ('filedir.') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "41",
                    "162"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "469",
            "value": {
                "id": "469",
                "name": "Use of Pointer Subtraction to Determine Size",
                "description": "The product subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.",
                "extended_description": "",
                "child_of": [
                    "682"
                ],
                "con_scope": [
                    " access control",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity"
                ],
                "con_note": " be potential arbitrary code execution privilege vulnerable program .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1292",
            "value": {
                "id": "1292",
                "name": "Incorrect Conversion of Security Identifiers",
                "description": "The product implements a conversion mechanism to map certain bus-transaction signals to security identifiers. However, if the conversion is incorrectly implemented, untrusted agents can gain unauthorized access to the asset.",
                "extended_description": " system - - chip ( soc ) , various integrate circuit and hardware engine generate transaction such access ( read / write ) asset or perform certain action ( e.g. , reset , fetch , compute , etc . ) . various type message information , typical transaction be comprise source identity ( to identify originator transaction ) and destination identity ( to route transaction respective entity ) . sometimes transaction be qualified security identifier . security identifier help destination agent decide set allow action ( e.g. , access asset read and writes).a typical bus connect several leader and follower agent . follower agent implement bus protocol differently leader agent . protocol conversion happen bridge to seamlessly connect different protocol bus . one example be system implement leader advanced high - performance bus ( ahb ) protocol and follower open - core protocol ( ocp ) . bridge ahb - - ocp be need to translate transaction one form other . common weakness can exist scenario be conversion protocol be implement incorrectly , untrusted agent may gain unauthorized access asset .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " dos : resource consumption ( other )",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "152",
            "value": {
                "id": "152",
                "name": "Improper Neutralization of Macro Symbols",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as macro symbols when they are sent to a downstream component.",
                "extended_description": "",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1322",
            "value": {
                "id": "1322",
                "name": "Use of Blocking Code in Single-threaded, Non-blocking Context",
                "description": "The product uses a non-blocking model that relies on a single threaded process for features such as scalability, but it contains code that can block when it is invoked.",
                "extended_description": " when attacker can directly invoke block code , or blocking code can be affect environmental condition can be influence attacker , then can lead denial service cause unexpected hang or freeze code . example block code might be expensive computation or calling \n\t\t\t\t block library call , such perform exclusive file operation or require successful network operation . limitation multi - thread model , single - thread \n\t\t\t\t model be use to overcome resource constraint be cause use \n\t\t\t\t many thread . such model , code should generally be \n\t\t\t\t non - blocking . block code be call , then event loop will \n\t\t\t\t effectively be stop , can be undesirable or dangerous .   such \n\t\t\t\t model be use python asyncio , vert.x , and node.js , or other \n\t\t\t\t custom event loop code .",
                "child_of": [
                    "834"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )"
                ],
                "con_note": " unexpected call block code can trigger infinite loop , or large loop cause software to pause and wait indefinitely .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "350",
            "value": {
                "id": "350",
                "name": "Reliance on Reverse DNS Resolution for a Security-Critical Action",
                "description": "The product performs reverse DNS resolution on an IP address to obtain the hostname and make a security decision, but it does not properly ensure that the IP address is truly associated with the hostname.",
                "extended_description": " dns name can be easily spoof or misreporte , and may be difficult product to detect trusted dns server have be compromise , dns name do not constitute valid authentication mechanism . when product perform reverse dns resolution ip address , attacker control dns server ip address , then attacker can cause server to return arbitrary hostname . result , attacker may be able to bypass authentication , cause wrong hostname to be record log file to hide activity , or perform other attack . attacker can spoof dns name ( 1 ) compromise dns server and modify record ( sometimes call dns cache poisoning ) , or ( 2 ) have legitimate control dns server associate ip address .",
                "child_of": [
                    "290",
                    "807"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " bypass protection mechanism"
                ],
                "con_note": " malicious user can fake authentication information provide false dns information .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "464",
            "value": {
                "id": "464",
                "name": "Addition of Data Structure Sentinel",
                "description": "The accidental addition of a data-structure sentinel can cause serious programming logic problems.",
                "extended_description": " data - structure sentinel be often use to mark structure datum . common example be null character end string or special sentinel to mark end link list . be dangerous to allow type control datum to be easily accessible . therefore , be important to protect addition or modification sentinel .",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data"
                ],
                "con_note": " generally error will cause data structure to not work properly truncate datum .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "533",
            "value": {
                "id": "533",
                "name": "DEPRECATED: Information Exposure Through Server Log Files",
                "description": "This entry has been deprecated because its abstraction was too low-level. SeeCWE-532.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "114",
            "value": {
                "id": "114",
                "name": "Process Control",
                "description": "Executing commands or loading libraries from an untrusted source or in an untrusted environment can cause an application to execute malicious commands (and payloads) on behalf of an attacker.",
                "extended_description": " process control vulnerability take two form : \n\t  attacker can change command program execute : attacker explicitly control command be . attacker can change environment command execute : attacker implicitly control command mean . process control vulnerability first type occur when either datum enter application untrusted source and datum be use part string represent command be execute application . execute command , application give attacker privilege or capability attacker would not otherwise have .",
                "child_of": [
                    "73"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1108",
            "value": {
                "id": "1108",
                "name": "Excessive Reliance on Global Variables",
                "description": "The code is structured in a way that relies too much on using or setting global variables throughout various points in the code, instead of preserving the associated information in a narrower, more local context.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1076"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1392",
            "value": {
                "id": "1392",
                "name": "Use of Default Credentials",
                "description": "The product uses default credentials (such as passwords or cryptographic keys) for potentially critical functionality.",
                "extended_description": " be common practice product to be design to use \n\t default key , password , or other mechanism \n\t authentication .   rationale be to simplify \n\t manufacturing process or system administrator 's task \n\t installation and deployment enterprise . however , \n\t admin do not change default , be easy attacker \n\t to bypass authentication quickly multiple \n\t organization . \n      ",
                "child_of": [
                    "1391"
                ],
                "con_scope": [
                    " authentication"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "349",
            "value": {
                "id": "349",
                "name": "Acceptance of Extraneous Untrusted Data With Trusted Data",
                "description": "The product, when processing trusted data, accepts any untrusted data that is also included with the trusted data, treating the untrusted data as if it were trusted.",
                "extended_description": "",
                "child_of": [
                    "345"
                ],
                "con_scope": [
                    " access control",
                    " integrity"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " modify application data"
                ],
                "con_note": " attacker could package untrusted datum trust datum to bypass protection mechanism to gain access and possibly modify sensitive datum .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "385",
            "value": {
                "id": "385",
                "name": "Covert Timing Channel",
                "description": "Covert timing channels convey information by modulating some aspect of system behavior over time, so that the program receiving the information can observe system behavior and infer protected information.",
                "extended_description": " instance , know when datum be transmit party can provide malicious user privileged information . also , externally monitor timing operation can potentially reveal sensitive datum . example , cryptographic operation can expose internal state time take to perform operation varie , base state . covert channel be frequently classify storage or timing channel . example covert timing channel be system 's page rate , time certain transaction require to execute , and time take to gain access share bus .",
                "child_of": [
                    "514"
                ],
                "con_scope": [
                    " confidentiality",
                    " other"
                ],
                "con_impacts": [
                    " read application data",
                    " other"
                ],
                "con_note": " information exposure .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "570",
            "value": {
                "id": "570",
                "name": "Expression is Always False",
                "description": "The product contains an expression that will always evaluate to false.",
                "extended_description": "",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "138",
            "value": {
                "id": "138",
                "name": "Improper Neutralization of Special Elements",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
                "extended_description": " most language and protocol have own special element such character and reserved word . special element can carry control implication . product do not prevent external control or influence inclusion such special element , control flow program may be alter be intend . example , both unix and windows interpret symbol < ( \" less \" ) mean \" read input file \" .",
                "child_of": [
                    "707"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " other"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " alter execution logic",
                    " dos : crash , exit , or restart"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "799",
            "value": {
                "id": "799",
                "name": "Improper Control of Interaction Frequency",
                "description": "The product does not properly limit the number or frequency of interactions that it has with an actor, such as the number of incoming requests.",
                "extended_description": " can allow actor to perform action more frequently expect . actor could be human or automate process such virus or bot . could be use to cause denial service , compromise program logic ( such limit human single vote ) , or other consequence . example , authentication routine might not limit number time attacker can guess password . or , web site might conduct poll but only expect human to vote maximum once day .",
                "child_of": [
                    "691"
                ],
                "con_scope": [
                    " availability",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " dos : resource consumption ( other )",
                    " bypass protection mechanism",
                    " other"
                ],
                "con_note": "",
                "alt_term": [
                    " insufficient anti - automation",
                    " brute force"
                ],
                "alt_desc": [
                    " term \" insufficient anti - automation \" focus primarly non - human actor such virus or bot , but scope cwe entry be broad .",
                    " vulnerability can be target use brute force attack be often symptomatic weakness ."
                ]
            }
        },
        {
            "name": "58",
            "value": {
                "id": "58",
                "name": "Path Equivalence: Windows 8.3 Filename",
                "description": "The product contains a protection mechanism that restricts access to a long filename on a Windows operating system, but it does not properly restrict access to the equivalent short \"8.3\" filename.",
                "extended_description": " later windows operating system , file can have \" long name \" and short name be compatible old windows file system , to 8 character filename and 3 character extension . \" 8.3 \" filename , therefore , act alternate name file long name , be useful pathname equivalence manipulation .",
                "child_of": [
                    "41"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "462",
            "value": {
                "id": "462",
                "name": "Duplicate Key in Associative List (Alist)",
                "description": "Duplicate keys in associative lists can lead to non-unique keys being mistaken for an error.",
                "extended_description": " duplicate key entry -- alist be design properly -- could be use constant time replace function . however , duplicate key entry could be insert mistake . ambiguity , duplicate key entry association list be not recommend and should not be allow .",
                "child_of": [
                    "694"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1113",
            "value": {
                "id": "1113",
                "name": "Inappropriate Comment Style",
                "description": "The source code uses comment styles or formats that are inconsistent or do not follow expected standards for the product.",
                "extended_description": " issue make more difficult to maintain product insufficient legibility , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1078"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "492",
            "value": {
                "id": "492",
                "name": "Use of Inner Class Containing Sensitive Data",
                "description": "Inner classes are translated into classes that are accessible at package scope and may expose code that the programmer intended to keep private to attackers.",
                "extended_description": " inner class quietly introduce several security concern way be translate java bytecode . java source code , appear inner class can be declare to be accessible only enclose class , but java bytecode have concept inner class , so compiler must transform inner class declaration peer class package level access original outer class . more insidiously , inner class can access private field enclose class , once inner class become peer class bytecode , compiler convert private field access inner class protect field .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " \" inner classes \" datum confidentiality aspect can often be overcome .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "216",
            "value": {
                "id": "216",
                "name": "DEPRECATED: Containment Errors (Container Errors)",
                "description": "This entry has been deprecated, as it was not effective as a weakness and was structured more like a category. In addition, the name is inappropriate, since the \"container\" term is widely understood by developers in different ways than originally intended by PLOVER, the original source for this entry.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "231",
            "value": {
                "id": "231",
                "name": "Improper Handling of Extra Values",
                "description": "The product does not handle or incorrectly handles when more values are provided than expected.",
                "extended_description": "",
                "child_of": [
                    "229"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "547",
            "value": {
                "id": "547",
                "name": "Use of Hard-coded, Security-relevant Constants",
                "description": "The product uses hard-coded constants instead of symbolic names for security-critical values, which increases the likelihood of mistakes during code maintenance or security policy change.",
                "extended_description": " developer do not find occurrence hard - code constant , incorrect policy decision may be make one constant be not change . make change value will require code change may be difficult or impossible system be release field . addition , hard - code value may become available attacker code be ever disclose .",
                "child_of": [
                    "1078"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context",
                    " quality degradation"
                ],
                "con_note": " existence hardcode constant could cause unexpected behavior and introduction weakness code maintenance or when make change code occurrence be not modify . use hardcode constant be indication poor quality .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "487",
            "value": {
                "id": "487",
                "name": "Reliance on Package-level Scope",
                "description": "Java packages are not inherently closed; therefore, relying on them for code security is not a good practice.",
                "extended_description": " purpose package scope be to prevent accidental access other part program . be ease - - software - development feature but not security feature .",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": " datum java class can be modify outside java framework package be distribute .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "564",
            "value": {
                "id": "564",
                "name": "SQL Injection: Hibernate",
                "description": "Using Hibernate to execute a dynamic SQL statement built with user-controlled input can allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.",
                "extended_description": "",
                "child_of": [
                    "89"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1048",
            "value": {
                "id": "1048",
                "name": "Invokable Control Element with Large Number of Outward Calls",
                "description": "The code contains callable control elements that contain an excessively large number of references to other application objects external to the context of the callable, i.e. a Fan-Out value that is excessively large.",
                "extended_description": " interpretation \" excessively large fan - out value \" may vary product or developer , cisq recommend default 5 reference object . issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "425",
            "value": {
                "id": "425",
                "name": "Direct Request ('Forced Browsing')",
                "description": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
                "extended_description": " web application susceptible direct request attack often make false assumption such resource can only be reach give navigation path and so only apply authorization certain point path .",
                "child_of": [
                    "862",
                    "288",
                    "424"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [
                    " force browse"
                ],
                "alt_desc": [
                    " \" force browse \" term could be misinterpret to include weakness such csrf or xss , use be discourage ."
                ]
            }
        },
        {
            "name": "468",
            "value": {
                "id": "468",
                "name": "Incorrect Pointer Scaling",
                "description": "In C and C++, one may often accidentally refer to the wrong memory due to the semantics of when math operations are implicitly scaled.",
                "extended_description": "",
                "child_of": [
                    "682"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read memory",
                    " modify memory"
                ],
                "con_note": " incorrect pointer scaling will often result buffer overflow condition . confidentiality can be compromise weakness be context buffer - read or under - read .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1297",
            "value": {
                "id": "1297",
                "name": "Unprotected Confidential Information on Device is Accessible by OSAT Vendors",
                "description": "The product does not adequately protect confidential information on the device from being accessed by Outsourced Semiconductor Assembly and Test (OSAT) vendors.",
                "extended_description": " contrast to complete vertical integration architecting , designing , manufacturing , assembling , and testing chip all single organization , organization can choose to simply architect and design chip outsource rest process osat entity ( e.g. , external foundry and test house ) . latter example , device enter osat facility much more vulnerable pre - production stage where many debug and test mode be accessible . therefore , chipmaker must place certain level trust osat . to counter , chipmaker often require osat partner to enter restrictive non - disclosure agreement ( nda ) . nonetheless , osat vendor likely have many customer , increase risk accidental sharing information . may also be security vulnerability information technology ( it ) system osat facility . alternatively , malicious insider osat facility may carry out insider attack . consider factor , behoove chipmaker to minimize confidential information device may be accessible osat vendor . logic error design or synthesis could misconfigure interconnection debug component , could provide improper authorization sensitive information .",
                "child_of": [
                    "285"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control",
                    " authentication",
                    " authorization",
                    " availability",
                    " accountability",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " execute unauthorized code or command",
                    " modify memory",
                    " modify files or directory"
                ],
                "con_note": " impact depend confidential information and be inadvertently grant access . example , confidential information be key can unlock all part generation , impact could be severe .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1267",
            "value": {
                "id": "1267",
                "name": "Policy Uses Obsolete Encoding",
                "description": "The product uses an obsolete encoding mechanism to implement access controls.",
                "extended_description": " system - - - chip ( soc ) , various circuit and hardware engine generate transaction purpose accessing ( read / write ) asset or perform various action ( e.g. , reset , fetch , compute , etc . ) . various type message information , typical transaction be comprise source identity ( identify originator transaction ) and destination identity ( route transaction respective entity ) . sometimes transaction be qualified security token . security token help destination agent decide set allow action ( e.g. , access asset read and write ) . policy encoder be use to map bus transaction security tokens turn be use access - control / protection mechanism . common weakness involve use encoding be no long trust , i.e. , obsolete encoding .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " modify files or directory",
                    " read files or directory",
                    " dos : resource consumption ( other )",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "795",
            "value": {
                "id": "795",
                "name": "Only Filtering Special Elements at a Specified Location",
                "description": "The product receives data from an upstream component, but only accounts for special elements at a specified location, thereby missing remaining special elements that may exist before sending it to a downstream component.",
                "extended_description": " filter might only account instance special element when occur : relative marker ( e.g. \" beginning / end string ; second argument \" ) , orat absolute position ( e.g. \" byte number 10\").this may leave special element datum do not match filter position , but still may be dangerous .",
                "child_of": [
                    "791"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1301",
            "value": {
                "id": "1301",
                "name": "Insufficient or Incomplete Data Removal within Hardware Component",
                "description": "The product's data removal process does not completely delete all data and potentially sensitive information within hardware components.",
                "extended_description": " physical property hardware device , such remanence magnetic medium , residual charge rom / ram , or screen burn - in may still retain sensitive datum data removal process have take place and power be remove . recover datum erasure or overwriting be possible phenomenon call data remanence . example , same value be write repeatedly memory location , correspond memory cell can become physically alter degree such even original datum be erase datum can still be recover physical characterization memory cell .",
                "child_of": [
                    "226"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read memory",
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "805",
            "value": {
                "id": "805",
                "name": "Buffer Access with Incorrect Length Value",
                "description": "The product uses a sequential operation to read or write a buffer, but it uses an incorrect length value that causes it to access memory that is outside of the bounds of the buffer.",
                "extended_description": " when length value exceed size destination , buffer overflow could occur .",
                "child_of": [
                    "119"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " availability"
                ],
                "con_impacts": [
                    " read memory",
                    " modify memory",
                    " execute unauthorized code or command",
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )"
                ],
                "con_note": " buffer overflow generally lead crash . other attack lead lack availability be possible , include put program infinite loop .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "493",
            "value": {
                "id": "493",
                "name": "Critical Public Variable Without Final Modifier",
                "description": "The product has a critical public variable that is not final, which allows the variable to be modified to contain unexpected values.",
                "extended_description": " field be non - final and public , can be change once value be set function have access class contain field . could lead vulnerability other part program make assumption content field .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " modify application data",
                    " read application data"
                ],
                "con_note": " object could potentially allow object to be read .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "384",
            "value": {
                "id": "384",
                "name": "Session Fixation",
                "description": "Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.",
                "extended_description": " such scenario be commonly observe when : web application authenticate user first invalidate exist session , thereby continue to use session already associate user . attacker be able to force know session identifier user , user authenticate , attacker have access authenticated session . application or container use predictable session identifier . generic exploit session fixation vulnerability , attacker create new session web application and record associate session identifier . attacker then cause victim to associate , and possibly authenticate , server use session identifier , give attacker access user 's account active session .",
                "child_of": [
                    "610"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "656",
            "value": {
                "id": "656",
                "name": "Reliance on Security Through Obscurity",
                "description": "The product uses a protection mechanism whose strength depends heavily on its obscurity, such that knowledge of its algorithms or key data is sufficient to defeat the mechanism.",
                "extended_description": " reliance \" security obscurity \" can produce resultant weakness attacker be able to reverse engineer inner working mechanism . note obscurity can be one small part defense depth , can create more work attacker ; however , be significant risk use primary mean protection .",
                "child_of": [
                    "657",
                    "693"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": " security mechanism can be bypass easily .",
                "alt_term": [
                    " never assume secret be safe"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "1223",
            "value": {
                "id": "1223",
                "name": "Race Condition for Write-Once Attributes",
                "description": "A write-once register in hardware design is programmable by an untrusted software component earlier than the trusted software component, resulting in a race condition issue.",
                "extended_description": " integrated circuit and hardware ip software programmable control and setting be commonly store register circuit . register content have to be initialize hardware reset define default value be hard code hardware description language ( hdl ) code hardware unit . common security protection method use to protect register setting modification software be to make write - once . mean hardware implementation only allow write such register once , and become read - only having be write once software . be useful to allow initial boot software configure system setting to secure value block runtime software modify such hardware setting . implementation issue hardware design such control can expose such register race condition security flaw . example , consider hardware design have two different software / firmware module execute parallel . one module be trust ( module a ) and be untrusted ( module b ) . design could be possible module b to send write cycle write - once register module a. field be write - once program value module a will be ignore and pre - empted value program module b will be use hardware .",
                "child_of": [
                    "362"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": " system configuration can not be program secure way .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "248",
            "value": {
                "id": "248",
                "name": "Uncaught Exception",
                "description": "An exception is thrown from a function, but it is not caught.",
                "extended_description": " when exception be not catch , may cause program to crash or expose sensitive information .",
                "child_of": [
                    "705",
                    "755"
                ],
                "con_scope": [
                    " availability",
                    " confidentiality"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " read application data"
                ],
                "con_note": " uncaught exception could cause system to be place state could lead crash , exposure sensitive information or other unintended behavior .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1204",
            "value": {
                "id": "1204",
                "name": "Generation of Weak Initialization Vector (IV)",
                "description": "The product uses a cryptographic primitive that uses an Initialization Vector (IV), but the product does not generate IVs that are sufficiently unpredictable or unique according to the expected cryptographic requirements for that primitive.",
                "extended_description": " design , cryptographic primitive \n\t\t\t   ( such block cipher ) require iv \n\t\t\t   must have certain property \n\t\t\t   uniqueness and/or unpredictability \n\t\t\t   iv . primitive may vary how important \n\t\t\t   property be . property \n\t\t\t   be not maintain , e.g. bug \n\t\t\t   code , then cryptography may be weaken \n\t\t\t   or break attack iv . \n\t\t\t",
                "child_of": [
                    "330"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " iv be not properly initialize , datum be encrypt can be compromise and information datum can be leak . see [ ref-1179 ] .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1278",
            "value": {
                "id": "1278",
                "name": "Missing Protection Against Hardware Reverse Engineering Using Integrated Circuit (IC) Imaging Techniques",
                "description": "Information stored in hardware may be recovered by an attacker with the capability to capture and analyze images of the integrated circuit using techniques such as scanning electron microscopy.",
                "extended_description": " physical structure device , view high enough magnification , can reveal information store inside . typical step ic reverse engineering involve remove chip packaging ( decapsulation ) then use various image technique range high resolution x - ray microscopy to invasive technique involve remove ic layer and image layer use scan electron microscope . goal such activity be to recover secret key , unique device identifier , and proprietary code and circuit design embed hardware attacker have be unsuccessful access other mean . secret may be store non - volatile memory or circuit netlist . memory technology such mask rom allow easy to extraction secret one - time programmable ( otp ) memory .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": " common goal malicious actor reverse engineer ic be to produce and sell counterfeit version ic .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1300",
            "value": {
                "id": "1300",
                "name": "Improper Protection of Physical Side Channels",
                "description": "The device does not contain sufficient protection mechanisms to prevent physical side channels from exposing sensitive information due to patterns in physically observable phenomena such as variations in power consumption, electromagnetic emissions (EME), or acoustic emissions.",
                "extended_description": " adversary could monitor and measure physical \n\t   phenomenon to detect pattern and make inference , even \n\t   be not possible to extract information digital \n\t   domain . physical side channel have be well - study \n\t   decade context break implementation \n\t   cryptographic algorithm or other attack security \n\t   feature . side channel may be easily observe \n\t   adversary physical access device , or use \n\t   tool be close proximity .   adversary can \n\t   monitor hardware operation and correlate datum processing \n\t   power , eme , and acoustic measurement , adversary \n\t   might be able to recover secret key and datum .",
                "child_of": [
                    "203"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read memory",
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "458",
            "value": {
                "id": "458",
                "name": "DEPRECATED: Incorrect Initialization",
                "description": "This weakness has been deprecated because its name and description did not match. The description duplicatedCWE-454, while the name suggested a more abstract initialization problem. Please refer toCWE-665for the more abstract problem.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "37",
            "value": {
                "id": "37",
                "name": "Path Traversal: '/absolute/pathname/here'",
                "description": "The product accepts input in the form of a slash absolute path ('/absolute/pathname/here') without appropriate validation, which can allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "36",
                    "160"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "522",
            "value": {
                "id": "522",
                "name": "Insufficiently Protected Credentials",
                "description": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.",
                "extended_description": "",
                "child_of": [
                    "1390",
                    "668"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " attacker could gain access user account and access sensitive datum use user account .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1328",
            "value": {
                "id": "1328",
                "name": "Security Version Number Mutable to Older Versions",
                "description": "Security-version number in hardware is mutable, resulting in the ability to downgrade (roll-back) the boot firmware to vulnerable code versions.",
                "extended_description": " system - - chip ( soc ) implement secure boot or verified boot . might support security version number , prevent downgrade current firmware vulnerable version . once downgrade previous version , adversary can launch exploit soc and thus compromise security soc. downgrade attack be also refer roll - back attack . security version number must be store securely and persistently power - on reset . common weakness be security version number be modifiable adversary , allow roll - back or downgrade attack or , certain circumstance , prevent upgrade ( i.e. denial - - service upgrade ) . case , soc be vulnerable state .",
                "child_of": [
                    "285"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " authentication",
                    " authorization"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": " impact include roll - back or downgrade vulnerable version firmware or dos ( prevent upgrade ) .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "543",
            "value": {
                "id": "543",
                "name": "Use of Singleton Pattern Without Synchronization in a Multithreaded Context",
                "description": "The product uses the singleton pattern when creating a resource within a multithreaded environment.",
                "extended_description": " use singleton pattern may not be thread - safe .",
                "child_of": [
                    "820"
                ],
                "con_scope": [
                    " other",
                    " integrity"
                ],
                "con_impacts": [
                    " other",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "607",
            "value": {
                "id": "607",
                "name": "Public Static Final Field References Mutable Object",
                "description": "A public or protected static final field references a mutable object, which allows the object to be changed by malicious code, or accidentally from another package.",
                "extended_description": "",
                "child_of": [
                    "471"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "574",
            "value": {
                "id": "574",
                "name": "EJB Bad Practices: Use of Synchronization Primitives",
                "description": "The product violates the Enterprise JavaBeans (EJB) specification by using thread synchronization primitives.",
                "extended_description": " enterprise javabeans specification require bean provider follow set programming guideline design to ensure bean will be portable and behave consistently ejb container . case , product violate following ejb guideline : \" enterprise bean must not use thread synchronization primitive to synchronize execution multiple instance . \" specification justify requirement following way : \" rule be require to ensure consistent runtime semantic ejb container may use single jvm to execute enterprise bean 's instance , other may distribute instance multiple jvm . \"",
                "child_of": [
                    "695",
                    "821"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "825",
            "value": {
                "id": "825",
                "name": "Expired Pointer Dereference",
                "description": "The product dereferences a pointer that contains a location for memory that was previously valid, but is no longer valid.",
                "extended_description": " when product release memory , but maintain pointer memory , then memory might be re - allocate later time . original pointer be access to read or write datum , then could cause product to read or modify datum be use different function or process . depend how newly - allocate memory be use , could lead denial service , information exposure , or code execution .",
                "child_of": [
                    "119",
                    "672"
                ],
                "con_scope": [
                    " confidentiality",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " read memory",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command"
                ],
                "con_note": " expire pointer be use function call , or point unexpected datum write operation , then code execution may be possible .",
                "alt_term": [
                    " dangle pointer"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "920",
            "value": {
                "id": "920",
                "name": "Improper Restriction of Power Consumption",
                "description": "The product operates in an environment in which power is a limited resource that cannot be automatically replenished, but the product does not properly restrict the amount of power that its operation consumes.",
                "extended_description": " environment such embed or mobile device , power can be limited resource such battery , can not be automatically replenish product , and device might not always be directly attach reliable power source . product use too much power too quickly , then could cause device ( and subsequently , product ) to stop function power be restore , or increase financial burden device owner increase power cost . normal operation application will consume power . however , case , attacker could cause application to consume more power intend , use component such : displaycpudisk i / ogpssoundmicrophoneusb interface",
                "child_of": [
                    "400"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( other )",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " power source could be drain , cause application - and entire device - to cease functioning .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "764",
            "value": {
                "id": "764",
                "name": "Multiple Locks of a Critical Resource",
                "description": "The product locks a critical resource more times than intended, leading to an unexpected state in the system.",
                "extended_description": " when product be operate concurrent environment and repeatedly lock critical resource , consequence will vary base type lock , lock 's implementation , and resource be protect . situation such semaphore , resource be pool and extra locking call will reduce size total available pool , possibly lead degraded performance or denial service . can be trigger attacker , will be similar unrestricted lock ( cwe-412 ) . context binary lock , be likely duplicate lock attempt will never succeed lock be already hold and progress may not be possible .",
                "child_of": [
                    "667",
                    "675"
                ],
                "con_scope": [
                    " availability",
                    " integrity"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )",
                    " dos : crash , exit , or restart",
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "174",
            "value": {
                "id": "174",
                "name": "Double Decoding of the Same Data",
                "description": "The product decodes the same input twice, which can limit the effectiveness of any protection mechanism that occurs in between the decoding operations.",
                "extended_description": "",
                "child_of": [
                    "172",
                    "675"
                ],
                "con_scope": [
                    " access control",
                    " confidentiality",
                    " availability",
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " execute unauthorized code or command",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1334",
            "value": {
                "id": "1334",
                "name": "Unauthorized Error Injection Can Degrade Hardware Redundancy",
                "description": "An unauthorized agent can inject errors into a redundant block to deprive the system of redundancy or put the system in a degraded operating mode.",
                "extended_description": " to ensure performance and functional reliability certain component , hardware designer can implement hardware block redundancy case other fail . redundant block can be prevent perform intend design allow unauthorized agent to inject error . way , path inject error may become unavailable to serve redundant channel . may put system degraded mode operation could be exploit subsequent attack .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " dos : instability",
                    " quality degradation",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : resource consumption ( other )",
                    " reduce performance",
                    " reduce reliability",
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "765",
            "value": {
                "id": "765",
                "name": "Multiple Unlocks of a Critical Resource",
                "description": "The product unlocks a critical resource more times than intended, leading to an unexpected state in the system.",
                "extended_description": " when product be operate concurrent environment and repeatedly unlock critical resource , consequence will vary base type lock , lock 's implementation , and resource be protect . situation such semaphore , resource be pool and extra call unlock will increase count number available resource , likely result crash or unpredictable behavior when system near capacity .",
                "child_of": [
                    "667",
                    "675"
                ],
                "con_scope": [
                    " availability",
                    " integrity"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " modify memory",
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "777",
            "value": {
                "id": "777",
                "name": "Regular Expression without Anchors",
                "description": "The product uses a regular expression to perform neutralization, but the regular expression is not anchored and may allow malicious or malformed data to slip through.",
                "extended_description": " when perform task such validate set allow input ( allowlist ) , datum be examine and possibly modify to ensure be well - form and adhere list safe value . regular expression be not anchor , malicious or malformed datum may be include or string match regular expression . type malicious datum be allow will depend context application and anchor be omit regular expression .",
                "child_of": [
                    "625"
                ],
                "con_scope": [
                    " availability",
                    " confidentiality",
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": " unanchored regular expression context allowlist will possibly result protection mechanism failure , allow malicious or malformed datum to enter trust region program . specific consequence will depend functionality allowlist be protect .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1390",
            "value": {
                "id": "1390",
                "name": "Weak Authentication",
                "description": "The product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.",
                "extended_description": " attacker may be able to bypass weak authentication fast and/or less effort expect .",
                "child_of": [
                    "287"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " gain privileges or assume identity",
                    " execute unauthorized code or command"
                ],
                "con_note": " weakness can lead exposure resource or functionality unintended actor , possibly provide attacker sensitive information or even execute arbitrary code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "594",
            "value": {
                "id": "594",
                "name": "J2EE Framework: Saving Unserializable Objects to Disk",
                "description": "When the J2EE container attempts to write unserializable objects to disk there is no guarantee that the process will complete successfully.",
                "extended_description": " heavy load condition , most j2ee application framework flush object disk to manage memory requirement incoming request . example , session scope object , and even application scope object , be write disk when require . application framework do real work write object to disk , do not enforce object be serializable , thus leave web application vulnerable crash induce serialization failure . attacker may be able to mount denial service attack send enough request server to force web application to save object to disk .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " modify application data",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " non - serializability object can lead system crash .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "646",
            "value": {
                "id": "646",
                "name": "Reliance on File Name or Extension of Externally-Supplied File",
                "description": "The product allows a file to be uploaded, but it relies on the file name or extension of the file to determine the appropriate behaviors. This could be used by attackers to cause the file to be misclassified and processed in a dangerous fashion.",
                "extended_description": " application might use file name or extension user - supply file to determine proper course action , such select correct process to which control should be pass , decide datum should be make available , or what resource should be allocate . attacker can cause code to misclassify supply file , then wrong action could occur . example , attacker could supply file end \" .php.gif \" extension appear to be gif image , but would be process php code . extreme case , code execution be possible , but attacker could also cause exhaustion resource , denial service , exposure debug or system datum ( include application source code ) , or be bind particular server side process . weakness may be due vulnerability technology use web and application server , misconfiguration , or resultant flaw application .",
                "child_of": [
                    "345"
                ],
                "con_scope": [
                    " confidentiality",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " dos : crash , exit , or restart",
                    " gain privileges or assume identity"
                ],
                "con_note": " attacker may be able to gain privilege .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "649",
            "value": {
                "id": "649",
                "name": "Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking",
                "description": "The product uses obfuscation or encryption of inputs that should not be mutable by an external actor, but the product does not use integrity checks to detect if those inputs have been modified.",
                "extended_description": " when application rely obfuscation or incorrectly apply / weak encryption to protect client - controllable token or parameter , may have effect user state , system state , or decision make server . protect token / parameter integrity , application be vulnerable attack where adversary traverse space possible value said token / parameter order to attempt to gain advantage . goal attacker be to find admissible value will somehow elevate privilege system , disclose information or change behavior system way beneficial attacker . application do not protect critical token / parameter integrity , will not be able to determine value have be tamper . measure be use to protect datum confidentiality should not be rely to provide integrity service .",
                "child_of": [
                    "345"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": " input could be modify detection , cause product to have unexpected system state or make incorrect security decision .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "80",
            "value": {
                "id": "80",
                "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
                "extended_description": " may allow such character to be treat control character , be execute client - side context user 's session . can be classify injection problem , more pertinent issue be improper conversion such special character respective context - appropriate entity display user .",
                "child_of": [
                    "79"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " read application data",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "642",
            "value": {
                "id": "642",
                "name": "External Control of Critical State Data",
                "description": "The product stores security-critical state information about its users, or the product itself, in a location that is accessible to unauthorized actors.",
                "extended_description": " attacker can modify state information detection , then could be use to perform unauthorized action or access unexpected resource , application programmer do not expect state can be change . state information can be store various location such cookie , hide web form field , input parameter or argument , environment variable , database record , setting file , etc . location have potential to be modify attacker . when state information be use to control security or determine resource usage , then may create vulnerability . example , application may perform authentication , then save state \" authenticated = true \" cookie . attacker may simply create cookie order to bypass authentication .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " access control",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " read application data",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " modify state variable , attacker could violate application 's expectation content state , lead denial service unexpected error condition .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "59",
            "value": {
                "id": "59",
                "name": "Improper Link Resolution Before File Access ('Link Following')",
                "description": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.",
                "extended_description": "",
                "child_of": [
                    "706"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory",
                    " bypass protection mechanism",
                    " execute unauthorized code or command"
                ],
                "con_note": " window simple shortcut , sometimes refer soft link , can be exploit remotely \" .lnk \" file can be upload normal file . can enable remote execution .",
                "alt_term": [
                    " insecure temporary file",
                    " zip slip"
                ],
                "alt_desc": [
                    " people use phrase \" insecure temporary file \" when refer link follow weakness , but other weakness can produce insecure temporary file symlink involvement at all .",
                    " \" zip slip \" be attack use file archive ( e.g. , zip , tar , rar , etc . ) contain filename path traversal sequence cause file to be write outside directory archive be expect to be extract [ ref-1282 ] . be most commonly use relative path traversal ( cwe-23 ) and link follow ( cwe-59 ) ."
                ]
            }
        },
        {
            "name": "710",
            "value": {
                "id": "710",
                "name": "Improper Adherence to Coding Standards",
                "description": "The product does not follow certain coding rules for development, which can lead to resultant weaknesses or increase the severity of the associated vulnerabilities.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "295",
            "value": {
                "id": "295",
                "name": "Improper Certificate Validation",
                "description": "The product does not validate, or incorrectly validates, a certificate.",
                "extended_description": " when certificate be invalid or malicious , might allow attacker to spoof trusted entity interfere communication path host and client . product might connect malicious host believe be trust host , or product might be deceive accept spoof datum appear to originate trust host .",
                "child_of": [
                    "287"
                ],
                "con_scope": [
                    " integrity",
                    " authentication"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "313",
            "value": {
                "id": "313",
                "name": "Cleartext Storage in a File or on Disk",
                "description": "The product stores sensitive information in cleartext in a file, or on disk.",
                "extended_description": " sensitive information could be read attacker access file , or physical or administrator access raw disk . even information be encode way be not human - readable , certain technique could determine which encoding be be use , then decode information .",
                "child_of": [
                    "312"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "109",
            "value": {
                "id": "109",
                "name": "Struts: Validator Turned Off",
                "description": "Automatic filtering via a Struts bean has been turned off, which disables the Struts Validator and custom validation logic. This exposes the application to other weaknesses related to insufficient input validation.",
                "extended_description": "",
                "child_of": [
                    "1173"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "153",
            "value": {
                "id": "153",
                "name": "Improper Neutralization of Substitution Characters",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as substitution characters when they are sent to a downstream component.",
                "extended_description": "",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "35",
            "value": {
                "id": "35",
                "name": "Path Traversal: '.../...//'",
                "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '.../...//' (doubled triple dot slash) sequences that can resolve to a location that is outside of that directory.",
                "extended_description": " allow attacker to traverse file system to access file or directory be restricted directory . ' ... / ... // ' manipulation be useful bypass path traversal protection scheme . \" .. / \" be filter sequential fashion , do regular expression engine , then \" ... / ... // \" can collapse \" .. / \" unsafe value ( cwe-182 ) . remove first \" .. / \" yield \" .... // \" ; second removal yield \" .. / \" . depend algorithm , product could be susceptible cwe-34 but not cwe-35 , or vice versa .",
                "child_of": [
                    "23"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1230",
            "value": {
                "id": "1230",
                "name": "Exposure of Sensitive Information Through Metadata",
                "description": "The product prevents direct access to a resource containing sensitive information, but it does not sufficiently limit access to metadata that is derived from the original, sensitive information.",
                "extended_description": " developer might correctly prevent unauthorized access database or other resource contain sensitive information , but might not consider portion original information might also be record metadata , search index , statistical report , or other resource .   resource be not also restrict , then attacker might be able to extract or original information , or otherwise infer detail .   example , attacker could specify search term be know to be unique particular person , or view metadata such activity or creation date order to identify usage pattern .",
                "child_of": [
                    "285"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "529",
            "value": {
                "id": "529",
                "name": "Exposure of Access Control List Files to an Unauthorized Control Sphere",
                "description": "The product stores access control list files in a directory or other container that is accessible to actors outside of the intended control sphere.",
                "extended_description": " exposure access control list file may give attacker information configuration site or system . information may then be use to bypass intend security policy or identify trust system attack can be launch .",
                "child_of": [
                    "552"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "551",
            "value": {
                "id": "551",
                "name": "Incorrect Behavior Order: Authorization Before Parsing and Canonicalization",
                "description": "If a web server does not fully parse requested URLs before it examines them for authorization, it may be possible for an attacker to bypass authorization protection.",
                "extended_description": " instance , character string /./ and / mean current directory . /somedirectory be protect directory and attacker request /./somedirectory , attacker may be able to gain access resource /./ be not convert / authorization check be perform .",
                "child_of": [
                    "863",
                    "696"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "178",
            "value": {
                "id": "178",
                "name": "Improper Handling of Case Sensitivity",
                "description": "The product does not properly account for differences in case sensitivity when accessing or determining the properties of a resource, leading to inconsistent results.",
                "extended_description": " improperly handle case sensitive datum can lead several possible consequence , include : case - insensitive password reduce size key space , make brute force attack easierbypasse filter or access control use alternate namesmultiple interpretation error use alternate name .",
                "child_of": [
                    "706"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "836",
            "value": {
                "id": "836",
                "name": "Use of Password Hash Instead of Password for Authentication",
                "description": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
                "extended_description": " authentication mechanism rely client to generate hash password , possibly to reduce load server or avoid send password network . however , when client be use to generate hash , attacker can bypass authentication obtain copy hash , e.g. use sql injection to compromise database authentication credential , or exploit information exposure . attacker could then use modify client to replay steal hash have knowledge original password . result , server - side comparison client - side hash do not provide more security use password hash .",
                "child_of": [
                    "1390"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": " attacker could bypass authentication routine know original password .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "922",
            "value": {
                "id": "922",
                "name": "Insecure Storage of Sensitive Information",
                "description": "The product stores sensitive information without properly limiting read or write access by unauthorized actors.",
                "extended_description": " read access be not properly restrict , then attacker can steal sensitive information . write access be not properly restrict , then attacker can modify and possibly delete datum , cause incorrect result and possibly denial service .",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " read files or directory",
                    " modify application data",
                    " modify files or directory"
                ],
                "con_note": " attacker can overwrite sensitive information access unrestricted storage mechanism .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "942",
            "value": {
                "id": "942",
                "name": "Permissive Cross-domain Policy with Untrusted Domains",
                "description": "The product uses a cross-domain policy file that includes domains that should not be trusted.",
                "extended_description": " cross - domain policy file ( \" crossdomain.xml \" flash and \" clientaccesspolicy.xml \" silverlight ) define list domain server be allow to make cross - domain request . when make cross - domain request , flash or silverlight client will first look policy file target server . be find , and domain host application be explicitly allow to make request , request be make . therefore , cross - domain policy file include domain should not be trust , such when use wildcard , then application could be attack untrusted domain . overly permissive policy file allow many same attack see cross - site scripting ( cwe-79 ) . user have execute malicious flash or silverlight application , be vulnerable variety attack . attacker could transfer private information , such cookie may include session information , victim 's machine attacker . attacker could send malicious request web site behalf victim , could be especially dangerous site victim have administrator privilege to manage site . many case , attack can be launch victim even be aware .",
                "child_of": [
                    "863",
                    "923",
                    "183"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " bypass protection mechanism",
                    " read application data",
                    " varie context"
                ],
                "con_note": " attacker may be able to bypass web browser 's same - origin policy . attacker can exploit weakness to manipulate or steal cookie , create request can be mistaken valid user , compromise confidential information , or execute malicious code end user system variety nefarious purpose . other damaging attack include disclosure end user file , installation trojan horse program , redirect user other page or site , run activex control ( microsoft internet explorer ) site user perceive trustworthy , and modify presentation content .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1097",
            "value": {
                "id": "1097",
                "name": "Persistent Storable Data Element without Associated Comparison Control Element",
                "description": "The product uses a storable data element that does not have all of the associated functions or methods that are necessary to support comparison.",
                "extended_description": " example , java , class be make persistent require hashcode ( ) and equal ( ) method to be define . issue can prevent product run reliably , incorrect or unexpected comparison result .   relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "1076"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "6",
            "value": {
                "id": "6",
                "name": "J2EE Misconfiguration: Insufficient Session-ID Length",
                "description": "The J2EE application is configured to use an insufficient session ID length.",
                "extended_description": " attacker can guess or steal session id , then may be able to take over user 's session ( call session hijacking ) . number possible session id increase increase session id length , make more difficult to guess or steal session id .",
                "child_of": [
                    "334"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " attacker can guess authenticated user 's session identifier , can take over user 's session .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "333",
            "value": {
                "id": "333",
                "name": "Improper Handling of Insufficient Entropy in TRNG",
                "description": "True random number generators (TRNG) generally have a limited source of entropy and therefore can fail or block.",
                "extended_description": " rate true random number can be generate be limited . be important use only when be need security .",
                "child_of": [
                    "331",
                    "703"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart"
                ],
                "con_note": " program may crash or block run random number .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "261",
            "value": {
                "id": "261",
                "name": "Weak Encoding for Password",
                "description": "Obscuring a password with a trivial encoding does not protect the password.",
                "extended_description": " password management issue occur when password be store plaintext application 's property or configuration file . programmer can attempt to remedy password management problem obscure password encoding function , such base 64 encoding , but effort do not adequately protect password .",
                "child_of": [
                    "522"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "294",
            "value": {
                "id": "294",
                "name": "Authentication Bypass by Capture-replay",
                "description": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
                "extended_description": " capture - replay attack be common and can be difficult to defeat cryptography . be subset network injection attack rely observe previously - send valid command , then change slightly necessary and resende same command server .",
                "child_of": [
                    "1390"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " message send capture - relay attack allow access resource be not otherwise accessible proper authentication .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "792",
            "value": {
                "id": "792",
                "name": "Incomplete Filtering of One or More Instances of Special Elements",
                "description": "The product receives data from an upstream component, but does not completely filter one or more instances of special elements before sending it to a downstream component.",
                "extended_description": " incomplete filtering nature involve either : only filter single instance special element when more exist , ornot filter instance or element where multiple special element exist .",
                "child_of": [
                    "791"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1298",
            "value": {
                "id": "1298",
                "name": "Hardware Logic Contains Race Conditions",
                "description": "A race condition in the hardware logic results in undermining security guarantees of the system.",
                "extended_description": " race condition logic circuit typically occur when logic gate get input signal have traverse different path originate same source . such input gate can change slightly different time response change source signal . result timing error or glitch ( temporary or permanent ) cause output to change unwanted state settle back desire state . such timing error occur access control logic or finite state machine be implement security sensitive flow , attacker might exploit to circumvent exist protection .",
                "child_of": [
                    "362"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "293",
            "value": {
                "id": "293",
                "name": "Using Referer Field for Authentication",
                "description": "The referer field in HTTP requests can be easily modified and, as such, is not a valid means of message integrity checking.",
                "extended_description": "",
                "child_of": [
                    "290"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " actions , may not be authorize otherwise , can be carry out be validate server refer .",
                "alt_term": [
                    " referrer"
                ],
                "alt_desc": [
                    " proper spelling might be regard \" referrer , \" http rfc and implementation use \" referer , \" be regard correct spelling ."
                ]
            }
        },
        {
            "name": "779",
            "value": {
                "id": "779",
                "name": "Logging of Excessive Data",
                "description": "The product logs too much information, making log files hard to process and possibly hindering recovery efforts or forensic analysis after an attack.",
                "extended_description": " log be good practice general , and very high level log be appropriate debug stage development , too much log in production environment might hinder system administrator 's ability to detect anomalous condition . can provide cover attacker attempt to penetrate system , clutter audit trail forensic analysis , or make more difficult to debug problem production environment .",
                "child_of": [
                    "400"
                ],
                "con_scope": [
                    " availability",
                    " non - repudiation",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( other )",
                    " hide activity",
                    " hide activity"
                ],
                "con_note": " system administrator be unable to effectively process log file , attempt attack may go undetected , possibly lead eventual system compromise .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "581",
            "value": {
                "id": "581",
                "name": "Object Model Violation: Just One of Equals and Hashcode Defined",
                "description": "The product does not maintain equal hashcodes for equal objects.",
                "extended_description": " java object be expect to obey number invariant relate equality . one invariant be equal object must have equal hashcode . other word , a.equals(b ) = = true then a.hashcode ( ) = = b.hashcode ( ) .",
                "child_of": [
                    "573",
                    "697"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": " invariant be not uphold , be likely to cause trouble object class be store collection . object class question be use key hashtable or be insert map or set , be critical equal object have equal hashcode .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1394",
            "value": {
                "id": "1394",
                "name": "Use of Default Cryptographic Key",
                "description": "The product uses a default cryptographic key for potentially critical functionality.",
                "extended_description": " be common practice product to be design to use \n\t default key .   rationale be to simplify manufacturing \n\t process or system administrator 's task installation and \n\t deployment enterprise . however , admin do not \n\t change default , be easy attacker to bypass \n\t authentication quickly multiple organization . \n      ",
                "child_of": [
                    "1392"
                ],
                "con_scope": [
                    " authentication"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "148",
            "value": {
                "id": "148",
                "name": "Improper Neutralization of Input Leaders",
                "description": "The product does not properly handle when a leading character or sequence (\"leader\") is missing or malformed, or if multiple leaders are used when only one should be allowed.",
                "extended_description": "",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "419",
            "value": {
                "id": "419",
                "name": "Unprotected Primary Channel",
                "description": "The product uses a primary channel for administration or restricted functionality, but it does not properly protect the channel.",
                "extended_description": "",
                "child_of": [
                    "923"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "683",
            "value": {
                "id": "683",
                "name": "Function Call With Incorrect Order of Arguments",
                "description": "The product calls a function, procedure, or routine, but the caller specifies the arguments in an incorrect order, leading to resultant weaknesses.",
                "extended_description": " weakness might be catch compiler language , can occur more frequently case call function accept variable number or type argument , such format string c. also can occur language or environment do not enforce strong typing .",
                "child_of": [
                    "628"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "124",
            "value": {
                "id": "124",
                "name": "Buffer Underwrite ('Buffer Underflow')",
                "description": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.",
                "extended_description": " typically occur when pointer or index be decremente position buffer , when pointer arithmetic result position beginning valid memory location , or when negative index be use .",
                "child_of": [
                    "786",
                    "787"
                ],
                "con_scope": [
                    " integrity",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control",
                    " other",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command",
                    " modify memory",
                    " bypass protection mechanism",
                    " other",
                    " bypass protection mechanism",
                    " other"
                ],
                "con_note": " when consequence be arbitrary code execution , can often be use to subvert other security service .",
                "alt_term": [
                    " buffer underrun"
                ],
                "alt_desc": [
                    " prominent vendor and researcher use term \" buffer underrun \" . \" buffer underflow \" be more commonly use , term be also sometimes use to describe buffer under - read ( cwe-127 ) ."
                ]
            }
        },
        {
            "name": "500",
            "value": {
                "id": "500",
                "name": "Public Static Field Not Marked Final",
                "description": "An object contains a public static field that is not marked final, which might allow it to be modified in unexpected ways.",
                "extended_description": " public static variable can be read accessor and change mutator class application .",
                "child_of": [
                    "493"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " modify application data",
                    " read application data"
                ],
                "con_note": " object could potentially allow object to be read .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "286",
            "value": {
                "id": "286",
                "name": "Incorrect User Management",
                "description": "The product does not properly manage a user within its environment.",
                "extended_description": " user can be assign wrong group ( class ) permission result unintended access right sensitive object .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "50",
            "value": {
                "id": "50",
                "name": "Path Equivalence: '//multiple/leading/slash'",
                "description": "The product accepts path input in the form of multiple leading slash ('//multiple/leading/slash') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "41",
                    "161"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "835",
            "value": {
                "id": "835",
                "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
                "description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
                "extended_description": " loop can be influence attacker , weakness could allow attacker to consume excessive resource such cpu or memory .",
                "child_of": [
                    "834"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : amplification"
                ],
                "con_note": " infinite loop will cause unexpected consumption resource , such cpu cycle or memory . software 's operation may slow down , or cause long time to respond .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "478",
            "value": {
                "id": "478",
                "name": "Missing Default Case in Multiple Condition Expression",
                "description": "The code does not have a default case in an expression with multiple conditions, such as a switch statement.",
                "extended_description": " multiple - condition expression ( such switch c ) omit default case but do not consider or handle possible value could occur , then might lead complex logical error and resultant weakness . , further decision be make base poor information , and cascade failure result . cascade failure may result number security issue , and constitute significant failure system .",
                "child_of": [
                    "1023"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " varie context",
                    " alter execution logic"
                ],
                "con_note": " depend logical circumstance involve , consequence may result : e.g. , issue confidentiality , authentication , authorization , availability , integrity , accountability , or non - repudiation .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "644",
            "value": {
                "id": "644",
                "name": "Improper Neutralization of HTTP Headers for Scripting Syntax",
                "description": "The product does not neutralize or incorrectly neutralizes web scripting syntax in HTTP headers that can be used by web browser components that can process raw headers, such as Flash.",
                "extended_description": " attacker may be able to conduct cross - site scripting and other attack user have component enable . product do not neutralize user control datum be place header http response come server , header may contain script will get execute client 's browser context , potentially result cross site scripting vulnerability or possibly http response splitting attack . be important to carefully control datum be be place http response header and http response body to ensure scripting syntax be present , take various encoding account .",
                "child_of": [
                    "116"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " confidentiality"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " read application data"
                ],
                "con_note": " attacker may be able to obtain sensitive information .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "774",
            "value": {
                "id": "774",
                "name": "Allocation of File Descriptors or Handles Without Limits or Throttling",
                "description": "The product allocates file descriptors or handles on behalf of an actor without imposing any restrictions on how many descriptors can be allocated, in violation of the intended security policy for that actor.",
                "extended_description": " can cause product to consume available file descriptor or handle , can prevent other process perform critical file processing operation .",
                "child_of": [
                    "770"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( other )"
                ],
                "con_note": " when allocate resource limit , attacker could prevent other process access same type resource .",
                "alt_term": [
                    " file descriptor exhaustion"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "15",
            "value": {
                "id": "15",
                "name": "External Control of System or Configuration Setting",
                "description": "One or more system settings or configuration elements can be externally controlled by a user.",
                "extended_description": " allow external control system setting can disrupt service or cause application to behave unexpected , and potentially malicious way .",
                "child_of": [
                    "642",
                    "610"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "32",
            "value": {
                "id": "32",
                "name": "Path Traversal: '...' (Triple Dot)",
                "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '...' (triple dot) sequences that can resolve to a location that is outside of that directory.",
                "extended_description": " allow attacker to traverse file system to access file or directory be restricted directory . ' ... ' manipulation be useful bypass path traversal protection scheme . windows system , be equivalent \" .. \\ .. \" and might bypass check assume only two dot be valid . incomplete filtering , such removal \" ./ \" sequence , can ultimately produce valid \" .. \" sequence collapse unsafe value ( cwe-182 ) .",
                "child_of": [
                    "23"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "556",
            "value": {
                "id": "556",
                "name": "ASP.NET Misconfiguration: Use of Identity Impersonation",
                "description": "Configuring an ASP.NET application to run with impersonated credentials may give the application unnecessary privileges.",
                "extended_description": " use impersonate credential allow asp.net application to run either privilege client whose behalf be execute or arbitrary privilege grant configuration .",
                "child_of": [
                    "266"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "378",
            "value": {
                "id": "378",
                "name": "Creation of Temporary File With Insecure Permissions",
                "description": "Opening temporary files without appropriate measures or controls can leave the file, its contents and any function that it impacts vulnerable to attack.",
                "extended_description": "",
                "child_of": [
                    "377"
                ],
                "con_scope": [
                    " confidentiality",
                    " authorization",
                    " other",
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " read application data",
                    " other",
                    " other"
                ],
                "con_note": " depend datum store temporary file , be potential attacker to gain additional input vector be trust non - malicious . may be possible to make arbitrary change datum structure , user information , or even process ownership .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "756",
            "value": {
                "id": "756",
                "name": "Missing Custom Error Page",
                "description": "The product does not return custom error pages to the user, possibly exposing sensitive information.",
                "extended_description": "",
                "child_of": [
                    "755"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " attacker can leverage additional information provide default error page to mount attack target framework , database , or other resource use application .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "204",
            "value": {
                "id": "204",
                "name": "Observable Response Discrepancy",
                "description": "The product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.",
                "extended_description": " issue frequently occur authentication , where difference fail - login message could allow attacker to determine username be valid or not . exposure can be inadvertent ( bug ) or intentional ( design ) .",
                "child_of": [
                    "203"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1222",
            "value": {
                "id": "1222",
                "name": "Insufficient Granularity of Address Regions Protected by Register Locks",
                "description": "The product defines a large address region protected from modification by the same register lock control bit. This results in a conflict between the functional requirement that some addresses need to be writable by software during operation and the security requirement that the system configuration lock bit must be set during the boot process.",
                "extended_description": " integrated circuit and hardware ip can expose device configuration control need to be program device power reset trust firmware or software module ( commonly set bios / bootloader ) and then lock further modification . hardware design , be commonly implement use programmable lock bit enable / disable write protect set register or address region . when programmable lock bit be set , relevant address region can be implement hardcode value hardware logic can not be change later . problem can arise wherein protect region definition be not granular enough . programmable lock bit have be set , then new functionality can not be implement change hardware design .",
                "child_of": [
                    "1220"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": " system security configuration can not be define way do not conflict functional requirement device .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1242",
            "value": {
                "id": "1242",
                "name": "Inclusion of Undocumented Features or Chicken Bits",
                "description": "The device includes chicken bits or undocumented features that can create entry points for unauthorized actors.",
                "extended_description": " common design practice be to use undocumented bit device can be use to disable certain functional security feature . bit be commonly refer \" chicken bit \" . can facilitate quick identification and isolation faulty component , feature negatively affect performance , or feature do not provide require controllability debug and test . way to achieve be implementation undocumented feature . attacker might exploit interface unauthorized access .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1249",
            "value": {
                "id": "1249",
                "name": "Application-Level Admin Tool with Inconsistent View of Underlying Operating System",
                "description": "The product provides an application for administrators to manage parts of the underlying operating system, but the application does not accurately identify all of the relevant entities or resources that exist in the OS; that is, the application's model of the OS's state is inconsistent with the OS's actual state.",
                "extended_description": " many product provide web - base application or other interface manage underlying operating system . be common cloud , network access device , home networking , and other system .   when management tool do not accurately represent be os - such user account - then administrator might not see suspicious activity would be notice otherwise . example , numerous system utilize web \n\t\t\t\t front - end administrative control . also offer \n\t\t\t\t ability to add , alter , and drop user various \n\t\t\t\t privilege relate functionality \n\t\t\t\t system .   potential architectural weakness may exist \n\t\t\t\t where user information reflect web \n\t\t\t\t interface do not mirror user underlie \n\t\t\t\t operating system .   many web ui or rest api use \n\t\t\t\t underlying operating system authentication ; \n\t\t\t\t system 's logic may also track additional set \n\t\t\t\t user capability configuration file \n\t\t\t\t and dataset authorization capability . when \n\t\t\t\t be discrepancy user information \n\t\t\t\t ui or rest api 's interface system and \n\t\t\t\t underlying operating system 's user listing , may \n\t\t\t\t introduce weakness system .   example , \n\t\t\t\t attacker compromise os and add new user \n\t\t\t\t account - \" ghost \" account - then attacker could escape detection \n\t\t\t\t management tool do not list newly - add \n\t\t\t\t account . discrepancy could be exploit several way : rogue admin could insert new account system will \n persist be terminate or wish to take action system \n can not be directly associate . attacker can leverage separate command injection attack available web interface to insert ghost account shell privilege such ssh . attacker can leverage exist web interface api , manipulate such way new user be insert operating system , and user web account be either partially create or not at all . attacker could create admin \n\t\t\t\t\t   account be viewable administrator , \n\t\t\t\t\t   use account to create ghost account , \n\t\t\t\t\t   delete log and delete first create admin \n\t\t\t\t\t   account . many attacker scenario can be \n\t\t\t\t realize leverage separate vulnerability \n\t\t\t\t relate xss , command injection , authentication \n\t\t\t\t bypass , or logic flaw various system . \n\t\t\t\t",
                "child_of": [
                    "1250"
                ],
                "con_scope": [
                    " access control",
                    " accountability",
                    " other"
                ],
                "con_impacts": [
                    " varie context",
                    " hide activity",
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [
                    " ghost shell"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "1114",
            "value": {
                "id": "1114",
                "name": "Inappropriate Whitespace Style",
                "description": "The source code contains whitespace that is inconsistent across the code or does not follow expected standards for the product.",
                "extended_description": " issue make more difficult to understand and maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1078"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "127",
            "value": {
                "id": "127",
                "name": "Buffer Under-read",
                "description": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations prior to the targeted buffer.",
                "extended_description": " typically occur when pointer or index be decremente position buffer , when pointer arithmetic result position beginning valid memory location , or when negative index be use . may result exposure sensitive information or possibly crash .",
                "child_of": [
                    "125",
                    "786"
                ],
                "con_scope": [
                    " confidentiality",
                    " confidentiality"
                ],
                "con_impacts": [
                    " read memory",
                    " bypass protection mechanism"
                ],
                "con_note": " read - - bound memory , attacker might be able to get secret value , such memory address , can be bypass protection mechanism such aslr order to improve reliability and likelihood exploit separate weakness to achieve code execution instead just denial service .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1332",
            "value": {
                "id": "1332",
                "name": "Improper Handling of Faults that Lead to Instruction Skips",
                "description": "The device is missing or incorrectly implements circuitry or sensors that detect and mitigate the skipping of security-critical CPU instructions when they occur.",
                "extended_description": " operating condition hardware may change \n               way cause unexpected behavior to occur , \n               include skipping security - critical cpu \n               instruction . generally , can occur \n               electrical disturbance or when device operate \n               expect condition . practice , application code may contain \n\t\t\t   conditional branch be security - sensitive ( e.g. , \n\t\t\t   accept or reject user - provide password ) . \n\t\t\t   conditional branch be typically implement \n\t\t\t   single conditional branch instruction program \n\t\t\t   binary , skip , may lead effectively \n\t\t\t   flip branch condition - i.e. , cause wrong \n\t\t\t   security - sensitive branch to be take . affect \n\t\t\t   process such firmware authentication , password \n\t\t\t   verification , and other security - sensitive decision \n\t\t\t   point . attacker can use fault injection technique to \n\t\t\t   alter operating condition hardware \n\t\t\t   security - critical instruction be skip more \n\t\t\t   frequently or more reliably would \n\t\t\t   \" natural \" setting .",
                "child_of": [
                    "1384"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " authentication"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " alter execution logic",
                    " unexpected state"
                ],
                "con_note": " depend context , instruction skipping can \n                         have broad range consequence relate \n                         generic bypassing security critical code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1326",
            "value": {
                "id": "1326",
                "name": "Missing Immutable Root of Trust in Hardware",
                "description": "A missing immutable root of trust in the hardware results in the ability to bypass secure boot or execute untrusted or adversarial boot code.",
                "extended_description": " system - - chip ( soc ) implement secure boot verifying or authenticating sign boot code . signing code be achieve entity soc trust .   execute boot code , soc verifie code or public key code have be sign have not be tamper . other datum soc depend be system - hardware setting fuse such \" secure boot be enable \" . datum play crucial role establish root trust ( rot ) to execute secure - boot flow . one many way rot be achieve be store code and datum memory or fuse . memory should be immutable , i.e. , once rot be program / provision memory , memory should be lock and prevent further programming or write . memory content ( i.e. , rot ) be mutable , then adversary can modify rot to execute choice code , result compromise secure boot . note , component rom , secure patching / update feature should be support to allow authenticated and authorize update field .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " authentication",
                    " authorization"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " execute unauthorized code or command",
                    " modify memory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "357",
            "value": {
                "id": "357",
                "name": "Insufficient UI Warning of Dangerous Operations",
                "description": "The user interface provides a warning to a user regarding dangerous or sensitive operations, but the warning is not noticeable enough to warrant attention.",
                "extended_description": "",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " non - repudiation"
                ],
                "con_impacts": [
                    " hide activity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "365",
            "value": {
                "id": "365",
                "name": "DEPRECATED: Race Condition in Switch",
                "description": "This entry has been deprecated. There are no documented cases in which a switch's control expression is evaluated more than once.",
                "extended_description": " be likely entry be initially create base misinterpretation original source material . original source intend to explain how switch could be unpredictable when use thread , control expression use datum or variable could change execution different thread . weakness be already cover cwe-367 . ambiguity documentation language and compiler , practice , evaluate switch control expression only once . future language state code explicitly evaluate control expression more once , then would not be weakness , but language perform design .",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "798",
            "value": {
                "id": "798",
                "name": "Use of Hard-coded Credentials",
                "description": "The product contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.",
                "extended_description": " hard - code credential typically create significant hole allow attacker to bypass authentication have be configure product administrator . hole might be difficult system administrator to detect . even detect , can be difficult to fix , so administrator may be force disable product entirely . be two main variation : inbound : product contain authentication mechanism check input credential hard - code set credential . outbound : product connect system or component , and contain hard - code credential connect component . inbound variant , default administration account be create , and simple password be hard - code product and associate account . hard - code password be same installation product , and usually can not be change or disable system administrator manually modify program , or otherwise patch product . password be ever discover or publish ( common occurrence internet ) , then knowledge password can access product . finally , installation product will have same password , even different organization , enable massive attack such worm to take place . outbound variant apply front - end system authenticate back - end service . back - end service may require fix password can be easily discover . programmer may simply hard - code back - end credential front - end product . user program may be able to extract password . client - side system hard - code password pose even more threat , extraction password binary be usually very simple .",
                "child_of": [
                    "1391",
                    "344",
                    "671"
                ],
                "con_scope": [
                    " access control",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " read application data",
                    " gain privileges or assume identity",
                    " execute unauthorized code or command",
                    " other"
                ],
                "con_note": " weakness can lead exposure resource or functionality unintended actor , possibly provide attacker sensitive information or even execute arbitrary code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "806",
            "value": {
                "id": "806",
                "name": "Buffer Access Using Size of Source Buffer",
                "description": "The product uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.",
                "extended_description": " when size destination be small size source , buffer overflow could occur .",
                "child_of": [
                    "805"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )",
                    " read memory",
                    " modify memory",
                    " execute unauthorized code or command",
                    " bypass protection mechanism"
                ],
                "con_note": " when consequence be arbitrary code execution , can often be use to subvert other security service .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "113",
            "value": {
                "id": "113",
                "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
                "description": "The product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.",
                "extended_description": " http agent or component may include web server , load balancer , reverse proxy , web cache proxy , application firewall , web browser , etc . regardless role , be expect to maintain coherent , consistent http communication state component . however , include unexpected datum http header allow attacker to specify entirety http message be render client http agent ( e.g. , web browser ) or back - end http agent ( e.g. , web server ) , message be part request or response . \n\t    when http request contain unexpected cr and lf character , server may respond output stream be interpret \" split \" stream two different http message instead one . cr be carriage return , also give % 0d or \\r , and lf be line feed , also give % 0a or \\n . addition cr and lf character , other valid / rfc compliant special character and unique character encoding can be utilize , such ht ( horizontal tab , also give % 09 or \\t ) and sp ( space , also give + sign or % 20).these type unvalidated and unexpected datum http message header allow attacker to control second \" split \" message to mount attack such server - side request forgery , cross - site scripting , and cache poisoning attack . http response splitting weakness may be present when : datum enter web application untrusted source , most frequently http request . datum be include http response header send web user neutralize malicious character can be interpret separator character header .",
                "child_of": [
                    "93",
                    "436"
                ],
                "con_scope": [
                    " integrity",
                    " access control"
                ],
                "con_impacts": [
                    " modify application data",
                    " gain privileges or assume identity"
                ],
                "con_note": " cr and lf character http header may give attacker control remain header and body message application intend to send / receive , as well allow to create additional message entirely control .",
                "alt_term": [
                    " http request splitting",
                    " http response splitting"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "1193",
            "value": {
                "id": "1193",
                "name": "Power-On of Untrusted Execution Core Before Enabling Fabric Access Control",
                "description": "The product enables components that contain untrusted firmware before memory and fabric access controls have been enabled.",
                "extended_description": " initial reset , system - - chip ( soc ) fabric access control and other \n            security feature need to be program trust firmware part \n            boot sequence . untrusted ip or peripheral microcontroller \n\t    be enable first , then untrusted component can master \n            transaction hardware bus and target memory or other asset to \n            compromise soc boot firmware .",
                "child_of": [
                    "696"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": " untrusted component can master transaction hw bus and target memory or other asset to compromise soc boot firmware .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "617",
            "value": {
                "id": "617",
                "name": "Reachable Assertion",
                "description": "The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary.",
                "extended_description": " assertion be good catch logic error and reduce chance reach more serious vulnerability condition , can still lead denial service . example , server handle multiple simultaneous connection , and assert ( ) occur one single connection cause other connection to be drop , be reachable assertion lead denial service .",
                "child_of": [
                    "670"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart"
                ],
                "con_note": " attacker can trigger assert statement can still lead denial service relevant code can be trigger attacker , and scope assert ( ) extend attacker 's own session .",
                "alt_term": [
                    " assertion failure"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "496",
            "value": {
                "id": "496",
                "name": "Public Data Assigned to Private Array-Typed Field",
                "description": "Assigning public data to a private array is equivalent to giving public access to the array.",
                "extended_description": "",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data"
                ],
                "con_note": " content array can be modify intend scope .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "343",
            "value": {
                "id": "343",
                "name": "Predictable Value Range from Previous Values",
                "description": "The product's random number generator produces a series of values which, when observed, can be used to infer a relatively small range of possibilities for the next value that could be generated.",
                "extended_description": " output random number generator should not be predictable base observation previous value . case , attacker can not predict exact value will be produce next , but can narrow down possibility significantly . reduce amount effort to perform brute force attack . example , suppose product generate random number 1 and 100 , but always produce large value reach 100 . generator produce 80 , then attacker know next value will be somewhere 81 and 100 . instead 100 possibility , attacker only need to consider 20 .",
                "child_of": [
                    "340"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "580",
            "value": {
                "id": "580",
                "name": "clone() Method Without super.clone()",
                "description": "The product contains a clone() method that does not call super.clone() to obtain the new object.",
                "extended_description": " implementation clone ( ) should obtain new object call super.clone ( ) . class do not follow convention , subclass 's clone ( ) method will return object wrong type .",
                "child_of": [
                    "664",
                    "573"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " unexpected state",
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "421",
            "value": {
                "id": "421",
                "name": "Race Condition During Access to Alternate Channel",
                "description": "The product opens an alternate channel to communicate with an authorized user, but the channel is accessible to other actors.",
                "extended_description": " create race condition allow attacker to access channel authorized user do .",
                "child_of": [
                    "420",
                    "362"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "446",
            "value": {
                "id": "446",
                "name": "UI Discrepancy for Security Feature",
                "description": "The user interface does not correctly enable or configure a security feature, but the interface provides feedback that causes the user to believe that the feature is in a secure state.",
                "extended_description": " when user interface do not properly reflect user ask , then can lead user false sense security . example , user might check box to enable security option to enable encrypt communication , but product do not actually enable encryption . alternately , user might provide \" restrict \" access control rule , but product only implement \" restrict \" .",
                "child_of": [
                    "684"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1389",
            "value": {
                "id": "1389",
                "name": "Incorrect Parsing of Numbers with Different Radices",
                "description": "The product parses numeric input assuming base 10 (decimal) values, but it does not account for inputs that use a different base number (radix).",
                "extended_description": " frequently , numeric input begin \" 0 \" be treat octal , or \" 0x \" cause to be treat hexadecimal , e.g. inet_addr ( ) function . example , \" 023 \" ( octal ) be 35 decimal , or \" 0x31 \" be 49 decimal . other basis may be use as well . developer assume decimal - only input , code could produce incorrect number when input be parse use different base . can result unexpected and/or dangerous behavior . example , \" 0127.0.0.1 \" ip address be parse octal lead \" 0 \" , whose numeric value would be same 87.0.0.1 ( decimal ) , where developer likely expect to use consequence vary depend surround code weakness occur , but can include bypass network - base access control use unexpected ip address or netmask , or cause apparently - symbolic identifier to be process be number . web application , can enable bypass ssrf restriction .",
                "child_of": [
                    "704"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " bypass protection mechanism",
                    " alter execution logic"
                ],
                "con_note": " attacker may use unexpected numerical base bypass or manipulate access control mechanism .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "173",
            "value": {
                "id": "173",
                "name": "Improper Handling of Alternate Encoding",
                "description": "The product does not properly handle when an input uses an alternate encoding that is valid for the control sphere to which the input is being sent.",
                "extended_description": "",
                "child_of": [
                    "172"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "416",
            "value": {
                "id": "416",
                "name": "Use After Free",
                "description": "Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.",
                "extended_description": " use previously - free memory can have number adverse consequence , range corruption valid datum execution arbitrary code , depend instantiation and timing flaw . simple way datum corruption may occur involve system 's reuse freed memory . use - - free error have two common and sometimes overlap cause : error condition and other exceptional circumstance . confusion which part program be responsible free memory . scenario , memory question be allocate pointer validly point have be free . original pointer freed memory be use again and point somewhere new allocation . datum be change , corrupt validly use memory ; induce undefined behavior process . newly allocate datum happen to hold class , c++ example , various function pointer may be scatter heap datum . one function pointer be overwrite address valid shellcode , execution arbitrary code can be achieve .",
                "child_of": [
                    "825"
                ],
                "con_scope": [
                    " integrity",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command"
                ],
                "con_note": " malicious datum be enter chunk consolidation can take place , may be possible to take advantage write - - where primitive to execute arbitrary code .",
                "alt_term": [
                    " dangle pointer",
                    " use - - free"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "424",
            "value": {
                "id": "424",
                "name": "Improper Protection of Alternate Path",
                "description": "The product does not sufficiently protect all possible paths that a user can take to access restricted functionality or resources.",
                "extended_description": "",
                "child_of": [
                    "693",
                    "638"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "69",
            "value": {
                "id": "69",
                "name": "Improper Handling of Windows ::DATA Alternate Data Stream",
                "description": "The product does not properly prevent access to, or detect usage of, alternate data streams (ADS).",
                "extended_description": " attacker can use ads to hide information file ( e.g. size , name process ) system or file browser tool such windows explorer and ' dir ' command line utility . alternately , attacker might be able to bypass intend access restriction associated data fork .",
                "child_of": [
                    "66"
                ],
                "con_scope": [
                    " access control",
                    " non - repudiation",
                    " other"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " hide activity",
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "76",
            "value": {
                "id": "76",
                "name": "Improper Neutralization of Equivalent Special Elements",
                "description": "The product correctly neutralizes certain special elements, but it improperly neutralizes equivalent special elements.",
                "extended_description": " product may have fix list special character believe be complete . however , may be alternate encoding , or representation also have same meaning . example , product may filter out lead slash ( / ) to prevent absolute path name , but do not account tilde ( ~ ) follow user name , * nix system could be expand absolute pathname . alternately , product might filter dangerous \" -e \" command - line switch when call external program , but might not account \" --exec \" or other switch have same semantic .",
                "child_of": [
                    "75"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "90",
            "value": {
                "id": "90",
                "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
                "description": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
                "extended_description": "",
                "child_of": [
                    "943"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " read application data",
                    " modify application data"
                ],
                "con_note": " attacker could include input change ldap query allow unintended command or code to be execute , allow sensitive datum to be read or modify or cause other unintended behavior .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1270",
            "value": {
                "id": "1270",
                "name": "Generation of Incorrect Security Tokens",
                "description": "The product implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens generated in the system are incorrect.",
                "extended_description": " systems - - - chip ( soc ) ( integrated circuit and hardware engine ) implement security tokens to differentiate and identify action originate various agent . action could be \" read \" , \" write \" , \" program \" , \" reset \" , \" fetch \" , \" compute \" , etc . security tokens be generate and assign agent soc be either capable generate action or receive action agent . agent could be assign unique , security token base trust level or privilege . incorrectly generate security tokens could result same token use multiple agent or multiple token be use same agent . condition could result denial - - service ( dos ) or execution action turn could result privilege escalation or unintended access .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " modify files or directory",
                    " execute unauthorized code or command",
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " read memory",
                    " modify memory",
                    " dos : crash , exit , or restart"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "232",
            "value": {
                "id": "232",
                "name": "Improper Handling of Undefined Values",
                "description": "The product does not handle or incorrectly handles when a value is not defined or supported for the associated parameter, field, or argument name.",
                "extended_description": "",
                "child_of": [
                    "229"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1073",
            "value": {
                "id": "1073",
                "name": "Non-SQL Invokable Control Element with Excessive Number of Data Resource Accesses",
                "description": "The product contains a client with a function or method that contains a large number of data accesses/queries that are sent through a data manager, i.e., does not use efficient database capabilities.",
                "extended_description": " issue can make product perform more slowly .   relevant code be reachable attacker , then performance problem might introduce vulnerability . interpretation \" large number datum access / query \" may vary product or developer , cisq recommend default maximum 2 datum access function / method .",
                "child_of": [
                    "405"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "414",
            "value": {
                "id": "414",
                "name": "Missing Lock Check",
                "description": "A product does not check to see if a lock is present before performing sensitive operations on a resource.",
                "extended_description": "",
                "child_of": [
                    "667"
                ],
                "con_scope": [
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " modify application data",
                    " dos : instability",
                    " dos : crash , exit , or restart"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "431",
            "value": {
                "id": "431",
                "name": "Missing Handler",
                "description": "A handler is not available or implemented.",
                "extended_description": " when exception be throw and not catch , process have give up opportunity to decide give failure or event be worth change execution .",
                "child_of": [
                    "691"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1311",
            "value": {
                "id": "1311",
                "name": "Improper Translation of Security Attributes by Fabric Bridge",
                "description": "The bridge incorrectly translates security attributes from either trusted to untrusted or from untrusted to trusted when converting from one fabric protocol to another.",
                "extended_description": " bridge allow ip block support different fabric protocol to be integrate system .   fabric end - point or interface usually have dedicate signal to transport security attribute . example , hprot signal ahb , axprot signal axi , and mreqinfo and srespinfo signal ocp.the value signal be use to indicate security attribute transaction . include immutable hardware identity controller initiate transaction , privilege level , and type transaction ( e.g. , read / write , cacheable / non - cacheable , post / non - posted).a weakness can arise bridge ip block , translate signal protocol use ip block endpoint protocol use central bus , do not properly translate security attribute . result , identity initiator could be translate untrusted trusted or vice - versa . could result access - control bypass , privilege escalation , or denial service .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1124",
            "value": {
                "id": "1124",
                "name": "Excessively Deep Nesting",
                "description": "The code contains a callable or other code grouping in which the nesting / branching is too deep.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1120"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1192",
            "value": {
                "id": "1192",
                "name": "System-on-Chip (SoC) Using Components without Unique, Immutable Identifiers",
                "description": "The System-on-Chip (SoC) does not have unique, immutable identifiers for each of its components.",
                "extended_description": " system - - chip ( soc ) comprise several component ( ip ) varied \n            trust requirement . be require ip be identify \n            uniquely and should distinguish other entity \n            soc ambiguity . unique secure identity be \n            require various purpose . most time identity be use \n            to route transaction or perform certain action , include \n            resetting , retrieve sensitive information , and act or \n            behalf else . be several variant weakness : \" miss \" identifier be when soc do not define \n\t       mechanism to uniquely identify ip.an \" insufficient \" identifier might provide \n\t       defense - example , most common \n\t       attack - but do not protect \n\t       be intend . \" misconfigured \" mechanism occur when mechanism \n               be available but not implement correctly . \" ignore \" identifier occur when soc / ip have not apply \n\t       policy or do not act identifier securely .",
                "child_of": [
                    "657"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "242",
            "value": {
                "id": "242",
                "name": "Use of Inherently Dangerous Function",
                "description": "The product calls a function that can never be guaranteed to work safely.",
                "extended_description": " certain function behave dangerous way regardless how be use . function category be often implement take security concern account . get ( ) function be unsafe do not perform bound check size input . attacker can easily send arbitrarily - sized input get ( ) and overflow destination buffer . similarly , > > operator be unsafe to use when read statically - allocate character array do not perform bound check size input . attacker can easily send arbitrarily - sized input > > operator and overflow destination buffer .",
                "child_of": [
                    "1177"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "147",
            "value": {
                "id": "147",
                "name": "Improper Neutralization of Input Terminators",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component.",
                "extended_description": " example , \" . \" smtp signify end mail message datum , null character can be use end string .",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1076",
            "value": {
                "id": "1076",
                "name": "Insufficient Adherence to Expected Conventions",
                "description": "The product's architecture, source code, design, documentation, or other artifact does not follow required conventions.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "203",
            "value": {
                "id": "203",
                "name": "Observable Discrepancy",
                "description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
                "extended_description": " discrepancy can take many form , and variation may be detectable timing , control flow , communication such reply or request , or general behavior . discrepancy can reveal information product 's operation or internal state unauthorized actor . case , discrepancy can be use attacker to form side channel .",
                "child_of": [
                    "200"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control",
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data",
                    " bypass protection mechanism",
                    " read application data"
                ],
                "con_note": " when cryptographic primitive be vulnerable side - channel - attack , could be use to reveal unencrypted plaintext bad case .",
                "alt_term": [
                    " side channel attack"
                ],
                "alt_desc": [
                    " observable discrepancy be root side channel attack ."
                ]
            }
        },
        {
            "name": "375",
            "value": {
                "id": "375",
                "name": "Returning a Mutable Object to an Untrusted Caller",
                "description": "Sending non-cloned mutable data as a return value may result in that data being altered or deleted by the calling function.",
                "extended_description": " situation where function return reference mutable datum , be possible external code call function may make change datum send . datum be not previously clone , class will then be use modify datum may violate assumption internal state .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " access control",
                    " integrity"
                ],
                "con_impacts": [
                    " modify memory"
                ],
                "con_note": " potentially datum could be tamper function should not have be tamper .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "822",
            "value": {
                "id": "822",
                "name": "Untrusted Pointer Dereference",
                "description": "The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.",
                "extended_description": " attacker can supply pointer memory location product be not expect . pointer be dereference write operation , attack might allow modification critical state variable , cause crash , or execute code . dereferencing operation be read , then attack might allow reading sensitive datum , cause crash , or set variable unexpected value ( value will be read unexpected memory location).there be several variant weakness , include but not necessarily limit : untrusted value be directly invoke function call . os kernel or driver where be boundary \" userland \" and privileged memory space , untrusted pointer might enter api or system call ( see cwe-781 one such example).inadvertently accept value untrusted control sphere when do not have to be accept input at all . might occur when code be originally develop to be run single user non - networked environment , and code be then port or otherwise expose networked environment .",
                "child_of": [
                    "119"
                ],
                "con_scope": [
                    " confidentiality",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " read memory",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command",
                    " modify memory"
                ],
                "con_note": " untrusted pointer be use function call , or point unexpected datum write operation , then code execution may be possible .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "826",
            "value": {
                "id": "826",
                "name": "Premature Release of Resource During Expected Lifetime",
                "description": "The product releases a resource that is still intended to be used by itself or another actor.",
                "extended_description": " weakness focus error product should not release resource , but perform release anyway . be different weakness product release resource appropriate time , but maintain reference resource , later access . weakness , resource should still be valid subsequent access . when product release resource be still be use , be possible operation will still be take resource , may have be repurpose meantime , lead issue similar cwe-825 . consequence may include denial service , information exposure , or code execution .",
                "child_of": [
                    "666"
                ],
                "con_scope": [
                    " confidentiality",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " read application data",
                    " read memory",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command",
                    " modify application data",
                    " modify memory"
                ],
                "con_note": " when resource be release , software might modify structure . might affect logic section code still assume resource be active . release resource be relate memory and be use function call , or point unexpected datum write operation , then code execution may be possible subsequent access .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "686",
            "value": {
                "id": "686",
                "name": "Function Call With Incorrect Argument Type",
                "description": "The product calls a function, procedure, or routine, but the caller specifies an argument that is the wrong data type, which may lead to resultant weaknesses.",
                "extended_description": " weakness be most likely to occur loosely type language , or strongly type language type variable argument can not be enforce compilation time , or where be implicit casting .",
                "child_of": [
                    "628"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "258",
            "value": {
                "id": "258",
                "name": "Empty Password in Configuration File",
                "description": "Using an empty string as a password is insecure.",
                "extended_description": "",
                "child_of": [
                    "260",
                    "521"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "145",
            "value": {
                "id": "145",
                "name": "Improper Neutralization of Section Delimiters",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as section delimiters when they are sent to a downstream component.",
                "extended_description": " datum be parse , inject / absent / malforme delimiter may cause process to take unexpected action . one example section delimiter be boundary string multipart mime message . many case , double line delimiter can serve section delimiter .",
                "child_of": [
                    "140"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "369",
            "value": {
                "id": "369",
                "name": "Divide By Zero",
                "description": "The product divides a value by zero.",
                "extended_description": " weakness typically occur when unexpected value be provide product , or error occur be not properly detect . frequently occur calculation involve physical dimension such size , length , width , and height .",
                "child_of": [
                    "682"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart"
                ],
                "con_note": " divide zero result crash .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "472",
            "value": {
                "id": "472",
                "name": "External Control of Assumed-Immutable Web Parameter",
                "description": "The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.",
                "extended_description": " web product do not properly protect assume - immutable value modification hide form field , parameter , cookie , or url , can lead modification critical datum . web application often mistakenly make assumption datum pass client hide field or cookie be not susceptible tamper . improper validation datum be user - controllable can lead application processing incorrect , and often malicious , input . example , custom cookie commonly store session datum or persistent datum session . kind session datum be normally involve security relate decision server side , such user authentication and access control . thus , cookie might contain sensitive datum such user credential and privilege . be dangerous practice , can often lead improper reliance value client - provide cookie server side application .",
                "child_of": [
                    "642",
                    "471"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data"
                ],
                "con_note": " appropriate protection mechanism , client can easily tamper cookie and similar web datum . reliance cookie detailed validation can lead problem such sql injection . use cookie value security relate decision server side , manipulate cookie might lead violation security policy such authentication bypassing , user impersonation and privilege escalation . addition , store sensitive datum cookie appropriate protection can also lead disclosure sensitive user datum , especially datum store persistent cookie .",
                "alt_term": [
                    " assumed - immutable parameter tampering"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "1391",
            "value": {
                "id": "1391",
                "name": "Use of Weak Credentials",
                "description": "The product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.",
                "extended_description": " design , authentication protocol try to ensure attacker must perform brute force attack do not know credential such key or password . however , when credential be easily predictable or even fix ( default or hard - code password and key ) , then attacker can defeat mechanism rely brute force . credential may be weak different reason , such : hard - code ( i.e. , static and unchangeable administrator)default ( i.e. , same static value different deployment / installation , but able to be change administrator)predictable ( i.e. , generate way produce unique credential deployment / installation , but can still be guess reasonable efficiency)even new , unique credential be intend to be generate product installation , generation be predictable , then may also simplify guess attack .",
                "child_of": [
                    "1390"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "600",
            "value": {
                "id": "600",
                "name": "Uncaught Exception in Servlet",
                "description": "The Servlet does not catch all exceptions, which may reveal sensitive debugging information.",
                "extended_description": " when servlet throw exception , default error response servlet container send back user typically include debug information . information be great value attacker . example , stack trace might show attacker malformed sql query string , type database be use , and version application container . information enable attacker to target know vulnerability component .",
                "child_of": [
                    "248"
                ],
                "con_scope": [
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " read application data",
                    " dos : crash , exit , or restart"
                ],
                "con_note": "",
                "alt_term": [
                    " miss catch block"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "299",
            "value": {
                "id": "299",
                "name": "Improper Check for Certificate Revocation",
                "description": "The product does not check or incorrectly checks the revocation status of a certificate, which may cause it to use a certificate that has been compromised.",
                "extended_description": " improper check certificate revocation be far more serious flaw related certificate failure . be use revoke certificate be almost certainly malicious . most common reason certificate revocation be compromise system question , result legitimate server will be use revoke certificate , be sorely sync .",
                "child_of": [
                    "295",
                    "404"
                ],
                "con_scope": [
                    " access control",
                    " integrity",
                    " other",
                    " confidentiality"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " other",
                    " read application data"
                ],
                "con_note": " datum may be disclose entity impersonate trusted entity , result information disclosure .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "602",
            "value": {
                "id": "602",
                "name": "Client-Side Enforcement of Server-Side Security",
                "description": "The product is composed of a server that relies on the client to implement a mechanism that is intended to protect the server.",
                "extended_description": " when server rely protection mechanism place client side , attacker can modify client - side behavior to bypass protection mechanism , result potentially unexpected interaction client and server . consequence will vary , depend mechanism be try to protect .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " access control",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " dos : crash , exit , or restart",
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": " client - side check authentication can be easily bypass , allow client to escalate access level and perform unintended action .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "363",
            "value": {
                "id": "363",
                "name": "Race Condition Enabling Link Following",
                "description": "The product checks the status of a file or directory before accessing it, which produces a race condition in which the file can be replaced with a link before the access is performed, causing the product to access the wrong file.",
                "extended_description": " developer might expect be very narrow time window time check and time use , be still race condition . attacker could cause product to slow down ( e.g. memory consumption ) , cause time window to become large . alternately , situation , attacker could win race perform large number attack .",
                "child_of": [
                    "367"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1164",
            "value": {
                "id": "1164",
                "name": "Irrelevant Code",
                "description": "The product contains code that is not essential for execution, i.e. makes no state changes and has no side effects that alter data or control flow, such that removal of the code would have no impact to functionality or correctness.",
                "extended_description": " irrelevant code could include dead code , \n\t      initialization be not use , empty block , code could be entirely \n\t      remove optimization , etc .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other",
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability",
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1116",
            "value": {
                "id": "1116",
                "name": "Inaccurate Comments",
                "description": "The source code contains comments that do not accurately describe or explain aspects of the portion of the code with which the comment is associated.",
                "extended_description": " when comment do not accurately reflect associated code element , can introduce confusion reviewer ( due inconsistency ) or make more difficult and less efficient to validate code be implement intended behavior correctly . issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1078"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "71",
            "value": {
                "id": "71",
                "name": "DEPRECATED: Apple '.DS_Store'",
                "description": "This entry has been deprecated as it represents a specific observed example of a UNIX Hard Link weakness type rather than its own individual weakness type. Please refer toCWE-62.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "704",
            "value": {
                "id": "704",
                "name": "Incorrect Type Conversion or Cast",
                "description": "The product does not correctly convert an object, resource, or structure from one type to a different type.",
                "extended_description": "",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1248",
            "value": {
                "id": "1248",
                "name": "Semiconductor Defects in Hardware Logic with Security-Sensitive Implications",
                "description": "The security-sensitive hardware module contains semiconductor defects.",
                "extended_description": " semiconductor device can fail various reason . be manufacture and packaging defect , rest be due prolong use or usage extreme condition . mechanism lead semiconductor defect include encapsulation failure , die - attach failure , wire - bond failure , bulk - silicon defect , oxide - layer fault , aluminum - metal fault ( include electromigration , corrosion aluminum , etc . ) , and thermal / electrical stress . defect manifest fault chip - internal signal or register , have effect input , output , or intermediate signal be always 0 or always 1 , and do not switch expect . such fault occur security - sensitive hardware module , security objective hardware module may be compromise .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " dos : instability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "521",
            "value": {
                "id": "521",
                "name": "Weak Password Requirements",
                "description": "The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.",
                "extended_description": " authentication mechanism often rely memorized secret ( also know password ) to provide assertion identity user system . be therefore important password be sufficient complexity and impractical adversary to guess . specific requirement how complex password need to be depend type system be protect . select correct password requirement and enforce implementation be critical overall success authentication mechanism .",
                "child_of": [
                    "1391"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " attacker could easily guess user password and gain access user account .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1329",
            "value": {
                "id": "1329",
                "name": "Reliance on Component That is Not Updateable",
                "description": "The product contains a component that cannot be updated or patched in order to remove vulnerabilities or significant bugs.",
                "extended_description": " component be discover to contain vulnerability or critical bug , but issue can not be fix use update or patch , then product 's owner will not be able to protect issue .   only option might be replacement product , could be too financially or operationally expensive product owner .   result , inability to patch or update can leave product open attacker exploitation or critical operation failure . weakness can be especially difficult to manage when use rom , firmware , or similar component traditionally have have limit or update capability . \n\t\t\t   industry such healthcare , \" legacy \" \n\t\t\t     device can be operate decade .   \n\t\t\t     us task force report [ ref-1197 ] note , \" inability \n\t\t\t     to update or replace equipment have \n\t\t\t     large and small health care delivery \n\t\t\t     organization struggle numerous \n\t\t\t     unsupported legacy system can not \n\t\t\t     easily be replace ( hardware , software , and \n\t\t\t     operating system ) large number \n\t\t\t     vulnerability and few modern \n\t\t\t     countermeasure . \" \n\t\t\t     hardware can be prone weakness , software system can also be affect , such when third - party driver or library be no long actively maintain or support but be still critical require functionality .",
                "child_of": [
                    "1357",
                    "664"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control",
                    " authentication",
                    " authorization",
                    " other"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " execute unauthorized code or command",
                    " dos : crash , exit , or restart",
                    " quality degradation",
                    " reduce maintainability"
                ],
                "con_note": " attacker can identify exploitable vulnerability one product have mean patching , attack may be use affect version product .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "623",
            "value": {
                "id": "623",
                "name": "Unsafe ActiveX Control Marked Safe For Scripting",
                "description": "An ActiveX control is intended for restricted use, but it has been marked as safe-for-scripting.",
                "extended_description": " might allow attacker to use dangerous functionality web page access control , can lead different resultant vulnerability , depend control 's behavior .",
                "child_of": [
                    "267"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "235",
            "value": {
                "id": "235",
                "name": "Improper Handling of Extra Parameters",
                "description": "The product does not handle or incorrectly handles when the number of parameters, fields, or arguments with the same name exceeds the expected amount.",
                "extended_description": "",
                "child_of": [
                    "233"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "763",
            "value": {
                "id": "763",
                "name": "Release of Invalid Pointer or Reference",
                "description": "The product attempts to return a memory resource to the system, but it calls the wrong release function or calls the appropriate release function incorrectly.",
                "extended_description": " weakness can take several form , such : memory be allocate , explicitly or implicitly , one memory management method and deallocate use different , non - compatible function ( function call or memory management routine choose be appropriate , however be use incorrectly , such cwe-761 .",
                "child_of": [
                    "404"
                ],
                "con_scope": [
                    " integrity",
                    " availability",
                    " confidentiality"
                ],
                "con_impacts": [
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command"
                ],
                "con_note": " weakness may result corruption memory , and perhaps instruction , possibly lead crash . corrupted memory can be effectively control , may be possible to execute arbitrary code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1047",
            "value": {
                "id": "1047",
                "name": "Modules with Circular Dependencies",
                "description": "The product contains modules in which one module has references that cycle back to itself, i.e., there are circular dependencies.",
                "extended_description": " example , java , weakness might indicate cycle package . issue make more difficult to maintain product insufficient modularity , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability . issue can prevent product run reliably .   relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "1120"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "925",
            "value": {
                "id": "925",
                "name": "Improper Verification of Intent by Broadcast Receiver",
                "description": "The Android application uses a Broadcast Receiver that receives an Intent but does not properly verify that the Intent came from an authorized source.",
                "extended_description": " certain type intent , identify action string , can only be broadcast operating system , not third - party application . however , when application register to receive implicit system intent , be also register to receive explicit intent . malicious application can not send implicit system intent , can send explicit intent target application , may assume receive intent be valid implicit system intent and not explicit intent application . may lead unintended behavior .",
                "child_of": [
                    "940"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " application can impersonate operating system and cause software to perform unintended action .",
                "alt_term": [
                    " intent spoofing"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "1024",
            "value": {
                "id": "1024",
                "name": "Comparison of Incompatible Types",
                "description": "The product performs a comparison between two entities, but the entities are of different, incompatible types that cannot be guaranteed to provide correct results when they are directly compared.",
                "extended_description": " language be strictly type but support cast / conversion , such c or c++ , programmer might assume cast one entity same type entity will ensure comparison will be perform correctly , but can not be guarantee .   language be not strictly type , such php or javascript , may be implicit casting / conversion type programmer be unaware , cause unexpected result ; example , string \" 123 \" might be convert number type .   see example .",
                "child_of": [
                    "697"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "586",
            "value": {
                "id": "586",
                "name": "Explicit Call to Finalize()",
                "description": "The product makes an explicit call to the finalize() method from outside the finalizer.",
                "extended_description": " java language specification allow object 's finalize ( ) method to be call finalizer , do so be usually bad idea . example , call finalize ( ) explicitly mean finalize ( ) will be call more once : first time will be explicit call and last time will be call be make object be garbage collect .",
                "child_of": [
                    "1076"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " unexpected state",
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "163",
            "value": {
                "id": "163",
                "name": "Improper Neutralization of Multiple Trailing Special Elements",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple trailing special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
                "extended_description": " datum be parse , improperly handle multiple trail special element may cause process to take unexpected action result attack .",
                "child_of": [
                    "162"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "542",
            "value": {
                "id": "542",
                "name": "DEPRECATED: Information Exposure Through Cleanup Log Files",
                "description": "This entry has been deprecated because its abstraction was too low-level. SeeCWE-532.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "160",
            "value": {
                "id": "160",
                "name": "Improper Neutralization of Leading Special Elements",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes leading special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
                "extended_description": " datum be parse , improperly handle lead special element may cause process to take unexpected action result attack .",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "185",
            "value": {
                "id": "185",
                "name": "Incorrect Regular Expression",
                "description": "The product specifies a regular expression in a way that causes data to be improperly matched or compared.",
                "extended_description": " when regular expression be use protection mechanism such filtering or validation , may allow attacker to bypass intend restriction incoming datum .",
                "child_of": [
                    "697"
                ],
                "con_scope": [
                    " other",
                    " access control"
                ],
                "con_impacts": [
                    " unexpected state",
                    " varie context",
                    " bypass protection mechanism"
                ],
                "con_note": " php , regular expression check can sometimes be bypass null byte , lead number weakness .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1331",
            "value": {
                "id": "1331",
                "name": "Improper Isolation of Shared Resources in Network On Chip (NoC)",
                "description": "The Network On Chip (NoC) does not isolate or incorrectly isolates its on-chip-fabric and internal resources such that they are shared between trusted and untrusted agents, creating timing channels.",
                "extended_description": " typically , network chip ( noc ) have many internal resource be share packet different trust domain . resource include internal buffer , crossbar and switch , individual port , and channel . sharing resource cause contention and introduce interference differently trust domain , pose security threat timing channel , allow attacker to infer datum belong trust agent . may also result introduce network interference , result degraded throughput and latency .",
                "child_of": [
                    "653",
                    "668"
                ],
                "con_scope": [
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( other )",
                    " varie context",
                    " other"
                ],
                "con_note": " attacker may infer datum belong trust agent . method use to perform attack may result noticeably increase resource consumption .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "305",
            "value": {
                "id": "305",
                "name": "Authentication Bypass by Primary Weakness",
                "description": "The authentication algorithm is sound, but the implemented mechanism can be bypassed as the result of a separate weakness that is primary to the authentication error.",
                "extended_description": "",
                "child_of": [
                    "1390"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "435",
            "value": {
                "id": "435",
                "name": "Improper Interaction Between Multiple Correctly-Behaving Entities",
                "description": "An interaction error occurs when two entities have correct behavior when running independently of each other, but when they are integrated as components in a larger system or process, they introduce incorrect behaviors that may cause resultant weaknesses.",
                "extended_description": " when system or process combine multiple independent component , often produce new , emergent behavior system level .   however , interaction component be not fully account , emergent behavior can be incorrect or even insecure .",
                "child_of": [],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [
                    " interaction error",
                    " emergent fault"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "1177",
            "value": {
                "id": "1177",
                "name": "Use of Prohibited Code",
                "description": "The product uses a function, library, or third party component that has been explicitly prohibited, whether by the developer or the customer.",
                "extended_description": " developer - or customer - may wish to restrict or eliminate use function , library , or third party component number reason , include real or suspect vulnerability ; difficulty to use securely ; export control or license requirement ; obsolete or poorly - maintain code ; internal code be schedule deprecation ; etc . to reduce risk vulnerability , developer might maintain list \" ban \" function programmer must avoid use function be difficult or impossible to use securely .   issue can also make product more costly and difficult to maintain .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1321",
            "value": {
                "id": "1321",
                "name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
                "description": "The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.",
                "extended_description": " add or modify attribute object prototype , be possible to create attribute exist object , or replace critical attribute malicious one . can be problematic product depend existence or non - existence certain attribute , or use pre - define attribute object prototype ( such hasownproperty , tostring or weakness be usually exploit use special attribute object call proto ,   constructor or prototype . such attribute give access object prototype . weakness be often find code assign object attribute base user input , or merge or clone object recursively .",
                "child_of": [
                    "915"
                ],
                "con_scope": [
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " modify application data",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " attacker can override exist attribute one have incompatible type , may lead crash .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "301",
            "value": {
                "id": "301",
                "name": "Reflection Attack in an Authentication Protocol",
                "description": "Simple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.",
                "extended_description": " mutual authentication protocol require party to respond random challenge other party encrypt pre - shared key . often , however , such protocol employ same pre - shared key communication number different entity . malicious user or attacker can easily compromise protocol possess correct key employ reflection attack protocol . reflection attack capitalize mutual authentication scheme order to trick target reveal secret share and valid user . basic mutual - authentication scheme , secret be know both valid user and server ; allow to authenticate . order may verify share secret send plainly wire , utilize diffie - hellman - style scheme pick value , then request hash value key share secret . reflection attack , attacker claim to be valid user and request hash random value server . when server return value and request own value to be hash , attacker open connection server . time , hash request attacker be value server request first connection . when server return hashed value , be use first connection , authenticate attacker successfully impersonate valid user .",
                "child_of": [
                    "1390"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " primary result reflection attack be successful authentication target machine -- impersonated user .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "377",
            "value": {
                "id": "377",
                "name": "Insecure Temporary File",
                "description": "Creating and using insecure temporary files can leave application and system data vulnerable to attack.",
                "extended_description": "",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "697",
            "value": {
                "id": "697",
                "name": "Incorrect Comparison",
                "description": "The product compares two entities in a security-relevant context, but the comparison is incorrect, which may lead to resultant weaknesses.",
                "extended_description": " pillar cover several possibility : comparison check one factor comparison should consider multiple factor , but do not check at least one factor comparison check wrong factor .",
                "child_of": [],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "688",
            "value": {
                "id": "688",
                "name": "Function Call With Incorrect Variable or Reference as Argument",
                "description": "The product calls a function, procedure, or routine, but the caller specifies the wrong variable or reference as one of the arguments, which may lead to undefined behavior and resultant weaknesses.",
                "extended_description": "",
                "child_of": [
                    "628"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1240",
            "value": {
                "id": "1240",
                "name": "Use of a Cryptographic Primitive with a Risky Implementation",
                "description": "To fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation.",
                "extended_description": " cryptographic protocol and system depend cryptographic primitive ( and associate algorithm ) basic building block . common example primitive be digital signature , one - way hash function , cipher , and public key cryptography ; however , notion \" primitive \" can vary depend point view . see \" terminology note \" further explanation concept . cryptographic primitive be define to accomplish one very specific task precisely define and mathematically reliable fashion . example , suppose specific cryptographic primitive ( such encryption routine ) , consensus be primitive can only be break try out n different input ( where large value n , strong cryptography ) . encryption scheme aes-256 , would expect n to be so large to be infeasible to execute reasonable amount time . vulnerability be ever find show can break cryptographic primitive significantly less expect number attempt , then primitive be consider weaken ( or sometimes extreme case , colloquially be \" break \" ) . result , use cryptographic primitive would now be consider insecure or risky . thus , even break or weaken seemingly small cryptographic primitive have potential to render whole system vulnerable , reliance primitive . historical example can be find tls when use des . would colloquially call des cryptographic primitive transport encryption version tls . past , des be consider strong , weakness be find ; importantly , des have key length 56 bit . try n=2 ^ 56 key be consider impractical most actor . unfortunately , attack system 56 - bit key be now practical brute force , make defeat des encryption practical . be now practical adversary to read information send version tls and use information to attack system . result , can be claim use tls be weak , and system depend tls des could potentially render entire system vulnerable attack . cryptographic primitive and associate algorithm be only consider safe extensive research and review experienced cryptographer academia , industry , and government entity look possible flaw . furthermore , cryptographic primitive and associate algorithm be frequently reevaluate safety when new mathematical and attack technique be discover .   result and time , even well - know cryptographic primitive can lose compliance status discovery novel attack might either defeat algorithm or reduce robustness significantly . ad - hoc cryptographic primitive be implement , be almost certain implementation will be vulnerable attack be well understand cryptographer , result exposure sensitive information and other consequence . weakness be even more difficult to manage hardware - implement deployment cryptographic algorithm . first , hardware be not patchable as easily software , flaw discover release and production typically can not be fix recall product . secondly , hardware product be often expect to work year , which time computation power available attacker only increase . therefore , hardware implementation cryptographic primitive , be absolutely essential only strong , prove cryptographic primitive be use .",
                "child_of": [
                    "327"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " incorrect usage crypto primitive could render supposedly encrypt datum unencrypted plaintext bad case .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "598",
            "value": {
                "id": "598",
                "name": "Use of GET Request Method With Sensitive Query Strings",
                "description": "The web application uses the HTTP GET method to process a request and includes sensitive information in the query string of that request.",
                "extended_description": " query string url could be save browser 's history , pass referers other web site , store web log , or otherwise record other source .   query string contain sensitive information such session identifier , then attacker can use information to launch further attack . \n\t ",
                "child_of": [
                    "201"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " minimum , attacker can garner information query string can be utilize escalate method attack , such information internal working application or database column name . successful exploitation query string parameter vulnerability could lead attacker impersonate legitimate user , obtain proprietary datum , or simply execute action not intend application developer .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "589",
            "value": {
                "id": "589",
                "name": "Call to Non-ubiquitous API",
                "description": "The product uses an API function that does not exist on all versions of the target platform. This could cause portability problems or inconsistencies that allow denial of service or other consequences.",
                "extended_description": " function offer security feature support os be not available version os common use . likewise , function be often deprecate or make obsolete security reason and should not be use .",
                "child_of": [
                    "474"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1302",
            "value": {
                "id": "1302",
                "name": "Missing Security Identifier",
                "description": "The product implements a security identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. A transaction is sent without a security identifier.",
                "extended_description": " system - - chip ( soc ) , various integrate circuit and hardware engine generate transaction such access ( read / write ) asset or perform certain action ( e.g. , reset , fetch , compute ) . typical transaction be comprise source identity ( to identify originator transaction ) and destination identity ( to route transaction respective entity ) addition much more information message . sometimes transaction be qualified security identifier .   security identifier help destination agent decide set allow or disallowed action . common weakness can exist such transaction scheme be source agent fail to include necessary , security identifier transaction .   miss security identifier , destination agent might drop message , thus result denial - - service ( dos ) , or get confuse attempt to execute give action , which confusion could result privilege escalation or gain unintended access .",
                "child_of": [
                    "1294"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " dos : crash , exit , or restart",
                    " bypass protection mechanism",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1265",
            "value": {
                "id": "1265",
                "name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
                "description": "During execution of non-reentrant code, the product performs a call that unintentionally produces a nested invocation of the non-reentrant code.",
                "extended_description": " complex product , single function call may lead many different possible code path , may involve deeply nest call . may be difficult to foresee possible code path could emanate give function call . system , external actor can manipulate input system and thereby achieve wide range possible control flow . be frequently concern product execute script untrusted source . example such product be web browser and pdf reader . weakness be present when one possible code path result function call alter program state original caller assume to be unchanged call .",
                "child_of": [
                    "691"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": " exploitation weakness can leave application unexpected state and cause variable to be reassign first invocation have complete . may eventually result memory corruption or unexpected code execution .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "278",
            "value": {
                "id": "278",
                "name": "Insecure Preserved Inherited Permissions",
                "description": "A product inherits a set of insecure permissions for an object, e.g. when copying from an archive file, without user awareness or involvement.",
                "extended_description": "",
                "child_of": [
                    "732"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "92",
            "value": {
                "id": "92",
                "name": "DEPRECATED: Improper Sanitization of Custom Special Characters",
                "description": "This entry has been deprecated. It originally came from PLOVER, which sometimes defined \"other\" and \"miscellaneous\" categories in order to satisfy exhaustiveness requirements for taxonomies. Within the context of CWE, the use of a more abstract entry is preferred in mapping situations.CWE-75is a more appropriate mapping.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "614",
            "value": {
                "id": "614",
                "name": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute",
                "description": "The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.",
                "extended_description": "",
                "child_of": [
                    "319"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "57",
            "value": {
                "id": "57",
                "name": "Path Equivalence: 'fakedir/../realdir/filename'",
                "description": "The product contains protection mechanisms to restrict access to 'realdir/filename', but it constructs pathnames using external input in the form of 'fakedir/../realdir/filename' that are not handled by those mechanisms. This allows attackers to perform unauthorized actions against the targeted file.",
                "extended_description": "",
                "child_of": [
                    "41"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "96",
            "value": {
                "id": "96",
                "name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
                "extended_description": "",
                "child_of": [
                    "94"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control",
                    " access control",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " other",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " read files or directory",
                    " read application data",
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " execute unauthorized code or command",
                    " hide activity"
                ],
                "con_note": " often action perform inject control code be unlogged .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "181",
            "value": {
                "id": "181",
                "name": "Incorrect Behavior Order: Validate Before Filter",
                "description": "The product validates data before it has been filtered, which prevents the product from detecting data that becomes invalid after the filtering step.",
                "extended_description": " can be use attacker to bypass validation and launch attack expose weakness would otherwise be prevent , such injection .",
                "child_of": [
                    "179"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [
                    " validate - - cleanse"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "379",
            "value": {
                "id": "379",
                "name": "Creation of Temporary File in Directory with Insecure Permissions",
                "description": "The product creates a temporary file in a directory whose permissions allow unintended actors to determine the file's existence or otherwise access that file.",
                "extended_description": " operating system , fact temporary file exist may be apparent user sufficient privilege to access directory . file be visible , application be use temporary file could be know . have access to list process system , attacker have gain information user be do time . correlate application user be run , attacker could potentially discover user 's action be . , high level security could be breach .",
                "child_of": [
                    "377"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " file be visible and application be use temp file could be know , attacker have gain information user be do time .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1314",
            "value": {
                "id": "1314",
                "name": "Missing Write Protection for Parametric Data Values",
                "description": "The device does not write-protect the parametric data values for sensors that scale the sensor value, allowing untrusted software to manipulate the apparent result and potentially damage hardware or cause operational failure.",
                "extended_description": " various sensor be use hardware to detect device operate outside design limit . threshold limit value be set hardware fuse or trust software such bios . limit may be relate thermal , power , voltage , current , and frequency . hardware mechanism may be use to protect alteration threshold limit value untrusted software . limit value be generally program standard unit type value be read . however , hardware - sensor block may report setting different unit depend sensor design and operation . raw sensor output value be convert desire unit use scale conversion base parametric datum program sensor . final converted value be then compare previously program limit . limit value be usually protect , sensor parametric datum value may not be . change parametric datum , safe operational limit may be bypass .",
                "child_of": [
                    "862"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " quality degradation",
                    " dos : resource consumption ( other )"
                ],
                "con_note": " sensor value manipulation , particularly thermal or power , may allow physical damage to occur or disable device false fault shutdown cause denial - - service .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "78",
            "value": {
                "id": "78",
                "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                "description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
                "extended_description": " could allow attacker to execute unexpected , dangerous command directly operating system . weakness can lead vulnerability environment attacker do not have direct access operating system , such web application . alternately , weakness occur privileged program , could allow attacker to specify command normally would not be accessible , or to call alternate command privilege attacker do not have . problem be exacerbate compromise process do not follow principle least privilege , attacker - control command may run special system privilege increase amount damage . be at least two subtype os command injection : application intend to execute single , fix program be own control . intend to use externally - supply input argument program . example , program might use system(\"nslookup [ hostname ] \" ) to run nslookup and allow user to supply hostname , be use argument . attacker can not prevent nslookup execute . however , program do not remove command separator hostname argument , attacker could place separator argument , allow to execute own program nslookup have finish execute . application accept input use to fully select which program to run , as well command to use . application simply redirect entire command operating system . example , program might use \" exec([command ] ) \" to execute [ command ] be supply user . command be attacker control , then attacker can execute arbitrary command or program . command be be execute use function exec ( ) and createprocess ( ) , attacker might not be able to combine multiple command together same line . weakness standpoint , variant represent distinct programmer error . first variant , programmer clearly intend input untrusted party will be part argument command to be execute . second variant , programmer do not intend command to be accessible untrusted party , but programmer probably have not account alternate way malicious attacker can provide input .",
                "child_of": [
                    "77"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " dos : crash , exit , or restart",
                    " read files or directory",
                    " modify files or directory",
                    " read application data",
                    " modify application data",
                    " hide activity"
                ],
                "con_note": " attacker could execute unauthorized command , could then be use to disable product , or read and modify datum attacker do not have permission to access directly . target application be directly execute command instead attacker , malicious activity may appear to come application or application 's owner .",
                "alt_term": [
                    " shell injection",
                    " shell metacharacter"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "827",
            "value": {
                "id": "827",
                "name": "Improper Control of Document Type Definition",
                "description": "The product does not restrict a reference to a Document Type Definition (DTD) to the intended control sphere. This might allow attackers to reference arbitrary DTDs, possibly causing the product to expose files, consume excessive system resources, or execute arbitrary http requests on behalf of the attacker.",
                "extended_description": " dtd be process , might try to read or include file machine perform parsing . attacker be able to control dtd , then attacker might be able to specify sensitive resource or request or provide malicious content . example , soap specification prohibit soap message contain dtd .",
                "child_of": [
                    "706",
                    "829"
                ],
                "con_scope": [
                    " confidentiality",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " read files or directory",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity"
                ],
                "con_note": " dtd may include arbitrary http request server may execute . could lead other attack leverage server 's trust relationship other entity .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "402",
            "value": {
                "id": "402",
                "name": "Transmission of Private Resources into a New Sphere ('Resource Leak')",
                "description": "The product makes resources available to untrusted parties when those resources are only intended to be accessed by the product.",
                "extended_description": "",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [
                    " resource leak"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "107",
            "value": {
                "id": "107",
                "name": "Struts: Unused Validation Form",
                "description": "An unused validation form indicates that validation logic is not up-to-date.",
                "extended_description": " be easy developer to forget to update validation logic when remove or rename action form mapping . one indication validation logic be not be properly maintain be presence unused validation form .",
                "child_of": [
                    "1164"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "83",
            "value": {
                "id": "83",
                "name": "Improper Neutralization of Script in Attributes in a Web Page",
                "description": "The product does not neutralize or incorrectly neutralizes \"javascript:\" or other URIs from dangerous attributes within tags, such as onmouseover, onload, onerror, or style.",
                "extended_description": "",
                "child_of": [
                    "79"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " read application data",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1234",
            "value": {
                "id": "1234",
                "name": "Hardware Internal or Debug Modes Allow Override of Locks",
                "description": "System configuration protection may be bypassed during debug mode.",
                "extended_description": " device configuration control be commonly program device power reset trust firmware or software module ( e.g. , bios / bootloader ) and then lock further modification . be commonly implement use trust lock bit , when set , disable write protect set register or address region . lock protection be intend to prevent modification certain system configuration ( e.g. , memory / memory protection unit configuration ) . debug feature support hardware or internal mode / system state be support hardware design , modification lock protection may be allow allow access and modification configuration information .",
                "child_of": [
                    "667"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": " bypass lock bit allow access and modification system configuration even when lock bit be set .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "236",
            "value": {
                "id": "236",
                "name": "Improper Handling of Undefined Parameters",
                "description": "The product does not handle or incorrectly handles when a particular parameter, field, or argument name is not defined or supported by the product.",
                "extended_description": "",
                "child_of": [
                    "233"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "130",
            "value": {
                "id": "130",
                "name": "Improper Handling of Length Parameter Inconsistency",
                "description": "The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.",
                "extended_description": " attacker can manipulate length parameter associate input such be inconsistent actual length input , can be leverage to cause target application to behave unexpected , and possibly , malicious way . one possible motive do so be to pass in arbitrarily large input application . possible motivation be modification application state include invalid datum subsequent property application . such weakness commonly lead attack such buffer overflow and execution arbitrary code .",
                "child_of": [
                    "240"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read memory",
                    " modify memory",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [
                    " length manipulation",
                    " length tampering"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "673",
            "value": {
                "id": "673",
                "name": "External Influence of Sphere Definition",
                "description": "The product does not prevent the definition of control spheres from external actors.",
                "extended_description": " typically , product define control sphere code , or configuration product 's administrator . case , external party can change definition control sphere . be typically resultant weakness .",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1037",
            "value": {
                "id": "1037",
                "name": "Processor Optimization Removal or Modification of Security-critical Code",
                "description": "The developer builds a security-critical protection mechanism into the software, but the processor optimizes the execution of the program such that the mechanism is removed or modified.",
                "extended_description": "",
                "child_of": [
                    "1038"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": " successful exploitation weakness will change order application 's execution and will likely be use to bypass specific protection mechanism . bypass can be exploit far to potentially read datum should otherwise be unaccessible .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "757",
            "value": {
                "id": "757",
                "name": "Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade')",
                "description": "A protocol or its implementation supports interaction between multiple actors and allows those actors to negotiate which algorithm should be used as a protection mechanism such as encryption or authentication, but it does not select the strongest algorithm that is available to both parties.",
                "extended_description": " when security mechanism can be force to downgrade to use less secure algorithm , can make easy attacker to compromise product exploit weak algorithm . victim might not be aware less secure algorithm be be use . example , attacker can force communication channel to use cleartext instead strongly - encrypt datum , then attacker could read channel sniff , instead go extra effort try to decrypt datum use brute force technique .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "22",
            "value": {
                "id": "22",
                "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
                "description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
                "extended_description": " many file operation be intend to take place restricted directory . use special element such \" .. \" and \" / \" separator , attacker can escape outside restricted location access file or directory be elsewhere system . one most common special element be \" .. / \" sequence , most modern operating system be interpret parent directory current location . be refer relative path traversal . path traversal also cover use absolute pathname such \" /usr / local / bin \" , may also be useful access unexpected file . be refer absolute path traversal . many programming language , injection null byte ( 0 or nul ) may allow attacker to truncate generate filename to widen scope attack . example , product may add \" .txt \" pathname , thus limit attacker text file , but null injection may effectively remove restriction .",
                "child_of": [
                    "706",
                    "668"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " modify files or directory",
                    " read files or directory",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " attacker may be able to overwrite , delete , or corrupt unexpected critical file such program , library , or important datum . may prevent product work at all and case protection mechanism such authentication , have potential to lockout user product .",
                "alt_term": [
                    " directory traversal",
                    " path traversal"
                ],
                "alt_desc": [
                    " \" path traversal \" be prefer \" directory traversal , \" but term be attack - focused ."
                ]
            }
        },
        {
            "name": "449",
            "value": {
                "id": "449",
                "name": "The UI Performs the Wrong Action",
                "description": "The UI performs the wrong action with respect to the user's request.",
                "extended_description": "",
                "child_of": [
                    "446"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "412",
            "value": {
                "id": "412",
                "name": "Unrestricted Externally Accessible Lock",
                "description": "The product properly checks for the existence of a lock, but the lock can be externally controlled or influenced by an actor that is outside of the intended sphere of control.",
                "extended_description": " prevent product act associate resource or perform other behavior be control presence lock . relevant lock might include exclusive lock or mutex , or modify share resource be treat lock . lock can be hold indefinite period time , then denial service could be permanent .",
                "child_of": [
                    "667"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( other )"
                ],
                "con_note": " when attacker can control lock , program may wait indefinitely attacker release lock , cause denial service other user program . be especially problematic be block operation lock .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1022",
            "value": {
                "id": "1022",
                "name": "Use of Web Link to Untrusted Target with window.opener Access",
                "description": "The web application produces links to untrusted external sites outside of its sphere of control, but it does not properly prevent the external site from modifying security-critical properties of the window.opener object, such as the location property.",
                "extended_description": " when user click link external site ( \" target \" ) , target=\"_blank \" attribute cause target site 's content to be open new window or tab , run same process original page . window.opener object record information original page offer link .   attacker can run script target page , then could read or modify certain property window.opener object , include location property - even original and target site be not same origin .   attacker can modify location property to automatically redirect user malicious site , e.g. part phishe attack . redirect happen original window / tab - be not necessarily visible , browser be focus display new target page - user might not notice suspicious redirection .",
                "child_of": [
                    "266"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " alter execution logic"
                ],
                "con_note": " user may be redirect untrusted page contain undesired content or malicious script code .",
                "alt_term": [
                    " tabnabbe"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "1042",
            "value": {
                "id": "1042",
                "name": "Static Member Data Element outside of a Singleton Class Element",
                "description": "The code contains a member element that is declared as static (but not final), in which its parent class element is not a singleton class - that is, a class element that can be used only once in the 'to' association of a Create action.",
                "extended_description": " issue can make product perform more slowly .   relevant code be reachable attacker , then performance problem might introduce vulnerability .",
                "child_of": [
                    "1176"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "330",
            "value": {
                "id": "330",
                "name": "Use of Insufficiently Random Values",
                "description": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.",
                "extended_description": " when product generate predictable value context require unpredictability , may be possible attacker to guess next value will be generate , and use guess to impersonate user or access sensitive information .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " confidentiality",
                    " other",
                    " access control",
                    " other",
                    " access control"
                ],
                "con_impacts": [
                    " other",
                    " bypass protection mechanism",
                    " other",
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": " when authorization or authentication mechanism rely random value to restrict access restricted functionality , such session id or seed generate cryptographic key , then attacker may access restricted functionality guess id or key .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "5",
            "value": {
                "id": "5",
                "name": "J2EE Misconfiguration: Data Transmission Without Encryption",
                "description": "Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.",
                "extended_description": "",
                "child_of": [
                    "319"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1077",
            "value": {
                "id": "1077",
                "name": "Floating Point Comparison with Incorrect Operator",
                "description": "The code performs a comparison such as an equality test between two float (floating point) values, but it uses comparison operators that do not account for the possibility of loss of precision.",
                "extended_description": " numeric calculation use float point value \n\t    can generate imprecise result round error . \n\t    result , two different calculation might generate \n\t    number be mathematically equal , but have slightly \n\t    different bit representation do not translate \n\t    same mathematically - equal value .   result , equality \n\t    test or other comparison might produce unexpected \n\t    result . issue can prevent product run reliably .   relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "697"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "691",
            "value": {
                "id": "691",
                "name": "Insufficient Control Flow Management",
                "description": "The code does not sufficiently manage its control flow during execution, creating conditions in which the control flow can be modified in unexpected ways.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1310",
            "value": {
                "id": "1310",
                "name": "Missing Ability to Patch ROM Code",
                "description": "Missing an ability to patch ROM code may leave a System or System-on-Chip (SoC) in a vulnerable state.",
                "extended_description": " system or system - - chip ( soc ) implement boot process utilize security mechanism such root - - trust ( rot ) typically start execute code read - only - memory ( rom ) component . code rom be immutable , hence security vulnerability discover rom code can never be fix system be already use . common weakness be rom do not have ability to patch security vulnerability be uncover system gets ship .   leave system vulnerable state where adversary can compromise soc.",
                "child_of": [
                    "1329"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context",
                    " reduce maintainability"
                ],
                "con_note": " when system be unable to be patch , can be leave vulnerable state .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "170",
            "value": {
                "id": "170",
                "name": "Improper Null Termination",
                "description": "The product does not terminate or incorrectly terminates a string or array with a null character or equivalent terminator.",
                "extended_description": " null termination error frequently occur two different way . - - one error could cause null to be write bound , lead overflow . or , program could use strncpy ( ) function call incorrectly , prevent null terminator be add at all . other scenario be possible .",
                "child_of": [
                    "707"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " confidentiality",
                    " integrity",
                    " availability",
                    " integrity",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " read memory",
                    " execute unauthorized code or command",
                    " dos : crash , exit , or restart",
                    " read memory",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " alter execution logic",
                    " execute unauthorized code or command"
                ],
                "con_note": " should null character corrupt process flow , or affect flag control access , may lead logical error allow execution arbitrary code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "212",
            "value": {
                "id": "212",
                "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
                "description": "The product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.",
                "extended_description": " resource may contain sensitive datum include document , packet , message , database , etc . datum may be useful individual user or small set user share resource , may need to be remove resource can be share outside trust group . process removal be sometimes call cleansing or scrubbing . example , product edit document might not remove sensitive datum such reviewer comment or local pathname where document be store . or , proxy might not remove internal ip address header make outgoing request internet site .",
                "child_of": [
                    "669"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read files or directory",
                    " read application data"
                ],
                "con_note": " sensitive datum may be expose unauthorized actor control sphere . may have wide range secondary consequence will depend data be expose . one possibility be exposure system datum allow attacker to craft specific , more effective attack .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "334",
            "value": {
                "id": "334",
                "name": "Small Space of Random Values",
                "description": "The number of possible random values is smaller than needed by the product, making it more susceptible to brute force attacks.",
                "extended_description": "",
                "child_of": [
                    "330"
                ],
                "con_scope": [
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " other"
                ],
                "con_note": " attacker could easily guess value use . could lead unauthorized access system seed be use authentication and authorization .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1173",
            "value": {
                "id": "1173",
                "name": "Improper Use of Validation Framework",
                "description": "The product does not use, or incorrectly uses, an input validation framework that is provided by the source language or an independent library.",
                "extended_description": " many modern code language provide developer input validation framework to make task input validation easier and less error - prone . framework will automatically check input specify criterion and direct execution error handler when invalid input be receive . improper use ( i.e. , incorrect implementation or miss altogether ) framework be not directly exploitable , but can lead exploitable condition proper input validation be not perform later product . not use provide input validation framework can also hurt maintainability code future developer may not recognize downstream input validation be use place validation framework .",
                "child_of": [
                    "20"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": " unchecked input lead cross - site scripting , process control , and sql injection vulnerability , other .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "269",
            "value": {
                "id": "269",
                "name": "Improper Privilege Management",
                "description": "The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",
                "extended_description": "",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "481",
            "value": {
                "id": "481",
                "name": "Assigning instead of Comparing",
                "description": "The code uses an operator for assignment when the intention was to perform a comparison.",
                "extended_description": " many language compare statement be very close appearance assignment statement and be often confused . bug be generally result typo and usually cause obvious problem program execution . comparison be statement , statement will usually evaluate value right - hand side predicate .",
                "child_of": [
                    "480"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "499",
            "value": {
                "id": "499",
                "name": "Serializable Class Containing Sensitive Data",
                "description": "The code contains a class with sensitive data, but the class does not explicitly deny serialization. The data can be accessed by serializing the class through another class.",
                "extended_description": " serializable class be effectively open class datum can not be hide . class do not explicitly deny serialization can be serialize other class , can then turn use datum store .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " attacker can write out class byte stream , then extract important datum .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "134",
            "value": {
                "id": "134",
                "name": "Use of Externally-Controlled Format String",
                "description": "The product uses a function that accepts a format string as an argument, but the format string originates from an external source.",
                "extended_description": " when attacker can modify externally - control format string , can lead to buffer overflow , denial service , or datum representation problem . should be note circumstance , such internationalization , set format string be externally control design . source format string be trust ( e.g. only contain library file be only modifiable system administrator ) , then external control might not pose vulnerability .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " read memory",
                    " modify memory",
                    " execute unauthorized code or command"
                ],
                "con_note": " format string problem can result execution arbitrary code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "520",
            "value": {
                "id": "520",
                "name": ".NET Misconfiguration: Use of Impersonation",
                "description": "Allowing a .NET application to run at potentially escalated levels of access to the underlying operating and file systems can be dangerous and result in various forms of attacks.",
                "extended_description": " .net server application can optionally execute use identity user authenticate client . intention functionality be to bypass authentication and access control check .net application code . authentication be do underlie web server ( microsoft internet information service iis ) , pass authenticated token , or unauthenticate anonymous token , .net application . use token to impersonate client , application then rely setting ntfs directory and file to control access . impersonation enable application , server run .net application , to execute code and access resource context authenticated and authorized user .",
                "child_of": [
                    "266"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1079",
            "value": {
                "id": "1079",
                "name": "Parent Class without Virtual Destructor Method",
                "description": "A parent class contains one or more child classes, but the parent class does not have a virtual destructor method.",
                "extended_description": " issue can prevent product run reliably due undefined or unexpected behavior .   relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "1076"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "640",
            "value": {
                "id": "640",
                "name": "Weak Password Recovery Mechanism for Forgotten Password",
                "description": "The product contains a mechanism for users to recover or change their passwords without knowing the original password, but the mechanism is weak.",
                "extended_description": " be common application to have mechanism provide mean user to gain access account event forget password . very often password recovery mechanism be weak , have effect make more likely would be possible person other legitimate system user to gain access user 's account . weak password recovery scheme completely undermine strong password authentication scheme . weakness may be security question be too easy to guess or find answer ( e.g. question be too common , or answer can be find use social medium ) . or might be implementation weakness password recovery mechanism code may instance trick system e - mail new password e - mail account other user . might be throttling do rate password reset legitimate user can be deny service attacker attacker try to recover password rapid succession . system may send original password user rather generate new temporary password . summary , password recovery functionality , not carefully design and implement can often become system 's weak link can be misuse way would allow attacker to gain unauthorized access system .",
                "child_of": [
                    "1390"
                ],
                "con_scope": [
                    " access control",
                    " availability",
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " dos : resource consumption ( other )",
                    " other"
                ],
                "con_note": " system 's security functionality be turn system attacker .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "281",
            "value": {
                "id": "281",
                "name": "Improper Preservation of Permissions",
                "description": "The product does not preserve permissions or incorrectly preserves permissions when copying, restoring, or sharing objects, which can cause them to have less restrictive permissions than intended.",
                "extended_description": "",
                "child_of": [
                    "732"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "436",
            "value": {
                "id": "436",
                "name": "Interpretation Conflict",
                "description": "Product A handles inputs or steps differently than Product B, which causes A to perform incorrect actions based on its perception of B's state.",
                "extended_description": " be generally find proxy , firewall , anti - virus software , and other intermediary device monitor , allow , deny , or modify traffic base how client or server be expect to behave .",
                "child_of": [
                    "435"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " unexpected state",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "48",
            "value": {
                "id": "48",
                "name": "Path Equivalence: 'file name' (Internal Whitespace)",
                "description": "The product accepts path input in the form of internal space ('file(SPACE)name') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "41"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "33",
            "value": {
                "id": "33",
                "name": "Path Traversal: '....' (Multiple Dot)",
                "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....' (multiple dot) sequences that can resolve to a location that is outside of that directory.",
                "extended_description": " allow attacker to traverse file system to access file or directory be restricted directory . ' .... ' manipulation be useful bypass path traversal protection scheme . windows system , be equivalent \" .. \\ .. \\ .. \" and might bypass check assume only two dot be valid . incomplete filtering , such removal \" ./ \" sequence , can ultimately produce valid \" .. \" sequence collapse unsafe value ( cwe-182 ) .",
                "child_of": [
                    "23"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1119",
            "value": {
                "id": "1119",
                "name": "Excessive Use of Unconditional Branching",
                "description": "The code uses too many unconditional branches (such as \"goto\").",
                "extended_description": " issue make more difficult to understand and/or maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1120"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "331",
            "value": {
                "id": "331",
                "name": "Insufficient Entropy",
                "description": "The product uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others.",
                "extended_description": "",
                "child_of": [
                    "330"
                ],
                "con_scope": [
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " other"
                ],
                "con_note": " attacker could guess random number generate and could gain unauthorized access system random number be use authentication and authorization .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1341",
            "value": {
                "id": "1341",
                "name": "Multiple Releases of Same Resource or Handle",
                "description": "The product attempts to close or release a resource or handle more than once, without any successful open between the close operations.",
                "extended_description": " code typically require \" open \" handle or reference resource such memory , file , device , socket connection , service , etc . when code be finish use resource , be typically expect to \" close \" or \" release \" resource , indicate environment ( such os ) resource can be re - assign or reuse unrelated process or actor - or case , same process . api function or other abstraction be often use to perform release , such free ( ) or delete ( ) c / c++ , or file - handle close ( ) operation be use many language . unfortunately , implementation or design such api might expect developer to be responsible ensure such api be only call once release resource . developer attempt to release same resource / handle more once , then api 's expectation be not meet , result undefined and/or insecure behavior . could lead consequence such memory corruption , datum corruption , execution path corruption , or other consequence . note implementation most ( not ) resource reservation allocation involve unique identifier / pointer / symbolic reference , then identifier be reuse , check identifier resource closure may result false state openness and closing wrong resource . reason , reuse identifier be discourage .",
                "child_of": [
                    "675"
                ],
                "con_scope": [
                    " availability",
                    " integrity"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "915",
            "value": {
                "id": "915",
                "name": "Improperly Controlled Modification of Dynamically-Determined Object Attributes",
                "description": "The product receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified.",
                "extended_description": " object contain attribute be only intend internal use , then unexpected modification could lead vulnerability . weakness be sometimes know language - specific mechanism make possible , such mass assignment , autobinding , or object injection .",
                "child_of": [
                    "913"
                ],
                "con_scope": [
                    " integrity",
                    " integrity",
                    " other",
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data",
                    " execute unauthorized code or command",
                    " varie context",
                    " alter execution logic"
                ],
                "con_note": " attacker could modify sensitive datum or program variable .",
                "alt_term": [
                    " mass assignment",
                    " autobinde",
                    " php object injection"
                ],
                "alt_desc": [
                    " \" mass assignment \" be name feature ruby rail allow simultaneous modification multiple object attribute .",
                    " \" autobinding \" term be use framework such spring mvc and asp.net mvc .",
                    " php application researcher use term attack unsafe use unserialize ( ) function , but be also use cwe-502 ."
                ]
            }
        },
        {
            "name": "1109",
            "value": {
                "id": "1109",
                "name": "Use of Same Variable for Multiple Purposes",
                "description": "The code contains a callable, block, or other code element in which the same variable is used to control more than one unique task or store more than one instance of data.",
                "extended_description": " use same variable multiple purpose can make more difficult person to read or understand code , potentially hide other quality issue . issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1078"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "605",
            "value": {
                "id": "605",
                "name": "Multiple Binds to the Same Port",
                "description": "When multiple sockets are allowed to bind to the same port, other services on that port may be stolen or spoofed.",
                "extended_description": " most system , combination set so_reuseaddr socket option , and call to bind ( ) allow process to bind port to previous process have bind inaddr_any . allow user to bind specific address server bind to inaddr_any unprivileged port , and steal udp packet / tcp connection .",
                "child_of": [
                    "675",
                    "666"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " packet variety network service may be steal or service spoof .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "772",
            "value": {
                "id": "772",
                "name": "Missing Release of Resource after Effective Lifetime",
                "description": "The product does not release a resource after its effective lifetime has ended, i.e., after the resource is no longer needed.",
                "extended_description": " when resource be not release use , can allow attacker to cause denial service cause allocation resource trigger release . frequently - affect resource include memory , cpu , disk space , power or battery , etc .",
                "child_of": [
                    "404"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( other )"
                ],
                "con_note": " attacker can influence allocation resource be not properly release could deplete available resource pool and prevent other process access same type resource .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "140",
            "value": {
                "id": "140",
                "name": "Improper Neutralization of Delimiters",
                "description": "The product does not neutralize or incorrectly neutralizes delimiters.",
                "extended_description": "",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1256",
            "value": {
                "id": "1256",
                "name": "Improper Restriction of Software Interfaces to Hardware Features",
                "description": "The product provides software-controllable device functionality for capabilities such as power and clock management, but it does not properly limit functionality that can lead to modification of hardware memory or register bits, or the ability to observe physical side channels.",
                "extended_description": " be frequently assume physical attack \n               such fault injection and side - channel analysis \n               require attacker to have physical access \n               target device .   assumption may be false \n               device have improperly secure power management feature , \n               or similar feature .   mobile device , minimize \n               power consumption be critical , but device run \n               wide variety application different performance \n               requirement . software - controllable mechanism to \n               dynamically scale device voltage and frequency and \n               monitor power consumption be common feature today 's \n               chipset , but also enable attacker to mount fault \n               injection and side - channel attack have \n               physical access device . fault injection attack involve strategic \n               manipulation bit device to achieve desire \n               effect such skip authentication step , \n               elevate privilege , or alter output \n               cryptographic operation .   manipulation device \n               clock and voltage supply be well - know technique \n               inject fault and be cheap to implement physical \n               device access .   poorly protect power management \n               feature allow attack to be perform \n               software .   other feature , such ability to write \n               repeatedly to dram rapid rate unprivileged \n               software , can result bit flip other memory \n               location ( rowhammer , [ ref-1083]).side channel analysis require gather \n\t\t\t   measurement trace physical quantity such power \n\t\t\t   consumption .   modern processor often include power \n\t\t\t   metering capability hardware ( e.g. , \n\t\t\t   intel rapl ) not adequately protect enable \n\t\t\t   attacker to gather measurement necessary \n\t\t\t   perform side - channel attack software .",
                "child_of": [
                    "285"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify memory",
                    " modify application data",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1115",
            "value": {
                "id": "1115",
                "name": "Source Code Element without Standard Prologue",
                "description": "The source code contains elements such as source files that do not consistently provide a prologue or header that has been standardized for the project.",
                "extended_description": " lack prologue can make more difficult to accurately and quickly understand associated code . standard prologue or header may contain information such module name , version number , author , date , purpose , function , assumption , limitation , accuracy consideration , etc . issue make more difficult to maintain product insufficient analyzability , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1078"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "863",
            "value": {
                "id": "863",
                "name": "Incorrect Authorization",
                "description": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.",
                "extended_description": " assume user give identity , authorization be process determine user can access give resource , base user 's privilege and permission or other access - control specification apply resource . when access control check be incorrectly apply , user be able to access datum or perform action should not be allow to perform . can lead wide range problem , include information exposure , denial service , and arbitrary code execution .",
                "child_of": [
                    "285"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " read files or directory",
                    " modify application data",
                    " modify files or directory",
                    " gain privileges or assume identity",
                    " bypass protection mechanism"
                ],
                "con_note": " attacker could gain privilege modify or read critical datum directly , or access privileged functionality .",
                "alt_term": [
                    " authz"
                ],
                "alt_desc": [
                    " \" authz \" be typically use abbreviation \" authorization \" web application security community . be distinct \" authn \" ( or , sometimes , \" authc \" ) be abbreviation \" authentication . \" use \" auth \" abbreviation be discourage , could be use authentication or authorization ."
                ]
            }
        },
        {
            "name": "270",
            "value": {
                "id": "270",
                "name": "Privilege Context Switching Error",
                "description": "The product does not properly manage privileges while it is switching between different contexts that have different privileges or spheres of control.",
                "extended_description": "",
                "child_of": [
                    "269"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " user can assume identity user separate privilege context . will give user unauthorized access may allow to acquire access information other user .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "51",
            "value": {
                "id": "51",
                "name": "Path Equivalence: '/multiple//internal/slash'",
                "description": "The product accepts path input in the form of multiple internal slash ('/multiple//internal/slash/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "41"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "563",
            "value": {
                "id": "563",
                "name": "Assignment to Variable without Use",
                "description": "The variable's value is assigned but never used, making it a dead store.",
                "extended_description": " assignment , variable be either assign value or go scope . be likely variable be simply vestigial , but be also possible unused variable point out bug .",
                "child_of": [
                    "1164"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation",
                    " varie context"
                ],
                "con_note": " weakness could be indication bug program or deprecate variable be not remove and be indication poor quality . could lead further bug and introduction weakness .",
                "alt_term": [
                    " unused variable"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "509",
            "value": {
                "id": "509",
                "name": "Replicating Malicious Code (Virus or Worm)",
                "description": "Replicating malicious code, including viruses and worms, will attempt to attack other systems once it has successfully compromised the target system or the product.",
                "extended_description": "",
                "child_of": [
                    "507"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "916",
            "value": {
                "id": "916",
                "name": "Use of Password Hash With Insufficient Computational Effort",
                "description": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
                "extended_description": " many password storage mechanism compute hash and store hash , instead store original password plaintext . design , authentication involve accept incoming password , compute hash , and compare stored hash . many hash algorithm be design to execute quickly minimal overhead , even cryptographic hash . however , efficiency be problem password storage , can reduce attacker 's workload brute - force password crack . attacker can obtain hash other method ( such sql injection database store hash ) , then attacker can store hash offline and use various technique to crack password compute hash efficiently . build - in workload , modern attack can compute large number hash , or even exhaust entire space possible password , very short amount time , use massively - parallel computing ( such cloud computing ) and gpu , asic , or fpga hardware . such scenario , efficient hash algorithm help attacker . be several property hash scheme be relevant strength offline , massively - parallel attack : amount cpu time require to compute hash ( \" stretching\")the amount memory require to compute hash ( \" memory - hard \" operations)include random value , password , input hash computation ( \" salting\")given hash , be known way determine input ( e.g. , password ) produce hash value , other guess possible input ( \" one - way \" hashing)relative number possible hash can be generate scheme , be low likelihood produce same hash multiple different input ( \" collision resistance\")note security requirement product may vary depend environment and value password . different scheme might not provide property , yet may still provide sufficient security environment . conversely , solution might be very strong preserve one property , still be very weak attack property , or might not be able to significantly reduce efficiency massively - parallel attack .",
                "child_of": [
                    "328"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": " attacker can gain access hash , then lack sufficient computational effort will make easy to conduct brute force attack use technique such rainbow table , or specialized hardware such gpu , can be much fast general - purpose cpu compute hash .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1107",
            "value": {
                "id": "1107",
                "name": "Insufficient Isolation of Symbolic Constant Definitions",
                "description": "The source code uses symbolic constants, but it does not sufficiently place the definitions of these constants into a more centralized or isolated location.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1078"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "386",
            "value": {
                "id": "386",
                "name": "Symbolic Name not Mapping to Correct Object",
                "description": "A constant symbolic reference to an object is used, even though the reference can resolve to a different object over time.",
                "extended_description": "",
                "child_of": [
                    "706"
                ],
                "con_scope": [
                    " access control",
                    " integrity",
                    " confidentiality",
                    " other",
                    " integrity",
                    " other",
                    " non - repudiation",
                    " non - repudiation",
                    " integrity"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " modify application data",
                    " modify files or directory",
                    " read application data",
                    " read files or directory",
                    " other",
                    " modify application data",
                    " other",
                    " hide activity",
                    " modify files or directory"
                ],
                "con_note": " case may be possible to delete file malicious user might not otherwise have access -- such log file .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "7",
            "value": {
                "id": "7",
                "name": "J2EE Misconfiguration: Missing Custom Error Page",
                "description": "The default error page of a web application should not display sensitive information about the product.",
                "extended_description": " web application must define default error page 4xx error ( e.g. 404 ) , 5xx ( e.g. 500 ) error and catch java.lang . throwable exception to prevent attacker mining information application container 's build - in error response . when attacker explore web site look vulnerability , amount information site provide be crucial eventual success or failure attempt attack .",
                "child_of": [
                    "756"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " stack trace might show attacker malformed sql query string , type database be use , and version application container . information enable attacker to target know vulnerability component .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "271",
            "value": {
                "id": "271",
                "name": "Privilege Dropping/ Lowering Errors",
                "description": "The product does not drop privileges before passing control of a resource to an actor that does not have those privileges.",
                "extended_description": " context , system execute elevated permission will hand off process / file / etc . process or user . privilege entity be not reduce , then elevate privilege be spread system and possibly attacker .",
                "child_of": [
                    "269"
                ],
                "con_scope": [
                    " access control",
                    " access control",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " gain privileges or assume identity",
                    " hide activity"
                ],
                "con_note": " privilege be not drop , case system may record action user be be impersonate rather impersonator .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "211",
            "value": {
                "id": "211",
                "name": "Externally-Generated Error Message Containing Sensitive Information",
                "description": "The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.",
                "extended_description": "",
                "child_of": [
                    "209"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "28",
            "value": {
                "id": "28",
                "name": "Path Traversal: '..\\filedir'",
                "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"..\\\" sequences that can resolve to a location that is outside of that directory.",
                "extended_description": " allow attacker to traverse file system to access file or directory be restricted directory . ' .. \\ ' manipulation be canonical manipulation operating system use \" \\ \" directory separator , such windows . however , be also useful bypass path traversal protection scheme only assume \" / \" separator be valid .",
                "child_of": [
                    "23"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1266",
            "value": {
                "id": "1266",
                "name": "Improper Scrubbing of Sensitive Data from Decommissioned Device",
                "description": "The product does not properly provide a capability for the product administrator to remove sensitive data at the time the product is decommissioned. A scrubbing capability could be missing, insufficient, or incorrect.",
                "extended_description": " when product be decommission - i.e. , take service - good practice or regulatory requirement may require administrator to remove or overwrite sensitive datum first , i.e. \" scrub . \"   improper scrubbing sensitive datum decommission device leave datum vulnerable acquisition malicious actor . sensitive datum may include , but be not limit , device / manufacturer proprietary information , user / device credential , network configuration , and other form sensitive datum .",
                "child_of": [
                    "404"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read memory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "460",
            "value": {
                "id": "460",
                "name": "Improper Cleanup on Thrown Exception",
                "description": "The product does not clean up its state or incorrectly cleans up its state when an exception is thrown, leading to unexpected state or control flow.",
                "extended_description": " often , when function or loop become complicated , level resource cleanup be need execution . exception can disturb flow code and prevent necessary cleanup happen .",
                "child_of": [
                    "459",
                    "755"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": " code could be leave bad state .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "578",
            "value": {
                "id": "578",
                "name": "EJB Bad Practices: Use of Class Loader",
                "description": "The product violates the Enterprise JavaBeans (EJB) specification by using the class loader.",
                "extended_description": " enterprise javabeans specification require bean provider follow set programming guideline design to ensure bean will be portable and behave consistently ejb container . case , product violate following ejb guideline : \" enterprise bean must not attempt to create class loader ; obtain current class loader ; set context class loader ; set security manager ; create new security manager ; stop jvm ; or change input , output , and error stream . \" specification justify requirement following way : \" function be reserve ejb container . allow enterprise bean to use function could compromise security and decrease container 's ability to properly manage runtime environment . \"",
                "child_of": [
                    "573"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " other"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1054",
            "value": {
                "id": "1054",
                "name": "Invocation of a Control Element at an Unnecessarily Deep Horizontal Layer",
                "description": "The code at one architectural layer invokes code that resides at a deeper layer than the adjacent layer, i.e., the invocation skips at least one layer, and the invoked code is not part of a vertical utility layer that can be referenced from any horizontal layer.",
                "extended_description": " issue make more difficult to understand and maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1061"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "14",
            "value": {
                "id": "14",
                "name": "Compiler Removal of Code to Clear Buffers",
                "description": "Sensitive memory is cleared according to the source code, but compiler optimizations leave the memory untouched when it is not read from again, aka \"dead store removal.\"",
                "extended_description": " compiler optimization error occur when:1 . secret datum be store memory.2 . secret datum be scrub memory overwrite contents.3 . source code be compile use optimize compiler , identify and remove function overwrite content dead store memory be not use subsequently .",
                "child_of": [
                    "733"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control"
                ],
                "con_impacts": [
                    " read memory",
                    " bypass protection mechanism"
                ],
                "con_note": " weakness will allow datum have not be clear memory to be read . data contain sensitive password information , then attacker can read password and use information to bypass protection mechanism .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "104",
            "value": {
                "id": "104",
                "name": "Struts: Form Bean Does Not Extend Validation Class",
                "description": "If a form bean does not extend an ActionForm subclass of the Validator framework, it can expose the application to other weaknesses related to insufficient input validation.",
                "extended_description": "",
                "child_of": [
                    "573"
                ],
                "con_scope": [
                    " other",
                    " confidentiality",
                    " integrity",
                    " availability",
                    " other"
                ],
                "con_impacts": [
                    " other",
                    " other"
                ],
                "con_note": " j2ee application be not generally susceptible memory corruption attack , j2ee application interface native code do not perform array bound check , attacker may be able to use input validation mistake j2ee application to launch buffer overflow attack .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "266",
            "value": {
                "id": "266",
                "name": "Incorrect Privilege Assignment",
                "description": "A product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.",
                "extended_description": "",
                "child_of": [
                    "269"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " user can access restricted functionality and/or sensitive information may include administrative functionality and user account .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "277",
            "value": {
                "id": "277",
                "name": "Insecure Inherited Permissions",
                "description": "A product defines a set of insecure permissions that are inherited by objects that are created by the program.",
                "extended_description": "",
                "child_of": [
                    "732"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "497",
            "value": {
                "id": "497",
                "name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
                "description": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
                "extended_description": " network - base product , such web application , often run top operate system or similar environment .   when product communicate outside party , detail underlie system be expect to remain hidden , such path name datum file , other os user , instal package , application environment , etc . system information may be provide product , or bury diagnostic or debug message . debug information help adversary learn system and form attack plan . information exposure occur when system datum or debug information leave program output stream or log function make accessible unauthorized party . use other weakness , attacker could cause error to occur ; response error can reveal detailed system information , other impact .   attacker can use message reveal technology , operating system , and product version to tune attack know vulnerability technology . product may use diagnostic method provide significant implementation detail such stack trace part error handling mechanism .",
                "child_of": [
                    "200"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "434",
            "value": {
                "id": "434",
                "name": "Unrestricted Upload of File with Dangerous Type",
                "description": "The product allows the attacker to upload or transfer files of dangerous types that can be automatically processed within the product's environment.",
                "extended_description": "",
                "child_of": [
                    "669"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": " arbitrary code execution be possible uploaded file be interpret and execute code recipient . be especially true .asp and .php extension upload web server file type be often treat automatically executable , even when file system permission do not specify execution . example , unix environment , program typically can not run execute bit be set , but php program may be execute web server directly invoke operating system .",
                "alt_term": [
                    " unrestricted file upload"
                ],
                "alt_desc": [
                    " use vulnerability database and elsewhere , but be insufficiently precise . phrase could be interpret lack restriction size or number uploaded file , be resource consumption issue ."
                ]
            }
        },
        {
            "name": "804",
            "value": {
                "id": "804",
                "name": "Guessable CAPTCHA",
                "description": "The product uses a CAPTCHA challenge, but the challenge can be guessed or automatically recognized by a non-human actor.",
                "extended_description": " automate attacker could bypass intend protection captcha challenge and perform action high frequency humanly possible , such launch spam attack . can be several different cause guessable captcha : audio or visual image do not have sufficient distortion unobfuscated source image . question be generate format can be automatically recognize , such math question . question number possible answer be limited , such birth year or favorite sport team . general - knowledge or trivia question answer can be access use data base , such country capital or popular entertainer . other datum associate captcha may provide hint content , such image whose filename contain word be use captcha .",
                "child_of": [
                    "863",
                    "1390"
                ],
                "con_scope": [
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " other"
                ],
                "con_note": " when authorization , authentication , or protection mechanism rely captcha entity to ensure only human actor can access certain functionality , then automate attacker such bot may access restricted functionality guess captcha .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "732",
            "value": {
                "id": "732",
                "name": "Incorrect Permission Assignment for Critical Resource",
                "description": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.",
                "extended_description": " when resource be give permission setting provide access wide range actor require , could lead exposure sensitive information , or modification resource unintended party . be especially dangerous when resource be relate program configuration , execution , or sensitive user datum . example , consider misconfigured storage account cloud can be read or write public or anonymous user .",
                "child_of": [
                    "285",
                    "668"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control",
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " read application data",
                    " read files or directory",
                    " gain privileges or assume identity",
                    " modify application data",
                    " other"
                ],
                "con_note": " attacker may be able to destroy or corrupt critical datum associated resource , such deletion record database .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "708",
            "value": {
                "id": "708",
                "name": "Incorrect Ownership Assignment",
                "description": "The product assigns an owner to a resource, but the owner is outside of the intended control sphere.",
                "extended_description": " may allow resource to be manipulate actor intend control sphere .",
                "child_of": [
                    "282"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data"
                ],
                "con_note": " attacker could read and modify datum do not have permission to access directly .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "122",
            "value": {
                "id": "122",
                "name": "Heap-based Buffer Overflow",
                "description": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",
                "extended_description": "",
                "child_of": [
                    "788",
                    "787"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " execute unauthorized code or command",
                    " bypass protection mechanism",
                    " modify memory",
                    " execute unauthorized code or command",
                    " bypass protection mechanism",
                    " other"
                ],
                "con_note": " when consequence be arbitrary code execution , can often be use to subvert other security service .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "397",
            "value": {
                "id": "397",
                "name": "Declaration of Throws for Generic Exception",
                "description": "Throwing overly broad exceptions promotes complex error handling code that is more likely to contain security vulnerabilities.",
                "extended_description": " declare method to throw exception or throwable make difficult caller to perform proper error handling and error recovery . java 's exception mechanism , example , be set up to make easy caller to anticipate can go wrong and write code to handle specific exceptional circumstance . declare method throw generic form exception defeat system .",
                "child_of": [
                    "705",
                    "221",
                    "703"
                ],
                "con_scope": [
                    " non - repudiation",
                    " other"
                ],
                "con_impacts": [
                    " hide activity",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "448",
            "value": {
                "id": "448",
                "name": "Obsolete Feature in UI",
                "description": "A UI function is obsolete and the product does not warn the user.",
                "extended_description": "",
                "child_of": [
                    "446"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "665",
            "value": {
                "id": "665",
                "name": "Improper Initialization",
                "description": "The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.",
                "extended_description": " can have security implication when associate resource be expect to have certain property or value , such variable determine user have be authenticate or not .",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control",
                    " availability"
                ],
                "con_impacts": [
                    " read memory",
                    " read application data",
                    " bypass protection mechanism",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " uninitialized datum may contain value cause program flow to change way programmer do not intend . example , uninitialized variable be use array index c , then previous content may produce index be range array , possibly cause crash or exit other environment .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "782",
            "value": {
                "id": "782",
                "name": "Exposed IOCTL with Insufficient Access Control",
                "description": "The product implements an IOCTL with functionality that should be restricted, but it does not properly enforce access control for the IOCTL.",
                "extended_description": " when ioctl contain privileged functionality and be expose unnecessarily , attacker may be able to access functionality invoke ioctl . even functionality be benign , programmer have assume ioctl would only be access trust process , may be little or validation incoming datum , expose weakness would never be reachable attacker can not call ioctl directly . implementation ioctl will differ operating system type and version , method attack and prevention may vary widely .",
                "child_of": [
                    "749"
                ],
                "con_scope": [
                    " integrity",
                    " availability",
                    " confidentiality"
                ],
                "con_impacts": [],
                "con_note": " attacker can invoke functionality ioctl offer . depend functionality , consequence may include code execution , denial - - service , and theft datum .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "483",
            "value": {
                "id": "483",
                "name": "Incorrect Block Delimitation",
                "description": "The code does not explicitly delimit a block that is intended to contain 2 or more statements, creating a logic error.",
                "extended_description": " language , brace ( or other delimiter ) be optional block . when delimiter be omit , be possible to insert logic error statement be think to be block but be not . case , logic error can have security implication .",
                "child_of": [
                    "670"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " alter execution logic"
                ],
                "con_note": " be general logic error will often lead obviously - incorrect behavior be quickly notice and fix . lightly test or untested code , error may be introduce production environment and provide additional attack vector create control flow path lead unexpected state application . consequence will depend type behavior be be incorrectly execute .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "327",
            "value": {
                "id": "327",
                "name": "Use of a Broken or Risky Cryptographic Algorithm",
                "description": "The product uses a broken or risky cryptographic algorithm or protocol.",
                "extended_description": " cryptographic algorithm be method data be scramble to prevent observation or influence unauthorized actor . insecure cryptography can be exploit to expose sensitive information , modify datum unexpected way , spoof identity other user or device , or other impact . be very difficult to produce secure algorithm , and even high - profile algorithm accomplished cryptographic expert have be break . well - know technique exist to break or weaken various kind cryptography . accordingly , be small number well - understand and heavily study algorithm should be use most product . use non - standard or know - insecure algorithm be dangerous determined adversary may be able to break algorithm and compromise whatever datum have be protect . state cryptography advance so rapidly , be common algorithm to be consider \" unsafe \" even be once think to be strong . can happen when new attack be discover , or compute power increase so much cryptographic algorithm no long provide amount protection be originally think . number reason , weakness be even more challenging to manage hardware deployment cryptographic algorithm oppose software implementation . first , flaw be discover hardware - implement cryptography , flaw can not be fix most case recall product , hardware be not easily replaceable software . second , hardware product be expect to work year , adversary 's compute power will only increase time .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " accountability",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data",
                    " hide activity"
                ],
                "con_note": " cryptographic algorithm be use to ensure identity source datum ( such digital signature ) , then broken algorithm will compromise scheme and source datum can not be prove .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "344",
            "value": {
                "id": "344",
                "name": "Use of Invariant Value in Dynamically Changing Context",
                "description": "The product uses a constant value, name, or reference, but this value can (or should) vary across different environments.",
                "extended_description": "",
                "child_of": [
                    "330"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "536",
            "value": {
                "id": "536",
                "name": "Servlet Runtime Error Message Containing Sensitive Information",
                "description": "A servlet error message indicates that there exists an unhandled exception in your web application code and may provide useful information to an attacker.",
                "extended_description": "",
                "child_of": [
                    "211"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " error message may contain location file offend function be locate . may disclose web root 's absolute path as well give attacker location application file or configuration information . may even disclose portion code fail . many case , attacker can use datum to launch further attack system .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "842",
            "value": {
                "id": "842",
                "name": "Placement of User into Incorrect Group",
                "description": "The product or the administrator places a user into an incorrect group.",
                "extended_description": " incorrect group have more access or privilege intend group , user might be able to bypass intend security policy to access unexpected resource or perform unexpected action . access - control system might not be able to detect malicious usage group membership .",
                "child_of": [
                    "286"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "525",
            "value": {
                "id": "525",
                "name": "Use of Web Browser Cache Containing Sensitive Information",
                "description": "The web application does not use an appropriate caching policy that specifies the extent to which each web page and associated form fields should be cached.",
                "extended_description": "",
                "child_of": [
                    "524"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " browser often store information client - side cache , can leave sensitive information other user to find and exploit , such password or credit card number . location most risk include public terminal , such library and internet cafe .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "162",
            "value": {
                "id": "162",
                "name": "Improper Neutralization of Trailing Special Elements",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes trailing special elements that could be interpreted in unexpected ways when they are sent to a downstream component.",
                "extended_description": " datum be parse , improperly handle trail special element may cause process to take unexpected action result attack .",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1101",
            "value": {
                "id": "1101",
                "name": "Reliance on Runtime Component in Generated Code",
                "description": "The product uses automatically-generated code that cannot be executed without a specific runtime support component.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1274",
            "value": {
                "id": "1274",
                "name": "Improper Access Control for Volatile Memory Containing Boot Code",
                "description": "The product conducts a secure-boot process that transfers bootloader code from Non-Volatile Memory (NVM) into Volatile Memory (VM), but it does not have sufficient access control or other protections for the Volatile Memory.",
                "extended_description": " adversary could bypass secure - boot process and execute own untrusted , malicious boot code . part secure - boot process , read - only - memory ( rom ) code system - - chip ( soc ) or other system fetch bootloader code non - volatile memory ( nvm ) and store code volatile memory ( vm ) , such dynamic , random - access memory ( dram ) or static , random - access memory ( sram ) . nvm be usually external soc , vm be internal soc. code be transfer nvm vm , be authenticate soc 's rom code . volatile - memory - region protection or access control be insufficient to prevent modification adversary or untrusted agent , secure boot may be bypass or replace execution adversary 's code .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " access control",
                    " integrity"
                ],
                "con_impacts": [
                    " modify memory",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "612",
            "value": {
                "id": "612",
                "name": "Improper Authorization of Index Containing Sensitive Information",
                "description": "The product creates a search index of private or sensitive documents, but it does not properly limit index access to actors who are authorized to see the original information.",
                "extended_description": " web site and other document repository may apply indexing routine group private document to facilitate search .   index 's result be available party do not have access document be index , then attacker could obtain portion document conduct target search and read result .   risk be especially dangerous search result include surround text be not part search query . issue can appear search engine be not configure ( or implement ) to ignore critical file should remain hidden ; even permission to download file directly , remote user could read .",
                "child_of": [
                    "1230"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "793",
            "value": {
                "id": "793",
                "name": "Only Filtering One Instance of a Special Element",
                "description": "The product receives data from an upstream component, but only filters a single instance of a special element before sending it to a downstream component.",
                "extended_description": " incomplete filtering nature may be location - dependent , only first or last element be filter .",
                "child_of": [
                    "792"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "87",
            "value": {
                "id": "87",
                "name": "Improper Neutralization of Alternate XSS Syntax",
                "description": "The product does not neutralize or incorrectly neutralizes user-controlled input for alternate script syntax.",
                "extended_description": "",
                "child_of": [
                    "79"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " read application data",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "372",
            "value": {
                "id": "372",
                "name": "Incomplete Internal State Distinction",
                "description": "The product does not properly determine which state it is in, causing it to assume it is in state X when in fact it is in state Y, causing it to perform incorrect operations in a security-relevant manner.",
                "extended_description": "",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " varie context",
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1191",
            "value": {
                "id": "1191",
                "name": "On-Chip Debug and Test Interface With Improper Access Control",
                "description": "The chip does not implement or does not correctly perform access control to check whether users are authorized to access internal registers and test modes through the physical debug/test interface.",
                "extended_description": " device 's internal information may be access scan chain interconnect internal register , usually jtag interface . jtag interface provide access register serial fashion form scan chain purpose debug program run device . almost information contain device may be access interface , device manufacturer typically insert form authentication and authorization to prevent unintended use sensitive information . mechanism be implement addition - chip protection be already present . authorization , authentication , or other form access control be not implement or not implement correctly , user may be able to bypass - chip protection mechanism debug interface . sometimes , designer choose not to expose debug pin motherboard . instead , choose to hide pin intermediate layer board . be primarily do to work lack debug authorization chip . such scenario ( debug authorization ) , when debug interface be expose , chip internal be accessible attacker .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " confidentiality",
                    " authorization",
                    " integrity",
                    " integrity",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " read memory",
                    " execute unauthorized code or command",
                    " modify memory",
                    " modify application data",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "909",
            "value": {
                "id": "909",
                "name": "Missing Initialization of Resource",
                "description": "The product does not initialize a critical resource.",
                "extended_description": " many resource require initialization can be properly use . resource be not initialize , could contain unpredictable or expire datum , or could be initialize default be invalid . can have security implication when resource be expect to have certain property or value .",
                "child_of": [
                    "665"
                ],
                "con_scope": [
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " read memory",
                    " read application data",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " uninitialized resource may contain value cause program flow to change way programmer do not intend .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "790",
            "value": {
                "id": "790",
                "name": "Improper Filtering of Special Elements",
                "description": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
                "extended_description": "",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "302",
            "value": {
                "id": "302",
                "name": "Authentication Bypass by Assumed-Immutable Data",
                "description": "The authentication scheme or implementation uses key data elements that are assumed to be immutable, but can be controlled or modified by the attacker.",
                "extended_description": "",
                "child_of": [
                    "1390",
                    "807"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "112",
            "value": {
                "id": "112",
                "name": "Missing XML Validation",
                "description": "The product accepts XML from an untrusted source but does not validate the XML against the proper schema.",
                "extended_description": " most successful attack begin violation programmer 's assumption . accept xml document validate dtd or xml schema , programmer leave door open attacker to provide unexpected , unreasonable , or malicious input .",
                "child_of": [
                    "1286"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "593",
            "value": {
                "id": "593",
                "name": "Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created",
                "description": "The product modifies the SSL context after connection creation has begun.",
                "extended_description": " program modify ssl_ctx object create ssl object , be possibility old ssl object create original context could all be affect change .",
                "child_of": [
                    "666",
                    "1390"
                ],
                "con_scope": [
                    " access control",
                    " confidentiality"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " read application data"
                ],
                "con_note": " encrypt communication user and trust host may be subject sniff attack .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "566",
            "value": {
                "id": "566",
                "name": "Authorization Bypass Through User-Controlled SQL Primary Key",
                "description": "The product uses a database table that includes records that should not be accessible to an actor, but it executes a SQL statement with a primary key that can be controlled by that actor.",
                "extended_description": " when user can set primary key value , then user can modify key to point unauthorized record . database access control error occur when : datum enter program untrusted source . datum be use to specify value primary key sql query . untrusted source do not have permission to be able to access row associated table .",
                "child_of": [
                    "639"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1268",
            "value": {
                "id": "1268",
                "name": "Policy Privileges are not Assigned Consistently Between Control and Data Agents",
                "description": "The product's hardware-enforced access control for a particular resource improperly accounts for privilege discrepancies between control and write policies.",
                "extended_description": " integrated circuit and hardware engine may provide access resource ( device - configuration , encryption key , etc . ) belong trust firmware or software module ( commonly set bios or bootloader ) . access be typically control and limit hardware . hardware design access control be sometimes implement use policy . policy define which entity or agent may or may not be allow to perform action . when system implement multiple level policy , control policy may allow direct access resource as well change policy . resource include agent control policy but not write policy could unintentionally allow untrusted agent to insert write policy register . inclusion write policy register could allow malicious or misbehave agent write access resource . action could result security compromise include leak information , leak encryption key , or modification device configuration .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " read files or directory",
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "545",
            "value": {
                "id": "545",
                "name": "DEPRECATED: Use of Dynamic Class Loading",
                "description": "This weakness has been deprecated because it partially overlapsCWE-470, it describes legitimate programmer behavior, and other portions will need to be integrated into other entries.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1258",
            "value": {
                "id": "1258",
                "name": "Exposure of Sensitive System Information Due to Uncleared Debug Information",
                "description": "The hardware does not fully clear security-sensitive values, such as keys and intermediate values in cryptographic operations, when debug mode is entered.",
                "extended_description": " security sensitive value , key , intermediate step cryptographic operation , etc . be store temporary register hardware . value be not clear when debug mode be enter may be access debugger allow sensitive information to be accessible untrusted party .",
                "child_of": [
                    "212",
                    "200"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control"
                ],
                "con_impacts": [
                    " read memory",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "583",
            "value": {
                "id": "583",
                "name": "finalize() Method Declared Public",
                "description": "The product violates secure coding principles for mobile code by declaring a finalize() method public.",
                "extended_description": " product should never call finalize explicitly , to call super.finalize ( ) implementation finalize ( ) . mobile code situation , otherwise error prone practice manual garbage collection can become security threat attacker can maliciously invoke finalize ( ) method be declare public access .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " alter execution logic",
                    " execute unauthorized code or command",
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "657",
            "value": {
                "id": "657",
                "name": "Violation of Secure Design Principles",
                "description": "The product violates well-established principles for secure design.",
                "extended_description": " can introduce resultant weakness or make easy developer to introduce related weakness implementation . code be center design , can be resource - intensive to fix design problem .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "823",
            "value": {
                "id": "823",
                "name": "Use of Out-of-range Pointer Offset",
                "description": "The product performs pointer arithmetic on a valid pointer, but it uses an offset that can point outside of the intended range of valid memory locations for the resulting pointer.",
                "extended_description": " pointer can contain reference arbitrary memory location , program typically only intend to use pointer to access limited portion memory , such contiguous memory use to access individual array . program may use offset order to access field or sub - element store structured datum . offset might be - - range come untrusted source , be result incorrect calculation , or occur error . attacker can control or influence offset point intend boundary structure , then attacker may be able to read or write memory location be use elsewhere product . result , attack might change state product access program variable , cause crash or instable behavior , and possibly lead code execution .",
                "child_of": [
                    "119"
                ],
                "con_scope": [
                    " confidentiality",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " read memory",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command",
                    " modify memory"
                ],
                "con_note": " untrusted pointer be use function call , or point unexpected datum write operation , then code execution may be possible .",
                "alt_term": [
                    " untrusted pointer offset"
                ],
                "alt_desc": [
                    " term be narrow concept \" - - range \" offset , offset might be result calculation or other error do not depend externally - supply value ."
                ]
            }
        },
        {
            "name": "459",
            "value": {
                "id": "459",
                "name": "Incomplete Cleanup",
                "description": "The product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.",
                "extended_description": "",
                "child_of": [
                    "404"
                ],
                "con_scope": [
                    " other",
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " other",
                    " read application data",
                    " modify application data",
                    " dos : resource consumption ( other )"
                ],
                "con_note": " be possible to overflow number temporary file directory typically have limit number file allow . could create denial service problem .",
                "alt_term": [
                    " insufficient cleanup"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "27",
            "value": {
                "id": "27",
                "name": "Path Traversal: 'dir/../../filename'",
                "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize multiple internal \"../\" sequences that can resolve to a location that is outside of that directory.",
                "extended_description": " allow attacker to traverse file system to access file or directory be restricted directory . ' directory/ .. / .. /filename ' manipulation be useful bypass path traversal protection scheme . sometimes program only remove one \" .. / \" sequence , so multiple \" .. / \" can bypass check . alternately , manipulation could be use to bypass check \" .. / \" beginning pathname , move up more one directory level .",
                "child_of": [
                    "23"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "61",
            "value": {
                "id": "61",
                "name": "UNIX Symbolic Link (Symlink) Following",
                "description": "The product, when opening a file or directory, does not sufficiently account for when the file is a symbolic link that resolves to a target outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
                "extended_description": " product allow unix symbolic link ( symlink ) part path internal code or user input can allow attacker to spoof symbolic link and traverse file system unintended location or access arbitrary file . symbolic link can permit attacker to read / write / corrupt file originally do not have permission to access .",
                "child_of": [
                    "59"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [
                    " symlink follow",
                    " symlink vulnerability"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "30",
            "value": {
                "id": "30",
                "name": "Path Traversal: '\\dir\\..\\filename'",
                "description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\dir\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
                "extended_description": " allow attacker to traverse file system to access file or directory be restricted directory . be similar cwe-26 , use \" \\ \" instead \" / \" . ' \\dir\\ .. \\filename ' manipulation be useful bypass path traversal protection scheme . sometimes program only check \" .. \\ \" beginning input , so \" \\ .. \\ \" can bypass check .",
                "child_of": [
                    "23"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1041",
            "value": {
                "id": "1041",
                "name": "Use of Redundant Code",
                "description": "The product has multiple functions, methods, procedures, macros, etc. that contain the same code.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   example , be two copy same code , programmer might fix weakness one copy forget to fix same weakness copy .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "142",
            "value": {
                "id": "142",
                "name": "Improper Neutralization of Value Delimiters",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as value delimiters when they are sent to a downstream component.",
                "extended_description": " datum be parse , inject / absent / malforme delimiter may cause process to take unexpected action .",
                "child_of": [
                    "140"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "234",
            "value": {
                "id": "234",
                "name": "Failure to Handle Missing Parameter",
                "description": "If too few arguments are sent to a function, the function will still pop the expected number of arguments from the stack. Potentially, a variable number of arguments could be exhausted in a function as well.",
                "extended_description": "",
                "child_of": [
                    "233"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " potentially program could fail need more argument then be available .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "226",
            "value": {
                "id": "226",
                "name": "Sensitive Information in Resource Not Removed Before Reuse",
                "description": "The product releases a resource such as memory or a file so that it can be made available for reuse, but it does not clear or \"zeroize\" the information contained in the resource before the product performs a critical state transition or makes the resource available for reuse by other entities.",
                "extended_description": " when resource be release , can be make available reuse . example , memory be de - allocate , operating system may make memory available process , or disk space may be reallocate when file be delete . remove information require time and additional resource , operating system do not usually clear previously write information . even when resource be reuse same process , weakness can arise when new datum be not as large old datum , leave portion old datum still available . equivalent error can occur other situation where length datum be variable but associated data structure be not . memory be not clear use , information may be read less trustworthy party when memory be reallocate . weakness can apply hardware , such when device or system switch power , sleep , or debug state normal operation , or when execution change different user or privilege level .",
                "child_of": [
                    "459",
                    "212"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1245",
            "value": {
                "id": "1245",
                "name": "Improper Finite State Machines (FSMs) in Hardware Logic",
                "description": "Faulty finite state machines (FSMs) in the hardware logic allow an attacker to put the system in an undefined state, to cause a denial of service (DoS) or gain privileges on the victim's system.",
                "extended_description": " functionality and security system heavily depend implementation fsms . fsm can be use to indicate current security state system . lot secure datum operation and datum transfer rely state report fsm . faulty fsm design do not account state , either undefined state ( leave do not care ) or incorrect implementation , might lead attacker to drive system unstable state system can not recover reset , thus cause dos. depend fsm be use , attacker might also gain additional privilege to launch further attack and compromise security guarantee .",
                "child_of": [
                    "684"
                ],
                "con_scope": [
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " unexpected state",
                    " dos : crash , exit , or restart",
                    " dos : instability",
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "789",
            "value": {
                "id": "789",
                "name": "Memory Allocation with Excessive Size Value",
                "description": "The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.",
                "extended_description": "",
                "child_of": [
                    "770"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( memory )"
                ],
                "con_note": " not control memory allocation can result request too much system memory , possibly lead crash application out - - memory condition , or consumption large amount memory system .",
                "alt_term": [
                    " stack exhaustion"
                ],
                "alt_desc": [
                    " when weakness allocate excessive memory stack , be often describe \" stack exhaustion , \" be technical impact weakness . technical impact be often encounter consequence cwe-789 and/or cwe-1325 ."
                ]
            }
        },
        {
            "name": "9",
            "value": {
                "id": "9",
                "name": "J2EE Misconfiguration: Weak Access Permissions for EJB Methods",
                "description": "If elevated access rights are assigned to EJB methods, then an attacker can take advantage of the permissions to exploit the product.",
                "extended_description": " ejb deployment descriptor contain one or more method permission grant access special role , indicate access control application have not be fully think or application be structure such way reasonable access control restriction be impossible .",
                "child_of": [
                    "266"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1105",
            "value": {
                "id": "1105",
                "name": "Insufficient Encapsulation of Machine-Dependent Functionality",
                "description": "The product or code uses machine-dependent functionality, but it does not sufficiently encapsulate or isolate this functionality from the rest of the code.",
                "extended_description": " issue make more difficult to port or maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "758",
                    "1061"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "601",
            "value": {
                "id": "601",
                "name": "URL Redirection to Untrusted Site ('Open Redirect')",
                "description": "A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.",
                "extended_description": " http parameter may contain url value and could cause web application to redirect request specified url . modify url value malicious site , attacker may successfully launch phishe scam and steal user credential . server name modify link be identical original site , phishe attempt have more trustworthy appearance . issue pose vulnerability will be subject intended behavior application . example , search engine might intentionally provide redirect arbitrary url .",
                "child_of": [
                    "610"
                ],
                "con_scope": [
                    " access control",
                    " access control",
                    " confidentiality",
                    " other"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " other"
                ],
                "con_note": " user may be subject phishe attack be redirect untrusted page . phishe attack may point attacker control web page appear to be trust web site . phisher may then steal user 's credential and then use credential to access legitimate web site .",
                "alt_term": [
                    " open redirect",
                    " cross - site redirect",
                    " cross - domain redirect"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "776",
            "value": {
                "id": "776",
                "name": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
                "description": "The product uses XML documents and allows their structure to be defined with a Document Type Definition (DTD), but it does not properly control the number of recursive definitions of entities.",
                "extended_description": " dtd contain large number nest or recursive entity , can lead explosive growth datum when parse , cause denial service .",
                "child_of": [
                    "674",
                    "405"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( other )"
                ],
                "con_note": " parse , recursive entity reference allow attacker to expand datum exponentially , quickly consume system resource .",
                "alt_term": [
                    " xee",
                    " billion laughs attack",
                    " xml bomb"
                ],
                "alt_desc": [
                    " xee be acronym commonly use xml entity expansion .",
                    " \" xml bomb \" term be use early year knowledge issue , xee term seem to be more commonly use ."
                ]
            }
        },
        {
            "name": "1068",
            "value": {
                "id": "1068",
                "name": "Inconsistency Between Implementation and Documented Design",
                "description": "The implementation of the product is not consistent with the design as described within the relevant documentation.",
                "extended_description": " issue make more difficult to maintain product inconsistency , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "710"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "838",
            "value": {
                "id": "838",
                "name": "Inappropriate Encoding for Output Context",
                "description": "The product uses or specifies an encoding when generating output to a downstream component, but the specified encoding is not the same as the encoding that is expected by the downstream component.",
                "extended_description": " weakness can cause downstream component to use decode method produce different datum product intend to send . when wrong encoding be use - even closely relate - downstream component could decode datum incorrectly . can have security consequence when provide boundary control and datum be inadvertently break , result datum could introduce control character or special element be not send product . result datum could then be use to bypass protection mechanism such input validation , and enable injection attack . use output encoding be essential ensure communication component be accurate , use wrong encoding - even closely relate - could cause downstream component to misinterpret output . example , html entity encoding be use element html body web page . however , programmer might use entity encoding when generate output be use attribute html tag , could contain functional javascript be not affect html encoding . web application have receive most attention problem , weakness could potentially apply type product use communication stream could support multiple encoding .",
                "child_of": [
                    "116"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " modify application data",
                    " execute unauthorized code or command"
                ],
                "con_note": " attacker could modify structure message or datum be send downstream component , possibly inject command .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "166",
            "value": {
                "id": "166",
                "name": "Improper Handling of Missing Special Element",
                "description": "The product receives input from an upstream component, but it does not handle or incorrectly handles when an expected special element is missing.",
                "extended_description": "",
                "child_of": [
                    "159",
                    "703"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "760",
            "value": {
                "id": "760",
                "name": "Use of a One-Way Hash with a Predictable Salt",
                "description": "The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product uses a predictable salt as part of the input.",
                "extended_description": " make easy attacker to pre - compute hash value use dictionary attack technique such rainbow table , effectively disable protection unpredictable salt would provide . should be note , common perception , use good salt hash do not sufficiently increase effort attacker be target individual password , or have large amount compute resource available , such cloud - base service or specialize , inexpensive hardware . offline password cracking can still be effective hash function be not expensive to compute ; many cryptographic function be design to be efficient and can be vulnerable attack use massive computing resource , even hash be cryptographically strong . use salt only slightly increase compute requirement attacker compare other strategy such adaptive hash function . see cwe-916 more detail .",
                "child_of": [
                    "916"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "97",
            "value": {
                "id": "97",
                "name": "Improper Neutralization of Server-Side Includes (SSI) Within a Web Page",
                "description": "The product generates a web page, but does not neutralize or incorrectly neutralizes user-controllable input that could be interpreted as a server-side include (SSI) directive.",
                "extended_description": "",
                "child_of": [
                    "96"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1393",
            "value": {
                "id": "1393",
                "name": "Use of Default Password",
                "description": "The product uses default passwords for potentially critical functionality.",
                "extended_description": " be common practice product to be design to use \n\t default password authentication .   rationale be to \n\t simplify manufacturing process or system \n\t administrator 's task installation and deployment \n\t enterprise . however , admin do not change default , \n\t then make easy attacker to quickly bypass \n\t authentication multiple organization . be many \n\t list default password and default - password scan tool \n\t be easily available world wide web . \n      ",
                "child_of": [
                    "1392"
                ],
                "con_scope": [
                    " authentication"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "611",
            "value": {
                "id": "611",
                "name": "Improper Restriction of XML External Entity Reference",
                "description": "The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",
                "extended_description": " xml document optionally contain document type definition ( dtd ) , , other feature , enable definition xml entity . be possible to define entity provide substitution string form uri . xml parser can access content uri and embe content back xml document further processing . submit xml file define external entity file:// uri , attacker can cause processing application to read content local file . example , uri such \" file:///c:/winnt / win.ini \" designate ( windows ) file c:\\winnt\\win.ini , or file:///etc / passwd designate password file unix - base system . use uris other scheme such http:// , attacker can force application to make outgoing request server attacker can not reach directly , can be use to bypass firewall restriction or hide source attack such port scanning . content uri be read , be feed back application be process xml . application may echo back datum ( e.g. error message ) , thereby expose file content .",
                "child_of": [
                    "610"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " read application data",
                    " read files or directory",
                    " bypass protection mechanism",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )"
                ],
                "con_note": " product could consume excessive cpu cycle or memory use uri point large file , or device always return datum such /dev / random . alternately , uri could reference file contain many nested or recursive entity reference to far slow down parsing .",
                "alt_term": [
                    " xxe"
                ],
                "alt_desc": [
                    " acronym use term \" xml external entities \""
                ]
            }
        },
        {
            "name": "1236",
            "value": {
                "id": "1236",
                "name": "Improper Neutralization of Formula Elements in a CSV File",
                "description": "The product saves user-provided information into a Comma-Separated Value (CSV) file, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as a command when the file is opened by a spreadsheet product.",
                "extended_description": " user - provide datum be often save traditional database .   datum can be export csv file , allow user to read datum use spreadsheet software such excel , numbers , or calc .   software interpret entry begin ' = ' formula , be then execute spreadsheet software .   software 's formula language often allow method to access hyperlink or local command line , and frequently allow enough character to invoke entire script . attacker can populate data field , when save csv file , may attempt information exfiltration or other malicious activity when automatically execute spreadsheet software .",
                "child_of": [
                    "74"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data",
                    " execute unauthorized code or command"
                ],
                "con_note": " current version excel warn user untrusted content .",
                "alt_term": [
                    " csv injection",
                    " formula injection",
                    " excel macro injection"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "511",
            "value": {
                "id": "511",
                "name": "Logic/Time Bomb",
                "description": "The product contains code that is designed to disrupt the legitimate operation of the product (or its environment) when a certain time passes, or when a certain logical condition is met.",
                "extended_description": " when time bomb or logic bomb be detonate , may perform denial service such crash system , delete critical datum , or degrading system response time . bomb might be place either replicate or non - replicating trojan horse .",
                "child_of": [
                    "506"
                ],
                "con_scope": [
                    " other",
                    " integrity"
                ],
                "con_impacts": [
                    " varie context",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "514",
            "value": {
                "id": "514",
                "name": "Covert Channel",
                "description": "A covert channel is a path that can be used to transfer information in a way not intended by the system's designers.",
                "extended_description": " typically system have not give authorization transmission and have knowledge occurrence .",
                "child_of": [
                    "1229"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "548",
            "value": {
                "id": "548",
                "name": "Exposure of Information Through Directory Listing",
                "description": "A directory listing is inappropriately exposed, yielding potentially sensitive information to attackers.",
                "extended_description": " directory listing provide attacker complete index all resource locate inside directory . specific risk and consequence vary depend file be list and accessible .",
                "child_of": [
                    "497"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read files or directory"
                ],
                "con_note": " expose content directory can lead attacker gain access source code or provide useful information attacker to devise exploit , such creation time file or information may be encode file name . directory listing may also compromise private or confidential datum .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "195",
            "value": {
                "id": "195",
                "name": "Signed to Unsigned Conversion Error",
                "description": "The product uses a signed primitive and performs a cast to an unsigned primitive, which can produce an unexpected value if the value of the signed primitive can not be represented using an unsigned primitive.",
                "extended_description": " be dangerous to rely implicit cast sign and unsigned number result can take on unexpected value and violate assumption make program . often , function will return negative value to indicate failure . when result function be to be use size parameter , use negative return value can have unexpected result . example , negative size value be pass standard memory copy or allocation function will be implicitly cast large unsigned value . may lead exploitable buffer overflow or underflow condition .",
                "child_of": [
                    "681"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": " conversion sign and unsigned value can lead variety error , but security standpoint be most commonly associate integer overflow and buffer overflow vulnerability .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "599",
            "value": {
                "id": "599",
                "name": "Missing Validation of OpenSSL Certificate",
                "description": "The product uses OpenSSL and trusts or uses a certificate without using the SSL_get_verify_result() function to ensure that the certificate satisfies all necessary security requirements.",
                "extended_description": " could allow attacker to use invalid certificate to claim to be trust host , use expire certificate , or conduct other attack could be detect certificate be properly validate .",
                "child_of": [
                    "295"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " gain privileges or assume identity"
                ],
                "con_note": " certificate be not check , may be possible redirection or spoof attack to allow malicious host valid certificate to provide datum guise trust host . attacker question may have valid certificate , may simply be valid certificate different site . order to ensure data integrity , must check certificate be valid , and pertain site wish to access .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "64",
            "value": {
                "id": "64",
                "name": "Windows Shortcut Following (.LNK)",
                "description": "The product, when opening a file or directory, does not sufficiently handle when the file is a Windows shortcut (.LNK) whose target is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
                "extended_description": " shortcut ( file .lnk extension ) can permit attacker to read / write file originally do not have permission to access .",
                "child_of": [
                    "59"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [
                    " windows symbolic link follow",
                    " symlink"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "584",
            "value": {
                "id": "584",
                "name": "Return Inside Finally Block",
                "description": "The code has a return statement inside a finally block, which will cause any thrown exception in the try block to be discarded.",
                "extended_description": "",
                "child_of": [
                    "705"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "228",
            "value": {
                "id": "228",
                "name": "Improper Handling of Syntactically Invalid Structure",
                "description": "The product does not handle or incorrectly handles input that is not syntactically well-formed with respect to the associated specification.",
                "extended_description": "",
                "child_of": [
                    "703",
                    "707"
                ],
                "con_scope": [
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " unexpected state",
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )"
                ],
                "con_note": " input be syntactically invalid , then process input could place system unexpected state could lead crash , consume available system resource or other unintended behavior .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "143",
            "value": {
                "id": "143",
                "name": "Improper Neutralization of Record Delimiters",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as record delimiters when they are sent to a downstream component.",
                "extended_description": " datum be parse , inject / absent / malforme delimiter may cause process to take unexpected action .",
                "child_of": [
                    "140"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "220",
            "value": {
                "id": "220",
                "name": "Storage of File With Sensitive Data Under FTP Root",
                "description": "The product stores sensitive data under the FTP server root with insufficient access control, which might make it accessible to untrusted parties.",
                "extended_description": "",
                "child_of": [
                    "552"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1263",
            "value": {
                "id": "1263",
                "name": "Improper Physical Access Control",
                "description": "The product is designed with access restricted to certain information, but it does not sufficiently protect against an unauthorized actor with physical access to these areas.",
                "extended_description": " section product intend to have restrict access may be inadvertently or intentionally render accessible when implement physical protection be insufficient . specific requirement how robust design physical protection mechanism need to be depend type product be protect . select correct physical protection mechanism and properly enforce implementation and manufacturing be critical overall physical security product . \n\t\t\t",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "225",
            "value": {
                "id": "225",
                "name": "DEPRECATED: General Information Management Problems",
                "description": "This weakness can be found atCWE-199.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1070",
            "value": {
                "id": "1070",
                "name": "Serializable Data Element Containing non-Serializable Item Elements",
                "description": "The product contains a serializable, storable data element such as a field or member, but the data element contains member elements that are not serializable.",
                "extended_description": " issue can prevent product run reliably .   relevant code be reachable attacker , then reliability problem might introduce vulnerability . example , serializable nature datum element come serializable serializableattribute attribute .net and inheritance java.io . serializable interface java .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "244",
            "value": {
                "id": "244",
                "name": "Improper Clearing of Heap Memory Before Release ('Heap Inspection')",
                "description": "Using realloc() to resize buffers that store sensitive information can leave the sensitive information exposed to attack, because it is not removed from memory.",
                "extended_description": " when sensitive datum such password or encryption key be not remove memory , could be expose attacker use \" heap inspection \" attack read sensitive datum use memory dump or other method . realloc ( ) function be commonly use to increase size block allocate memory . operation often require copy content old memory block new and large block . operation leave content original block intact but inaccessible program , prevent program be able to scrub sensitive datum memory . attacker can later examine content memory dump , sensitive datum could be expose .",
                "child_of": [
                    "226"
                ],
                "con_scope": [
                    " confidentiality",
                    " other"
                ],
                "con_impacts": [
                    " read memory",
                    " other"
                ],
                "con_note": " be careful use vfork ( ) and fork ( ) security sensitive code . process state will not be clean up and will contain trace datum past use .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1357",
            "value": {
                "id": "1357",
                "name": "Reliance on Insufficiently Trustworthy Component",
                "description": "The product is built from multiple separate components, but it uses a component that is not sufficiently trusted to meet expectations for security, reliability, updateability, and maintainability.",
                "extended_description": " many modern hardware and software product be build combine multiple small component together one large entity , often design or architecture phase . example , hardware component might be build separate supplier , or product might use open - source software library third party . regardless source , component should be sufficiently trust to ensure correct , secure operation product . component be not trustworthy , can produce significant risk overall product , such vulnerability can not be patch fast enough ( at all ) ; hide functionality such malware ; inability to update or replace component need security purpose ; hardware component build part do not meet specification way can lead weakness ; etc . note component might not be trustworthy even be own product vendor , such software component whose source code be lose and be build developer leave company , or component be develop separate company be acquire and bring product 's own company . note can be disagreement component be sufficiently trustworthy , trust be ultimately subjective . different stakeholder ( e.g. , customer , vendor , government ) have various threat model and way to assess trust , and design / architecture choice might make tradeoff security , reliability , safety , privacy , cost , and other characteristic .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "652",
            "value": {
                "id": "652",
                "name": "Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')",
                "description": "The product uses external input to dynamically construct an XQuery expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.",
                "extended_description": " net effect be attacker will have control information select xml database and may use ability to control application flow , modify logic , retrieve unauthorized datum , or bypass important check ( e.g. authentication ) .",
                "child_of": [
                    "943",
                    "91"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " attacker might be able to read sensitive information xml database .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "296",
            "value": {
                "id": "296",
                "name": "Improper Following of a Certificate's Chain of Trust",
                "description": "The product does not follow, or incorrectly follows, the chain of trust for a certificate back to a trusted root certificate, resulting in incorrect trust of any resource that is associated with that certificate.",
                "extended_description": " system do not follow chain trust certificate root server , certificate lose usefulness metric trust . essentially , trust gain certificate be derive chain trust -- reputable trusted entity end list . end user must trust reputable source , and reputable source must vouch resource question medium certificate . case , trust traverse several entity vouch one . entity trust end user be one end trust chain , certificate - wield resource be other end chain . user receive certificate end one trust chain and then proceed to check only first link chain , real trust have be derive , entire chain must be traverse back trust source to verify certificate . be several way chain trust might be break , include but not limit : certificate chain be self - sign , root . not intermediate certificate be check , start original certificate all way root certificate . intermediate , ca - sign certificate do not have expect basic constraints or other important extension . root certificate have be compromise or authorize wrong party .",
                "child_of": [
                    "295",
                    "573"
                ],
                "con_scope": [
                    " non - repudiation",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " hide activity",
                    " gain privileges or assume identity",
                    " execute unauthorized code or command"
                ],
                "con_note": " datum , request , or action take attack entity can be carry out spoof benign entity .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "766",
            "value": {
                "id": "766",
                "name": "Critical Data Element Declared Public",
                "description": "The product declares a critical variable, field, or member to be public when intended security policy requires it to be private.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "732",
                    "1061"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " other"
                ],
                "con_impacts": [
                    " read application data",
                    " modify application data",
                    " reduce maintainability"
                ],
                "con_note": " make critical variable public allow access object variable be contain to alter or read value .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1094",
            "value": {
                "id": "1094",
                "name": "Excessive Index Range Scan for a Data Resource",
                "description": "The product contains an index range scan for a large data table, but the scan can cover a large number of rows.",
                "extended_description": " issue can make product perform more slowly .   relevant code be reachable attacker , then performance problem might introduce vulnerability . interpretation \" large datum table \" and \" excessive index range \" may vary product or developer , cisq recommend threshold 1000000 table row and threshold 10 index range .",
                "child_of": [
                    "405"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "132",
            "value": {
                "id": "132",
                "name": "DEPRECATED: Miscalculated Null Termination",
                "description": "This entry has been deprecated because it was a duplicate ofCWE-170. All content has been transferred toCWE-170.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "582",
            "value": {
                "id": "582",
                "name": "Array Declared Public, Final, and Static",
                "description": "The product declares an array public, final, and static, which is not sufficient to prevent the array's contents from being modified.",
                "extended_description": " array be mutable object , final constraint require array object be assign only once , but make guarantee value array element . array be public , malicious program can change value store array . such , most case array declare public , final and static be bug .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "103",
            "value": {
                "id": "103",
                "name": "Struts: Incomplete validate() Method Definition",
                "description": "The product has a validator form that either does not define a validate() method, or defines a validate() method but does not call super.validate().",
                "extended_description": " code do not call super.validate ( ) , validation framework can not check content form validation form . other word , validation framework will be disable give form .",
                "child_of": [
                    "573"
                ],
                "con_scope": [
                    " other",
                    " confidentiality",
                    " integrity",
                    " availability",
                    " other"
                ],
                "con_impacts": [
                    " other",
                    " other"
                ],
                "con_note": " j2ee application be not generally susceptible memory corruption attack , j2ee application interface native code do not perform array bound check , attacker may be able to use input validation mistake j2ee application to launch buffer overflow attack .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1294",
            "value": {
                "id": "1294",
                "name": "Insecure Security Identifier Mechanism",
                "description": "The System-on-Chip (SoC) implements a Security Identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Identifiers are not correctly implemented.",
                "extended_description": " systems - - chip ( integrated circuit and hardware \n                     engine ) implement security identifiers to \n                     differentiate / identify action originate various \n                     agent . action could be ' read ' , ' write ' , ' program ' , \n                     ' reset ' , ' fetch ' , ' compute ' , etc . security identifier be \n                     generate and assign agent system ( soc ) \n                     be either capable generate action or receive \n                     action agent . agent could be assign \n                     unique , security identifier base trust level or \n                     privilege . broad class flaw can exist security \n                     identifier process , include but not limit miss \n                     security identifier , improper conversion security \n                     identifier , incorrect generation security identifier , \n                     etc .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " dos : resource consumption ( other )",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "177",
            "value": {
                "id": "177",
                "name": "Improper Handling of URL Encoding (Hex Encoding)",
                "description": "The product does not properly handle when all or part of an input has been URL encoded.",
                "extended_description": "",
                "child_of": [
                    "172"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "636",
            "value": {
                "id": "636",
                "name": "Not Failing Securely ('Failing Open')",
                "description": "When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.",
                "extended_description": " enter less secure state , product inherit weakness associate state , make easy to compromise . least , cause administrator to have false sense security . weakness typically occur result want to \" fail functional \" to minimize administration and support cost , instead \" fail safe . \"",
                "child_of": [
                    "657",
                    "755"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": " intend access restriction can be bypass , be often contradictory product 's administrator expect .",
                "alt_term": [
                    " fail open"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "797",
            "value": {
                "id": "797",
                "name": "Only Filtering Special Elements at an Absolute Position",
                "description": "The product receives data from an upstream component, but only accounts for special elements at an absolute position (e.g. \"byte number 10\"), thereby missing remaining special elements that may exist before sending it to a downstream component.",
                "extended_description": "",
                "child_of": [
                    "795"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1271",
            "value": {
                "id": "1271",
                "name": "Uninitialized Value on Reset for Registers Holding Security Settings",
                "description": "Security-critical logic is not set to a known value on reset.",
                "extended_description": " when device be first bring reset , state register will be indeterminate have not be initialize logic . register be initialize , will be window device be insecure state and may be vulnerable attack .",
                "child_of": [
                    "909"
                ],
                "con_scope": [
                    " access control",
                    " authentication",
                    " authorization"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1315",
            "value": {
                "id": "1315",
                "name": "Improper Setting of Bus Controlling Capability in Fabric End-point",
                "description": "The bus controller enables bits in the fabric end-point to allow responder devices to control transactions on the fabric.",
                "extended_description": " to support reusability , certain fabric interface and end point provide configurable register bit allow ip block connect controller to access other peripheral connect fabric . allow end point to be use device function controller or responder . bit be set default hardware , or firmware incorrectly set later , device intend to be responder fabric be now capable control transaction other device and might compromise system security .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "754",
            "value": {
                "id": "754",
                "name": "Improper Check for Unusual or Exceptional Conditions",
                "description": "The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product.",
                "extended_description": " programmer may assume certain event or condition will never occur or do not need to be worried , such low memory condition , lack access resource restrictive permission , or misbehave client or component . however , attacker may intentionally trigger unusual condition , thus violate programmer 's assumption , possibly introduce instability , incorrect behavior , or vulnerability . note entry be not exclusively use exception and exception handling , be mechanism check and handle unusual or unexpected condition .",
                "child_of": [
                    "703"
                ],
                "con_scope": [
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " unexpected state"
                ],
                "con_note": " datum be produce result function call could be bad state return . return value be not check , then bad datum may be use operation , possibly lead crash or other unintended behavior .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "783",
            "value": {
                "id": "783",
                "name": "Operator Precedence Logic Error",
                "description": "The product uses an expression in which operator precedence causes incorrect logic to be used.",
                "extended_description": " often just bug , operator precedence logic error can have serious consequence be use security - critical code , such make authentication decision .",
                "child_of": [
                    "670"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " varie context",
                    " unexpected state"
                ],
                "con_note": " consequence will vary base context surround incorrect precedence . security decision , integrity or confidentiality be most likely result . otherwise , crash may occur software reach unexpected state .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "456",
            "value": {
                "id": "456",
                "name": "Missing Initialization of a Variable",
                "description": "The product does not initialize critical variables, which causes the execution environment to use unexpected values.",
                "extended_description": "",
                "child_of": [
                    "909"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " unexpected state",
                    " quality degradation",
                    " varie context"
                ],
                "con_note": " uninitialized datum may be invalid , cause logic error program . case , could result security problem .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "73",
            "value": {
                "id": "73",
                "name": "External Control of File Name or Path",
                "description": "The product allows user input to control or influence paths or file names that are used in filesystem operations.",
                "extended_description": " could allow attacker access or modify system file or other file be critical application . path manipulation error occur when follow two condition be met:1 . attacker can specify path use operation filesystem.2 . specify resource , attacker gain capability would not otherwise be permit . example , program may give attacker ability to overwrite specify file or run configuration control attacker .",
                "child_of": [
                    "642",
                    "610"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " integrity",
                    " confidentiality",
                    " availability",
                    " availability"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory",
                    " modify files or directory",
                    " execute unauthorized code or command",
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( other )"
                ],
                "con_note": " application can operate unexpected file . availability can be violate attacker specify unexpected file application modifie . availability can also be affect attacker specify filename large file , or point special device or file do not have format application expect .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "828",
            "value": {
                "id": "828",
                "name": "Signal Handler with Functionality that is not Asynchronous-Safe",
                "description": "The product defines a signal handler that contains code sequences that are not asynchronous-safe, i.e., the functionality is not reentrant, or it can be interrupted.",
                "extended_description": " can lead unexpected system state variety potential consequence depend context , include denial service and code execution . signal handler be typically intend to interrupt normal functionality program , or even other signal , order to notify process event . when signal handler use global or static variable , or invoke function ultimately depend such state or associated metadata , then could corrupt system state be be use normal functionality . could subject program to race condition or other weakness allow attacker to cause program state to be corrupt . denial service be frequently consequence , case weakness could be leverage code execution . be several different scenario introduce issue : invocation non - reentrant function handler . one example be malloc ( ) , modify internal global variable manage memory . very few function be actually reentrant . code sequence ( not necessarily function call ) contain non - atomic use global variable , or associated metadata or structure , can be access other functionality program , include other signal handler . frequently , same function be register to handle multiple signal . signal handler function be intend to run most one time , but instead can be invoke multiple time . could happen repeat delivery same signal , or delivery different signal have same handler function ( cwe-831).note environment or context , might be possible signal handler to be interrupt . signal handler and normal behavior product have to operate same set state variable , and signal be receive middle normal execution 's modification variable , variable may be incorrect or corrupt state signal handler execution , and possibly still incorrect or corrupt return .",
                "child_of": [
                    "364"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command"
                ],
                "con_note": " most common consequence will be corruption state product , possibly lead crash or exit . however , signal handler be operate state variable security relevant library or protection mechanism , consequence can be far more severe , include protection mechanism bypass , privilege escalation , or information exposure .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "40",
            "value": {
                "id": "40",
                "name": "Path Traversal: '\\\\UNC\\share\\name\\' (Windows UNC Share)",
                "description": "The product accepts input that identifies a Windows UNC share ('\\\\UNC\\share\\name') that potentially redirects access to an unintended location or arbitrary file.",
                "extended_description": "",
                "child_of": [
                    "36"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "696",
            "value": {
                "id": "696",
                "name": "Incorrect Behavior Order",
                "description": "The product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.",
                "extended_description": "",
                "child_of": [
                    "691"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "214",
            "value": {
                "id": "214",
                "name": "Invocation of Process Using Visible Sensitive Information",
                "description": "A process is invoked with sensitive command-line arguments, environment variables, or other elements that can be seen by other processes on the operating system.",
                "extended_description": " many operating system allow user to list information process be own other user . other user could see information such command line argument or environment variable setting . when data contain sensitive information such credential , might allow other user to launch attack product or related resource .",
                "child_of": [
                    "497"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "552",
            "value": {
                "id": "552",
                "name": "Files or Directories Accessible to External Parties",
                "description": "The product makes files or directories accessible to unauthorized actors, even though they should not be.",
                "extended_description": " web server , ftp server , and similar server may store set file \" root \" directory be accessible server 's user .   application may store sensitive file root also use access control to limit user may request file , .   alternately , application might package multiple file or directory archive file ( e.g. , zip or tar ) , but application might not exclude sensitive file be directory . cloud technology and container , weakness might present form misconfigured storage account can be read or write public or anonymous user .",
                "child_of": [
                    "668",
                    "285"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "471",
            "value": {
                "id": "471",
                "name": "Modification of Assumed-Immutable Data (MAID)",
                "description": "The product does not properly protect an assumed-immutable element from being modified by an attacker.",
                "extended_description": " occur when particular input be critical enough functioning application should not be modifiable at all , but be . certain resource be often assume to be immutable when be not , such hide form field web application , cookie , and reverse dns lookup .",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " integrity",
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data",
                    " unexpected state"
                ],
                "con_note": " common data type be attack be environment variables , web application parameter , and http header .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "616",
            "value": {
                "id": "616",
                "name": "Incomplete Identification of Uploaded File Variables (PHP)",
                "description": "The PHP application uses an old method for processing uploaded files by referencing the four global variables that are set for each file (e.g. $varname, $varname_size, $varname_name, $varname_type). These variables could be overwritten by attackers, causing the application to process unauthorized files.",
                "extended_description": " global variable could be overwrite post request , cookie , or other method populating or overwrite variable . could be use to read or process arbitrary file provide value such \" /etc / passwd \" .",
                "child_of": [
                    "345"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "788",
            "value": {
                "id": "788",
                "name": "Access of Memory Location After End of Buffer",
                "description": "The product reads or writes to a buffer using an index or pointer that references a memory location after the end of the buffer.",
                "extended_description": " typically occur when pointer or index be incremente position buffer ; or when pointer arithmetic result position buffer .",
                "child_of": [
                    "119"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " integrity"
                ],
                "con_impacts": [
                    " read memory",
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " modify memory",
                    " execute unauthorized code or command"
                ],
                "con_note": " memory accessible attacker can be effectively control , may be possible to execute arbitrary code , standard buffer overflow . attacker can overwrite pointer 's worth memory ( usually 32 or 64 bit ) , can redirect function pointer own malicious code . even when attacker can only modify single byte arbitrary code execution can be possible . sometimes be same problem can be exploit repeatedly same effect . other time be attacker can overwrite security - critical application - specific datum -- such flag indicate user be administrator .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "12",
            "value": {
                "id": "12",
                "name": "ASP.NET Misconfiguration: Missing Custom Error Page",
                "description": "An ASP .NET application must enable custom error pages in order to prevent attackers from mining information from the framework's built-in responses.",
                "extended_description": "",
                "child_of": [
                    "756"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " default error page give detailed information error occur , and should not be use production environment . attacker can leverage additional information provide default error page to mount attack target framework , database , or other resource use application .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1255",
            "value": {
                "id": "1255",
                "name": "Comparison Logic is Vulnerable to Power Side-Channel Attacks",
                "description": "A device's real time power consumption may be monitored during security token evaluation and the information gleaned may be used to determine the value of the reference token.",
                "extended_description": " power consume device may be instrument and monitor real time . algorithm evaluate security token be not sufficiently robust , power consumption may vary token entry comparison reference value . far , retrie be unlimited , power difference \" good \" entry and \" bad \" entry may be observe and use to determine entry be correct thereby allow unauthorized party to calculate reference value .",
                "child_of": [
                    "1300"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control",
                    " accountability",
                    " authentication",
                    " authorization",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " read files or directory",
                    " modify files or directory",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " read application data",
                    " modify application data",
                    " hide activity"
                ],
                "con_note": " compromise security token may result complete system control , impact be relatively universal",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "409",
            "value": {
                "id": "409",
                "name": "Improper Handling of Highly Compressed Data (Data Amplification)",
                "description": "The product does not handle or incorrectly handles a compressed input with a very high compression ratio that produces a large output.",
                "extended_description": " example data amplification be \" decompression bomb , \" small zip file can produce large amount datum when be decompress .",
                "child_of": [
                    "405"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : amplification",
                    " dos : crash , exit , or restart",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )"
                ],
                "con_note": " system resource , cpu and memory , can be quickly consume . can lead poor system performance or system crash .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "484",
            "value": {
                "id": "484",
                "name": "Omitted Break Statement in Switch",
                "description": "The product omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.",
                "extended_description": " can lead critical code executing situation where should not .",
                "child_of": [
                    "710",
                    "670"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " alter execution logic"
                ],
                "con_note": " weakness can cause unintended logic to be execute and other unexpected application behavior .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "770",
            "value": {
                "id": "770",
                "name": "Allocation of Resources Without Limits or Throttling",
                "description": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
                "extended_description": " code frequently have to work limited resource , programmer must be careful to ensure resource be not consume too quickly , or too easily .   use quota , resource limit , or other protection mechanism , can be easy attacker to consume many resource rapidly make many request , or cause large resource to be use be need . when too many resource be allocate , or single resource be too large , then can prevent code work correctly , possibly lead denial service .",
                "child_of": [
                    "400",
                    "665"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : resource consumption ( other )"
                ],
                "con_note": " when allocate resource limit , attacker could prevent other system , application , or process access same type resource .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "467",
            "value": {
                "id": "467",
                "name": "Use of sizeof() on a Pointer Type",
                "description": "The code calls sizeof() on a malloced pointer type, which always returns the wordsize/8. This can produce an unexpected result if the programmer intended to determine how much memory has been allocated.",
                "extended_description": " use sizeof ( ) pointer can sometimes generate useful information . obvious case be to find out wordsize platform . more often not , appearance sizeof(pointer ) indicate bug .",
                "child_of": [
                    "131"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory"
                ],
                "con_note": " error can often cause to allocate buffer be much small be need , lead resultant weakness such buffer overflow .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "205",
            "value": {
                "id": "205",
                "name": "Observable Behavioral Discrepancy",
                "description": "The product's behaviors indicate important differences that may be observed by unauthorized actors in a way that reveals (1) its internal state or decision process, or (2) differences from other products with equivalent functionality.",
                "extended_description": " ideally , product should provide little information internal operation possible .   otherwise , attacker could use knowledge internal operation to simplify or optimize attack .   case , behavioral discrepancy can be use attacker to form side channel .",
                "child_of": [
                    "203"
                ],
                "con_scope": [
                    " confidentiality",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "784",
            "value": {
                "id": "784",
                "name": "Reliance on Cookies without Validation and Integrity Checking in a Security Decision",
                "description": "The product uses a protection mechanism that relies on the existence or values of a cookie, but it does not properly ensure that the cookie is valid for the associated user.",
                "extended_description": " attacker can easily modify cookie , browser or implement client - side code browser . attacker can bypass protection mechanism such authorization and authentication modify cookie to contain expected value .",
                "child_of": [
                    "807",
                    "565"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": " be dangerous to use cookie to set user 's privilege . cookie can be manipulate to claim high level authorization , or to claim successful authentication have occur .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1395",
            "value": {
                "id": "1395",
                "name": "Dependency on Vulnerable Third-Party Component",
                "description": "The product has a dependency on a third-party component that contains one or more known vulnerabilities.",
                "extended_description": " many product be large enough or complex enough part functionality use library , module , or other intellectual property develop third party be not product creator . example , even entire operating system might be third - party supplier hardware product . open or closed source , component may contain publicly know vulnerability could be exploit adversary to compromise product .",
                "child_of": [
                    "657"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": " consequence vary widely , depend vulnerability exist component ; how vulnerability can be \" reach \" adversary , exploitation path and attack surface will vary depend how component be use ; and criticality privilege level and feature product rely component .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1188",
            "value": {
                "id": "1188",
                "name": "Insecure Default Initialization of Resource",
                "description": "The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.",
                "extended_description": " developer often choose default value leave product open and easy to use possible - - - box , assumption administrator can ( or should ) change default value .   however , ease - - use come cost when default be insecure and administrator do not change .",
                "child_of": [
                    "665"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "241",
            "value": {
                "id": "241",
                "name": "Improper Handling of Unexpected Data Type",
                "description": "The product does not handle or incorrectly handles when a particular element is not the expected type, e.g. it expects a digit (0-9) but is provided with a letter (A-Z).",
                "extended_description": "",
                "child_of": [
                    "228"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " varie context",
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "690",
            "value": {
                "id": "690",
                "name": "Unchecked Return Value to NULL Pointer Dereference",
                "description": "The product does not check for an error after calling a function that can return with a NULL pointer if the function fails, which leads to a resultant NULL pointer dereference.",
                "extended_description": " unchecked return value weakness be not limit return null pointer ( see example cwe-252 ) , function often return null to indicate error status . when error condition be not check , null pointer dereference can occur .",
                "child_of": [
                    "252"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command",
                    " read memory",
                    " modify memory"
                ],
                "con_note": " rare circumstance , when null be equivalent 0x0 memory address and privileged code can access , then write or reading memory be possible , may lead code execution .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "154",
            "value": {
                "id": "154",
                "name": "Improper Neutralization of Variable Name Delimiters",
                "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as variable name delimiters when they are sent to a downstream component.",
                "extended_description": " datum be parse , inject delimiter may cause process to take unexpected action result attack . example : \" $ \" environment variable .",
                "child_of": [
                    "138"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "926",
            "value": {
                "id": "926",
                "name": "Improper Export of Android Application Components",
                "description": "The Android application exports a component for use by other applications, but does not properly restrict which applications can launch the component or access the data it contains.",
                "extended_description": " attack and consequence improperly export component may depend export component : access exported activity be not restrict , application will be able to launch activity . may allow malicious application to gain access sensitive information , modify internal state application , or trick user interact victim application believe be still interact malicious application . access export service be not restrict , application may start and bind service . depend expose functionality , may allow malicious application to perform unauthorized action , gain access sensitive information , or corrupt internal state application . access content provider be not restrict only expect application , then malicious application might be able to access sensitive datum . note android 4.2 , content provider be automatically export have be explicitly declare not export .",
                "child_of": [
                    "285"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " availability",
                    " integrity",
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state",
                    " dos : crash , exit , or restart",
                    " dos : instability",
                    " varie context",
                    " unexpected state",
                    " gain privileges or assume identity",
                    " dos : crash , exit , or restart",
                    " dos : instability",
                    " varie context",
                    " read application data",
                    " modify application data"
                ],
                "con_note": " other application , possibly untrusted , can read or modify datum be offer content provider .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "450",
            "value": {
                "id": "450",
                "name": "Multiple Interpretations of UI Input",
                "description": "The UI has multiple interpretations of user input but does not prompt the user when it selects the less secure interpretation.",
                "extended_description": "",
                "child_of": [
                    "357"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "940",
            "value": {
                "id": "940",
                "name": "Improper Verification of Source of a Communication Channel",
                "description": "The product establishes a communication channel to handle an incoming request that has been initiated by an actor, but it does not properly verify that the request is coming from the expected origin.",
                "extended_description": " when attacker can successfully establish communication channel untrusted origin , attacker may be able to gain privilege and access unexpected functionality .",
                "child_of": [
                    "923",
                    "346"
                ],
                "con_scope": [
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " varie context"
                ],
                "con_note": " attacker can access functionality be inadvertently accessible source .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1231",
            "value": {
                "id": "1231",
                "name": "Improper Prevention of Lock Bit Modification",
                "description": "The product uses a trusted lock bit for restricting access to registers, address regions, or other resources, but the product does not prevent the value of the lock bit from being modified after it has been set.",
                "extended_description": " integrated circuit and hardware \n\t\t\t   intellectual property ( ip ) core , device configuration \n\t\t\t   control be commonly program device power \n\t\t\t   reset trust firmware or software module ( e.g. , \n\t\t\t   bios / bootloader ) and then lock further \n\t\t\t   modification . behavior be commonly implement use trust lock bit . \n\t\t\t   when set , lock bit disable write protect set \n\t\t\t   register or address region . design or code error \n\t\t\t   implementation lock bit protection feature \n\t\t\t   may allow lock bit to be modify or clear \n\t\t\t   software have be set . attacker might be able to unlock system and \n\t\t\t   feature bit be intend to protect .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " modify memory"
                ],
                "con_note": " register protect lock bit can be modify even when lock be set .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1385",
            "value": {
                "id": "1385",
                "name": "Missing Origin Validation in WebSockets",
                "description": "The product uses a WebSocket, but it does not properly verify that the source of data or communication is valid.",
                "extended_description": " websocket provide bi - directional low latency communication ( real - time ) client and server . websocket be different http connection be long - live , channel will remain open client or server be ready to send message , http , response occur ( typically happen immediately ) , transaction complete . websocket can leverage exist http protocol port 80 and 443 , but be not limit http . websocket can make cross - origin request be not restrict browser - base protection mechanism such same origin policy ( sop ) or cross - origin resource sharing ( cors ) . explicit origin validation , make csrf attack more powerful .",
                "child_of": [
                    "346"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " non - repudiation",
                    " access control"
                ],
                "con_impacts": [
                    " varie context",
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " read application data",
                    " modify application data",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " consequence will vary depend nature functionality be vulnerable csrf . attacker could effectively perform operation victim . victim be administrator or privileged user , consequence may include obtain complete control web application - delete or steal datum , uninstalle product , or use to launch other attack product 's user . attacker have identity victim , scope csrf be limit only victim 's privilege .",
                "alt_term": [
                    " cross - site websocket hijacking ( cswsh )"
                ],
                "alt_desc": [
                    " term be use attack exploit weakness"
                ]
            }
        },
        {
            "name": "758",
            "value": {
                "id": "758",
                "name": "Reliance on Undefined, Unspecified, or Implementation-Defined Behavior",
                "description": "The product uses an API function, data structure, or other entity in a way that relies on properties that are not always guaranteed to hold for that entity.",
                "extended_description": " can lead resultant weakness when require property change , such when product be port different platform or interaction error ( cwe-435 ) occur .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1060",
            "value": {
                "id": "1060",
                "name": "Excessive Number of Inefficient Server-Side Data Accesses",
                "description": "The product performs too many data queries without using efficient data processing functionality such as stored procedures.",
                "extended_description": " issue can make product perform more slowly due computational expense .   relevant code be reachable attacker , then performance problem might introduce vulnerability . interpretation \" too many datum query \" may vary product or developer , cisq recommend default maximum 5 datum query inefficient function / procedure .",
                "child_of": [
                    "1120"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1046",
            "value": {
                "id": "1046",
                "name": "Creation of Immutable Text Using String Concatenation",
                "description": "The product creates an immutable text string using string concatenation operations.",
                "extended_description": " when build string loop feature ( e.g. , for or while loop ) , use + = to append exist string will result creation new object iteration . programming pattern can be inefficient comparison use text buffer datum element . issue can make product perform more slowly . relevant code be reachable attacker , then could be influence to create performance problem .",
                "child_of": [
                    "1176"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "245",
            "value": {
                "id": "245",
                "name": "J2EE Bad Practices: Direct Management of Connections",
                "description": "The J2EE application directly manages connections, instead of using the container's connection management facilities.",
                "extended_description": " j2ee standard forbid direct management connection . require application use container 's resource management facility to obtain connection resource . major web application container provide pool database connection management part resource management framework . duplicate functionality application be difficult and error prone , be part reason be forbid j2ee standard .",
                "child_of": [
                    "695"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "237",
            "value": {
                "id": "237",
                "name": "Improper Handling of Structural Elements",
                "description": "The product does not handle or incorrectly handles inputs that are related to complex structures.",
                "extended_description": "",
                "child_of": [
                    "228"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1082",
            "value": {
                "id": "1082",
                "name": "Class Instance Self Destruction Control Element",
                "description": "The code contains a class instance that calls the method or function to delete or destroy itself.",
                "extended_description": " example , c++ , \" delete \" will cause object to delete . issue can prevent product run reliably .   relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "1076"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "332",
            "value": {
                "id": "332",
                "name": "Insufficient Entropy in PRNG",
                "description": "The lack of entropy available for, or used by, a Pseudo-Random Number Generator (PRNG) can be a stability and security threat.",
                "extended_description": "",
                "child_of": [
                    "331"
                ],
                "con_scope": [
                    " availability",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " bypass protection mechanism",
                    " other"
                ],
                "con_note": " prng be use limit entropy source run out , and generator fail open , generator could produce predictable random number . potentially weak source random number could weaken encryption method use authentication user .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "346",
            "value": {
                "id": "346",
                "name": "Origin Validation Error",
                "description": "The product does not properly verify that the source of data or communication is valid.",
                "extended_description": "",
                "child_of": [
                    "345",
                    "284"
                ],
                "con_scope": [
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " varie context"
                ],
                "con_note": " attacker can access functionality be inadvertently accessible source .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1088",
            "value": {
                "id": "1088",
                "name": "Synchronous Access of Remote Resource without Timeout",
                "description": "The code has a synchronous call to a remote resource, but there is no timeout for the call, or the timeout is set to infinite.",
                "extended_description": " issue can prevent product run reliably , outage remote resource can cause product to hang .   relevant code be reachable attacker , then reliability problem might introduce vulnerability .",
                "child_of": [
                    "821"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce reliability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "345",
            "value": {
                "id": "345",
                "name": "Insufficient Verification of Data Authenticity",
                "description": "The product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.",
                "extended_description": "",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " varie context",
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "200",
            "value": {
                "id": "200",
                "name": "Exposure of Sensitive Information to an Unauthorized Actor",
                "description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
                "extended_description": " be many different kind mistake introduce information exposure . severity error can range widely , depend context product operate , type sensitive information be reveal , and benefit may provide attacker .   kind sensitive information include : private , personal information , such personal message , financial datum , health record , geographic location , or contact detailssystem status and environment , such operating system and instal packagesbusiness secret and intellectual propertynetwork status and configurationthe product 's own code or internal statemetadata , e.g. log connection or message headersindirect information , such discrepancy two internal operation can be observe outsiderinformation might be sensitive different party , may have own expectation information should be protect .   party include : product 's own userspeople or organization whose information be create or use product , even be not direct product usersthe product 's administrator , include admin system(s ) and/or network product operatesthe developerinformation exposure can occur different way : code explicitly insertssensitive information resource or message be intentionally make accessible unauthorized actor , but should not contain information - i.e. , information should have be \" scrub \" or \" sanitized\"a different weakness or mistake indirectly sensitive information resource , such web script error reveal full system path program.the code manage resource intentionally contain sensitive information , but resource be unintentionally make accessibleto unauthorized actor . case , information exposure be resultant - i.e. , different weakness enable access information first place . be common practice to describe loss confidentiality \" information exposure , \" but can lead overuse cwe-200 cwe mapping . cwe perspective , loss confidentiality be technical impact can arise dozen different weakness , such insecure file permission or out - - bound read .   cwe-200 and low - level descendant be intend to cover mistake occur behavior explicitly manage , store , transfer , or cleanse sensitive information .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [
                    " information disclosure",
                    " information leak"
                ],
                "alt_desc": [
                    " term be frequently use vulnerability advisory to describe consequence or technical impact , vulnerability have loss confidentiality . often , cwe-200 can be misuse to represent loss confidentiality , even when mistake - i.e. , weakness - be not directly relate mishandling information , such out - - bound read access sensitive memory content ; here , - - bound read be primary weakness , not disclosure memory .   addition , phrase be also use frequently policy and legal document , but do not refer disclosure security - relevant information .",
                    " be frequently use term , however \" leak \" term have multiple use security . case deal accidental exposure information different weakness , but other case ( such \" memory leak \" ) , deal improper tracking resource , can lead exhaustion . result , cwe be actively avoid usage \" leak \" term ."
                ]
            }
        },
        {
            "name": "437",
            "value": {
                "id": "437",
                "name": "Incomplete Model of Endpoint Features",
                "description": "A product acts as an intermediary or monitor between two or more endpoints, but it does not have a complete model of an endpoint's features, behaviors, or state, potentially causing the product to perform incorrect actions based on this incomplete model.",
                "extended_description": "",
                "child_of": [
                    "436"
                ],
                "con_scope": [
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " unexpected state",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "515",
            "value": {
                "id": "515",
                "name": "Covert Storage Channel",
                "description": "A covert storage channel transfers information through the setting of bits by one program and the reading of those bits by another. What distinguishes this case from that of ordinary operation is that the bits are used to convey encoded information.",
                "extended_description": " covert storage channel occur when - - band datum be store message purpose memory reuse . covert channel be frequently classify storage or timing channel . example would include use file intend to hold only audit information to convey user password -- use name file or perhaps status bit associate can be read user to signal content file . steganography , conceal information such manner one intend recipient know existence message , be good example covert storage channel .",
                "child_of": [
                    "514"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data",
                    " read application data"
                ],
                "con_note": " message or packet be send unnecessary datum contain , may tip off malicious listener process create message . information , attacker may learn number thing , include hardware platform , operating system , or algorithm use sender . information can be significant value user launch further attack .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "43",
            "value": {
                "id": "43",
                "name": "Path Equivalence: 'filename....' (Multiple Trailing Dot)",
                "description": "The product accepts path input in the form of multiple trailing dot ('filedir....') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "42",
                    "163"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "523",
            "value": {
                "id": "523",
                "name": "Unprotected Transport of Credentials",
                "description": "Login pages do not use adequate measures to protect the user name and password while they are in transit from the client to the server.",
                "extended_description": "",
                "child_of": [
                    "522"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "38",
            "value": {
                "id": "38",
                "name": "Path Traversal: '\\absolute\\pathname\\here'",
                "description": "The product accepts input in the form of a backslash absolute path ('\\absolute\\pathname\\here') without appropriate validation, which can allow an attacker to traverse the file system to unintended locations or access arbitrary files.",
                "extended_description": "",
                "child_of": [
                    "36"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read files or directory",
                    " modify files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1277",
            "value": {
                "id": "1277",
                "name": "Firmware Not Updateable",
                "description": "The product does not provide its users with the ability to update or patch its firmware to address any vulnerabilities or weaknesses that may be present.",
                "extended_description": " ability to \n\t\t\t patch or update firmware , consumer will be \n\t\t\t leave vulnerable exploitation know \n\t\t\t vulnerability , or vulnerability \n\t\t\t be discover future . can expose \n\t\t\t consumer permanent risk \n\t\t\t entire lifetime device , could be \n\t\t\t year or decade . external protective \n\t\t\t measure and mitigation might be employ \n\t\t\t aid prevent or reduce risk \n\t\t\t malicious attack , but root weakness can not \n\t\t\t be correct .",
                "child_of": [
                    "1329"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control",
                    " authentication",
                    " authorization"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " execute unauthorized code or command",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " attacker can identify exploitable vulnerability one device have mean patching , attack may be use entire class device .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "215",
            "value": {
                "id": "215",
                "name": "Insertion of Sensitive Information Into Debugging Code",
                "description": "The product inserts sensitive information into debugging code, which could expose this information if the debugging code is not disabled in production.",
                "extended_description": " when debug , may be necessary to report detailed information programmer .   however , debugging code be not disabled when product be operate production environment , then sensitive information may be expose attacker . \n\t ",
                "child_of": [
                    "200"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "558",
            "value": {
                "id": "558",
                "name": "Use of getlogin() in Multithreaded Application",
                "description": "The product uses the getlogin() function in a multithreaded context, potentially causing it to return incorrect values.",
                "extended_description": " getlogin ( ) function return pointer string contain name user associate calling process . function be not reentrant , mean be call process , content be not lock out and value string can be change process . make very risky to use username can be change other process , so result function can not be trust .",
                "child_of": [
                    "663"
                ],
                "con_scope": [
                    " integrity",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " modify application data",
                    " bypass protection mechanism",
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "590",
            "value": {
                "id": "590",
                "name": "Free of Memory not on the Heap",
                "description": "The product calls free() on a pointer to memory that was not allocated using associated heap allocation functions such as malloc(), calloc(), or realloc().",
                "extended_description": " when free ( ) be call invalid pointer , program 's memory management datum structure may become corrupt . corruption can cause program to crash or , circumstance , attacker may be able to cause free ( ) to operate controllable memory location to modify critical program variable or execute code .",
                "child_of": [
                    "762"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " modify memory"
                ],
                "con_note": " be potential arbitrary code execution privilege vulnerable program \" write , where \" primitive . pointer memory hold user information be free , malicious user will be able to write 4 byte anywhere memory .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1282",
            "value": {
                "id": "1282",
                "name": "Assumed-Immutable Data is Stored in Writable Memory",
                "description": "Immutable data, such as a first-stage bootloader, device identifiers, and \"write-once\" configuration settings are stored in writable memory that can be re-programmed or updated in the field.",
                "extended_description": " security service such secure boot , authentication code and datum , and device attestation require asset such first stage bootloader , public key , golden hash digest , etc . be implicitly trust . store asset read - only memory ( rom ) , fuse , or one - time programmable ( otp ) memory provide strong integrity guarantee and provide root trust secure rest system . security be lose asset assume to be immutable can be modify .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "243",
            "value": {
                "id": "243",
                "name": "Creation of chroot Jail Without Changing Working Directory",
                "description": "The product uses the chroot() system call to create a jail, but does not change the working directory afterward. This does not prevent access to files outside of the jail.",
                "extended_description": " improper use chroot ( ) may allow attacker to escape chroot jail . chroot ( ) function call do not change process 's current work directory , so relative path may still refer file system resource chroot jail chroot ( ) have be call .",
                "child_of": [
                    "573",
                    "669"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read files or directory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "323",
            "value": {
                "id": "323",
                "name": "Reusing a Nonce, Key Pair in Encryption",
                "description": "Nonces should be used for the present occasion and only once.",
                "extended_description": "",
                "child_of": [
                    "344"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": " potentially replay attack , attacker could send same datum twice , could be craft nonce be allow to be reuse . could allow user to send message masquerade valid message valid user .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "336",
            "value": {
                "id": "336",
                "name": "Same Seed in Pseudo-Random Number Generator (PRNG)",
                "description": "A Pseudo-Random Number Generator (PRNG) uses the same seed each time the product is initialized.",
                "extended_description": " give deterministic nature prngs , use same seed initialization will lead same output same order . attacker can guess ( or know ) seed , then attacker may be able to determine random number will be produce prng .",
                "child_of": [
                    "335"
                ],
                "con_scope": [
                    " other",
                    " access control"
                ],
                "con_impacts": [
                    " other",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "341",
            "value": {
                "id": "341",
                "name": "Predictable from Observable State",
                "description": "A number or object is predictable based on observations that the attacker can make about the state of the system or network, such as time, process ID, etc.",
                "extended_description": "",
                "child_of": [
                    "340"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": " weakness could be exploit attacker number way depend context . predictable number be use to generate id or key be use protection mechanism , then attacker could gain unauthorized access system . predictable filename be use store sensitive information , then attacker might gain access system and may be able to gain access information file .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "862",
            "value": {
                "id": "862",
                "name": "Missing Authorization",
                "description": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
                "extended_description": " assume user give identity , authorization be process determine user can access give resource , base user 's privilege and permission or other access - control specification apply resource . when access control check be not apply , user be able to access datum or perform action should not be allow to perform . can lead wide range problem , include information exposure , denial service , and arbitrary code execution .",
                "child_of": [
                    "285"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control"
                ],
                "con_impacts": [
                    " read application data",
                    " read files or directory",
                    " modify application data",
                    " modify files or directory",
                    " gain privileges or assume identity",
                    " bypass protection mechanism"
                ],
                "con_note": " attacker could gain privilege modify or read critical datum directly , or access privileged functionality .",
                "alt_term": [
                    " authz"
                ],
                "alt_desc": [
                    " \" authz \" be typically use abbreviation \" authorization \" web application security community . be distinct \" authn \" ( or , sometimes , \" authc \" ) be abbreviation \" authentication . \" use \" auth \" abbreviation be discourage , could be use authentication or authorization ."
                ]
            }
        },
        {
            "name": "650",
            "value": {
                "id": "650",
                "name": "Trusting HTTP Permission Methods on the Server Side",
                "description": "The server contains a protection mechanism that assumes that any URI that is accessed using HTTP GET will not cause a state change to the associated resource. This might allow attackers to bypass intended access restrictions and conduct resource modification and deletion attacks, since some applications allow GET to modify state.",
                "extended_description": " http get method and other method be design to retrieve resource and not to alter state application or resource server side . furthermore , http specification require get request ( and other request ) should not have side effect . believe will be enough to prevent unintended resource alteration , application may disallow http request to perform delete , put and post operation resource representation . however , be http protocol actually prevent http get method perform more just query datum . developer can easily code program accept http get request do fact create , update or delete datum server . instance , be common practice rest base web services to have http get request modify resource server side . however , whenever happen , access control need to be properly enforce application . assumption should be make only http delete , put , post , and other method have power to alter representation resource be access request .",
                "child_of": [
                    "436"
                ],
                "con_scope": [
                    " access control",
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " modify application data",
                    " read application data"
                ],
                "con_note": " attacker could obtain sensitive information .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1059",
            "value": {
                "id": "1059",
                "name": "Insufficient Technical Documentation",
                "description": "The product does not contain sufficient technical or engineering documentation (whether on paper or in electronic form) that contains descriptions of all the relevant software/hardware elements of the product, such as its usage, structure, architectural components, interfaces, design, implementation, configuration, operation, etc.",
                "extended_description": " when technical documentation be limited or lacking , product be more difficult to maintain .   indirectly affect security make more difficult or time - consume to find and/or fix vulnerability . when use time - limit or labor - limit third - party / - house security consulting service ( such threat modeling , vulnerability discovery , or pentesting ) , insufficient documentation can force consultant to invest unnecessary time learn how product be organize , instead focus expertise find flaw or suggest effective mitigation . respect hardware design , lack formal , final manufacturer reference can make difficult or impossible to evaluate final product , include post - manufacture verification . can not ensure design functionality or operation be acceptable tolerance , conform specification , and be free unexpected behavior . hardware - relate documentation may include engineering artifact such hardware description language ( hdls ) , netlist , gerber file , bills materials , eda ( electronic design automation ) tool file , etc .",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context",
                    " hide activity",
                    " reduce reliability",
                    " quality degradation",
                    " reduce maintainability"
                ],
                "con_note": " method verification , can not be sure only function expect .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1176",
            "value": {
                "id": "1176",
                "name": "Inefficient CPU Computation",
                "description": "The product performs CPU computations using algorithms that are not as efficient as they could be for the needs of the developer, i.e., the computations can be optimized further.",
                "extended_description": " issue can make product perform more slowly , possibly way be noticeable user .   attacker can influence amount computation must be perform , e.g. trigger bad - case complexity , then performance problem might introduce vulnerability .",
                "child_of": [
                    "405"
                ],
                "con_scope": [
                    " availability",
                    " other"
                ],
                "con_impacts": [
                    " dos : resource consumption ( cpu )",
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1229",
            "value": {
                "id": "1229",
                "name": "Creation of Emergent Resource",
                "description": "The product manages resources or behaves in a way that indirectly creates a new, distinct resource that can be used by attackers in violation of the intended policy.",
                "extended_description": " product be only expect to behave way be specifically intend developer .   resource allocation and management be expect to be perform explicitly associated code .   however , system complex behavior , product might indirectly produce new kind resource be never intend original design .   example , covert channel be resource be never explicitly intend developer , but be useful attacker .   \" parasitic computing , \" not necessarily malicious nature , effectively trick product perform unintended computation behalf party .",
                "child_of": [
                    "664"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "98",
            "value": {
                "id": "98",
                "name": "Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
                "description": "The PHP application receives input from an upstream component, but it does not restrict or incorrectly restricts the input before its usage in \"require,\" \"include,\" or similar functions.",
                "extended_description": " certain version and configuration php , can allow attacker to specify url remote location product will obtain code to execute . other case association path traversal , attacker can specify local file may contain executable statement can be parse php .",
                "child_of": [
                    "706",
                    "829"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": " attacker may be able to specify arbitrary code to be execute remote location . alternatively , may be possible to use normal program behavior to insert php code file local machine can then be include and force code to execute php ignore file content php specifier .",
                "alt_term": [
                    " remote file include",
                    " rfi",
                    " local file inclusion"
                ],
                "alt_desc": [
                    " remote file inclusion ( rfi ) acronym be often use vulnerability researcher .",
                    " term be frequently use case remote download be disabled , or when first part filename be not attacker 's control , force use relative path traversal ( cwe-23 ) attack technique to access file may contain previously - inject php code , such web access log ."
                ]
            }
        },
        {
            "name": "1338",
            "value": {
                "id": "1338",
                "name": "Improper Protections Against Hardware Overheating",
                "description": "A hardware device is missing or has inadequate protection features to prevent overheating.",
                "extended_description": " hardware , electrical circuit , and semiconductor silicon have thermal side effect , such energy consume device gets dissipate heat and increase temperature device . example , semiconductor , higher - operate frequency silicon result high power dissipation and heat . leakage current cmos circuit increase temperature , and create positive feedback can result thermal runaway and damage device permanently . device lack protection such thermal sensor , adequate platform cooling , or thermal insulation be susceptible attack malicious software might deliberately operate device mode result overheat . can be use effective denial service ( dos ) or permanent denial service ( pdos ) attack . depend type hardware device and expect usage , such thermal overheating can also cause safety hazard and reliability issue . note battery failure can also cause device overheat but mitigation and example include submission can not reliably protect battery failure . can be similar weakness lack protection attack base overvoltage or overcurrent condition . however , thermal heat be generate hardware operation and device should implement protection overheat .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : resource consumption ( other )"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "641",
            "value": {
                "id": "641",
                "name": "Improper Restriction of Names for Files and Other Resources",
                "description": "The product constructs the name of a file or other resource using input from an upstream component, but it does not restrict or incorrectly restricts the resulting name.",
                "extended_description": " may produce resultant weakness . instance , name resource contain script character , be possible script may get execute client 's browser application ever display name resource dynamically generate web page . alternately , resource be consume application parser , specially craft name can exploit vulnerability internal parser , potentially result execution arbitrary code server machine . problem will vary base context usage such malformed resource name and vulnerability be present or assumption be make target technology would make code execution possible .",
                "child_of": [
                    "99"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality",
                    " availability",
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " read application data",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " crash consumer code resource result information leakage or denial service .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "210",
            "value": {
                "id": "210",
                "name": "Self-generated Error Message Containing Sensitive Information",
                "description": "The product identifies an error condition and creates its own diagnostic or error messages that contain sensitive information.",
                "extended_description": "",
                "child_of": [
                    "209"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "315",
            "value": {
                "id": "315",
                "name": "Cleartext Storage of Sensitive Information in a Cookie",
                "description": "The product stores sensitive information in cleartext in a cookie.",
                "extended_description": " attacker can use widely - available tool to view cookie and read sensitive information . even information be encode way be not human - readable , certain technique could determine which encoding be be use , then decode information .",
                "child_of": [
                    "312"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1291",
            "value": {
                "id": "1291",
                "name": "Public Key Re-Use for Signing both Debug and Production Code",
                "description": "The same public key is used for signing both debug and production code.",
                "extended_description": " common usage public - key cryptography be to verify integrity and authenticity entity ( example firmware binary ) . company want to ensure firmware run only own hardware , firmware run , encrypt hash firmware image will be decrypt public key and then verify now - compute hash firmware image . mean public key form root trust , necessitate public key must be protect and use properly . development phase , debug firmware enable many hardware debug hook , debug mode , and debug message testing . debug facility provide significant , additional view firmware 's capability and , case , additional capability chip or soc. compromise , capability could be exploit attacker to take full control system . product exit manufacturing stage and enter production , be good practice to use different public key . debug firmware image be know to leak . debug key being reuse production key , debug image will also work production image . thus , will open all internal , debug capability attacker . different public key be use production image , even attacker gain access debug firmware image , will not be able to run production machine . thus , damage will be limit intellectual property leakage result debug image .",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control",
                    " accountability",
                    " authentication",
                    " authorization",
                    " non - repudiation",
                    " other"
                ],
                "con_impacts": [
                    " read memory",
                    " modify memory",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "510",
            "value": {
                "id": "510",
                "name": "Trapdoor",
                "description": "A trapdoor is a hidden piece of code that responds to a special input, allowing its user access to resources without passing through the normal security enforcement mechanism.",
                "extended_description": "",
                "child_of": [
                    "506"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "223",
            "value": {
                "id": "223",
                "name": "Omission of Security-relevant Information",
                "description": "The product does not record or display information that would be important for identifying the source or nature of an attack, or determining if an action is safe.",
                "extended_description": "",
                "child_of": [
                    "221"
                ],
                "con_scope": [
                    " non - repudiation"
                ],
                "con_impacts": [
                    " hide activity"
                ],
                "con_note": " source attack will be difficult or impossible to determine . can allow attack system to continue notice .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1190",
            "value": {
                "id": "1190",
                "name": "DMA Device Enabled Too Early in Boot Phase",
                "description": "The product enables a Direct Memory Access (DMA) capable device before the security configuration settings are established, which allows an attacker to extract data from or gain privileges on the product.",
                "extended_description": " dma be include number device allow \n               data transfer computer and connected device , use \n               direct hardware access to read or write directly main memory \n               os interaction . attacker could exploit to \n               access secret . several virtualization - base mitigation have be introduce to thwart dma attack . be usually \n               configure / setup boot time . however , certain ip be \n               power up boot be complete ( know early boot ip ) may \n               be dma capable . such ip , not trust , could launch dma \n               attack and gain access asset should otherwise be \n               protect .",
                "child_of": [
                    "696"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " modify memory"
                ],
                "con_note": " dma device have direct write access main memory and \n                  due time attack will be able to bypass os or bootloader \n                  access control .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "620",
            "value": {
                "id": "620",
                "name": "Unverified Password Change",
                "description": "When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.",
                "extended_description": " could be use attacker to change password user , thus gain privilege associate user .",
                "child_of": [
                    "1390"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "571",
            "value": {
                "id": "571",
                "name": "Expression is Always True",
                "description": "The product contains an expression that will always evaluate to true.",
                "extended_description": "",
                "child_of": [
                    "710"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " quality degradation",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1247",
            "value": {
                "id": "1247",
                "name": "Improper Protection Against Voltage and Clock Glitches",
                "description": "The device does not contain or contains incorrectly implemented circuitry or sensors to detect and mitigate voltage and clock glitches and protect sensitive information or software contained on the device.",
                "extended_description": " device might support feature such secure boot be supplement hardware and firmware support . involve establish chain trust , start immutable root trust check signature next stage ( culminate os and runtime software ) golden value transfer control . intermediate stage typically set up system secure state configure several access control setting . similarly , security logic exercise debug or testing interface may be implement hardware , firmware , or . device need to guard fault attack such voltage glitch and clock glitch attacker may employ attempt to compromise system .",
                "child_of": [
                    "1384"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " read memory",
                    " modify memory",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "423",
            "value": {
                "id": "423",
                "name": "DEPRECATED: Proxied Trusted Channel",
                "description": "This entry has been deprecated because it was a duplicate ofCWE-441. All content has been transferred toCWE-441.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "787",
            "value": {
                "id": "787",
                "name": "Out-of-bounds Write",
                "description": "The product writes data past the end, or before the beginning, of the intended buffer.",
                "extended_description": " typically , can result corruption datum , crash , or code execution .   product may modify index or perform pointer arithmetic reference memory location be outside boundary buffer .   subsequent write operation then produce undefined or unexpected result .",
                "child_of": [
                    "119"
                ],
                "con_scope": [
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " modify memory",
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [
                    " memory corruption"
                ],
                "alt_desc": [
                    " often use to describe consequence write memory bound buffer , or memory be invalid , when root cause be other sequential copy excessive datum fix starting location . may include issue such incorrect pointer arithmetic , access invalid pointer incomplete initialization or memory release , etc ."
                ]
            }
        },
        {
            "name": "444",
            "value": {
                "id": "444",
                "name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
                "description": "The product acts as an intermediary HTTP agent (such as a proxy or firewall) in the data flow between two entities such as a client and server, but it does not interpret malformed HTTP requests or responses in ways that are consistent with how the messages will be processed by those entities that are at the ultimate destination.",
                "extended_description": " http request or response ( \" message \" ) can be \n\t    malforme or unexpected way cause web server or \n\t    client to interpret message different way \n\t    intermediary http agent such load balancer , reverse \n\t    proxy , web cache proxy , application firewall , \n\t    etc . example , adversary may be able to add duplicate \n\t    or different header field client or server might \n\t    interpret one set message , intermediary \n\t    might interpret same sequence bytes different \n\t    set message . example , discrepancy can arise \n\t    how to handle duplicate header two transfer - encoding \n\t    ( te ) or two content - length ( cl ) , or malicious http \n\t    message will have different header te and \n\t    inconsistent parsing and interpretation message \n\t    can allow adversary to \" smuggle \" message \n\t    client / server intermediary be aware . weakness be usually result usage \n\t    outdated or incompatible http protocol version \n\t    http agent .",
                "child_of": [
                    "436"
                ],
                "con_scope": [
                    " integrity",
                    " non - repudiation",
                    " access control"
                ],
                "con_impacts": [
                    " unexpected state",
                    " hide activity",
                    " bypass protection mechanism"
                ],
                "con_note": " attacker could create http message to exploit number weakness include 1 ) message can trick web server to associate url url 's webpage and cache content webpage ( web cache poisoning attack ) , 2 ) message can be structure to bypass firewall protection mechanism and gain unauthorized access web application , and 3 ) message can invoke script or page return client credential ( similar cross site scripting attack ) .",
                "alt_term": [
                    " http request smuggling",
                    " http response smuggling",
                    " http smuggling"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "413",
            "value": {
                "id": "413",
                "name": "Improper Resource Locking",
                "description": "The product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource.",
                "extended_description": " when resource be not properly lock , attacker could modify resource be be operate product . might violate product 's assumption resource will not change , potentially lead unexpected behavior .",
                "child_of": [
                    "667"
                ],
                "con_scope": [
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " modify application data",
                    " dos : instability",
                    " dos : crash , exit , or restart"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1220",
            "value": {
                "id": "1220",
                "name": "Insufficient Granularity of Access Control",
                "description": "The product implements access controls via a policy or other feature with the intention to disable or restrict accesses (reads and/or writes) to assets in a system from untrusted agents. However, implemented access controls lack required granularity, which renders the control policy too broad because it allows accesses from unauthorized agents to the security-sensitive assets.",
                "extended_description": " integrated circuit and hardware engine can expose access asset ( device configuration , key , etc . ) trust firmware or software module ( commonly set bios / bootloader ) . access be typically access - control . power reset , hardware or system usually start default value register , and trust firmware ( boot firmware ) configure necessary access - control protection . common weakness can exist such protection scheme be access control or policy be not granular enough . condition allow agent trust agent access asset and could lead loss functionality or ability to set up device securely . further result security risk leak , sensitive , key material modification device configuration .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "267",
            "value": {
                "id": "267",
                "name": "Privilege Defined With Unsafe Actions",
                "description": "A particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.",
                "extended_description": "",
                "child_of": [
                    "269"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " user can access restricted functionality and/or sensitive information may include administrative functionality and user account .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "209",
            "value": {
                "id": "209",
                "name": "Generation of Error Message Containing Sensitive Information",
                "description": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
                "extended_description": " sensitive information may be valuable information own ( such password ) , or may be useful launch other , more serious attack . error message may be create different way : self - generate : source code explicitly construct error message and deliver itexternally - generate : external environment , such language interpreter , handle error and construct own message , whose content be not direct control programmeran attacker may use content error message to help launch , more focused attack . example , attempt to exploit path traversal weakness ( cwe-22 ) might yield full pathname instal application . turn , could be use to select proper number \" .. \" sequence to navigate targeted file . attack use sql injection ( cwe-89 ) might not initially succeed , but error message could reveal malformed query , would expose query logic and possibly even password or other sensitive information use query .",
                "child_of": [
                    "200",
                    "755"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": " often will either reveal sensitive information may be use later attack or private information store server .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1317",
            "value": {
                "id": "1317",
                "name": "Improper Access Control in Fabric Bridge",
                "description": "The product uses a fabric bridge for transactions between two Intellectual Property (IP) blocks, but the bridge does not properly perform the expected privilege, identity, or other access control checks between those IP blocks.",
                "extended_description": " hardware design , different ip block be connect interconnect - bus fabric ( e.g. ahb and ocp ) . system chip ( soc ) , ip block subsystem could be use different bus protocol . such case , ip block be then link central bus ( and other ip block ) fabric bridge . bridge be use bus - interconnect - route module link different protocol or separate , different segment overall soc interconnect . overall system security , be important access - control privilege associate fabric transaction be consistently maintain and apply , even when be route or translate fabric bridge . bridge be connect fabric security feature transaction slave check privilege level master and result weakness soc access - control security . same weakness occur bridge do not check hardware identity transaction receive slave interface bridge .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control",
                    " availability"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " bypass protection mechanism",
                    " read memory",
                    " modify memory"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "703",
            "value": {
                "id": "703",
                "name": "Improper Check or Handling of Exceptional Conditions",
                "description": "The product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [
                    " confidentiality",
                    " availability",
                    " integrity"
                ],
                "con_impacts": [
                    " read application data",
                    " dos : crash , exit , or restart",
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1319",
            "value": {
                "id": "1319",
                "name": "Improper Protection against Electromagnetic Fault Injection (EM-FI)",
                "description": "The device is susceptible to electromagnetic fault injection attacks, causing device internal information to be compromised or security mechanisms to be bypassed.",
                "extended_description": " electromagnetic fault injection may allow attacker locally and dynamically modify signal ( both internal and external ) integrated circuit . em - fi attack consist produce local , transient magnetic field device , induce current device wire . typical emfi setup be make up pulse injection circuit generate high current transient emi coil , produce abrupt magnetic pulse couple target produce fault device , can lead : bypass security mechanism such secure jtag or secure bootleaking device informationmodifye program flowperturbe secure hardware module ( e.g. random number generator )",
                "child_of": [
                    "693"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " access control",
                    " availability"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1330",
            "value": {
                "id": "1330",
                "name": "Remanent Data Readable after Memory Erase",
                "description": "Confidential information stored in memory circuits is readable or recoverable after being cleared or erased.",
                "extended_description": " datum remanence occur when store , memory content be not fully lose memory - clear or -erase operation . confidential memory content can still be readable data remanence hardware . datum remanence can occur performance optimization or memory organization ' clear ' or ' erase ' operation , design allow memory - organization metadata ( e.g. , file pointer ) to be erase erase actual memory content . to protect weakness , memory device will often support different command optimize memory erase and explicit secure erase . datum remanence can also happen physical property memory circuit use . example , static , random - access - memory ( sram ) and dynamic , random - access - memory ( dram ) datum retention be base charge retain memory cell , depend factor such power supply , refresh rate , and temperature . other explicit erase command , self - encrypting , secure - memory device can also support secure erase cryptographic erase command . such design , only decryption key encrypted datum store device be erase . is , store datum be always remnant medium cryptographic erase . however , only encrypt datum can be extract . thus , protection data recovery such design rely strength encryption algorithm .",
                "child_of": [
                    "1301"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory"
                ],
                "con_note": " confidential datum be readable untrusted agent .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "405",
            "value": {
                "id": "405",
                "name": "Asymmetric Resource Consumption (Amplification)",
                "description": "The product does not properly control situations in which an adversary can cause the product to consume or produce excessive resources without requiring the adversary to invest equivalent work or otherwise prove authorization, i.e., the adversary's influence is \"asymmetric.\"",
                "extended_description": " can lead poor performance \" amplification \" resource consumption , typically non - linear fashion .   situation be worsen product allow malicious user or attacker to consume more resource access level permit .",
                "child_of": [
                    "400"
                ],
                "con_scope": [
                    " availability"
                ],
                "con_impacts": [
                    " dos : amplification",
                    " dos : resource consumption ( cpu )",
                    " dos : resource consumption ( memory )",
                    " dos : resource consumption ( other )"
                ],
                "con_note": " sometimes be factor \" flood \" attack , but other type amplification exist .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "695",
            "value": {
                "id": "695",
                "name": "Use of Low-Level Functionality",
                "description": "The product uses low-level functionality that is explicitly prohibited by the framework or specification under which the product is supposed to operate.",
                "extended_description": " use low - level functionality can violate specification unexpected way effectively disable build - in protection mechanism , introduce exploitable inconsistency , or otherwise expose functionality to attack .",
                "child_of": [
                    "573"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1262",
            "value": {
                "id": "1262",
                "name": "Improper Access Control for Register Interface",
                "description": "The product uses memory-mapped I/O registers that act as an interface to hardware functionality from software, but there is improper access control to those registers.",
                "extended_description": " software commonly access peripheral system - - chip ( soc ) or other device memory - map register interface . malicious software could tamper security - critical hardware datum be accessible directly or indirectly register interface , could lead loss confidentiality and integrity .",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " read memory",
                    " read application data",
                    " modify memory",
                    " modify application data",
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " unexpected state",
                    " alter execution logic"
                ],
                "con_note": " confidentiality hardware asset may be violate protect information can be read out software register interface . register store security state , setting , other security - critical datum may be corruptible software correctly implement protection .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "626",
            "value": {
                "id": "626",
                "name": "Null Byte Interaction Error (Poison Null Byte)",
                "description": "The product does not properly handle null bytes or NUL characters when passing data between different representations or components.",
                "extended_description": " null byte ( nul character ) can have different meaning representation or language . example , be string terminator standard c library , but perl and php string do not treat terminator . when two representation be cross - such when perl or php invoke underlie c functionality - can produce interaction error unexpected result . similar issue have be report asp . other interpreter write c might also be affect . poison null byte be frequently useful path traversal attack terminate hard - code extension be add filename . can play role regular expression processing php .",
                "child_of": [
                    "147",
                    "436"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1295",
            "value": {
                "id": "1295",
                "name": "Debug Messages Revealing Unnecessary Information",
                "description": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
                "extended_description": " debug message be message help troubleshoot issue reveal internal state system . example , datum design can be expose internal memory array dump or boot log interface uart tap command , scan chain , etc . thus , more information contain debug message , easy be to debug . however , be also risk reveal information could help attacker either decipher vulnerability , and/or gain well understanding system . thus , extra information could lower \" security obscurity \" factor . \" security obscurity \" alone be insufficient , can help part \" defense - - depth \" .",
                "child_of": [
                    "200"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control",
                    " accountability",
                    " authentication",
                    " authorization",
                    " non - repudiation"
                ],
                "con_impacts": [
                    " read memory",
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " varie context"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "354",
            "value": {
                "id": "354",
                "name": "Improper Validation of Integrity Check Value",
                "description": "The product does not validate or incorrectly validates the integrity check values or \"checksums\" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.",
                "extended_description": " improper validation checksum use result unnecessary risk can easily be mitigate . protocol specification describe algorithm use calculate checksum . be then simple matter implement calculation and verifying calculated checksum and receive checksum match . improper verification calculated checksum and receive checksum can lead far great consequence .",
                "child_of": [
                    "345",
                    "754"
                ],
                "con_scope": [
                    " integrity",
                    " other",
                    " integrity",
                    " other",
                    " non - repudiation",
                    " other"
                ],
                "con_impacts": [
                    " modify application data",
                    " other",
                    " other",
                    " hide activity",
                    " other"
                ],
                "con_note": " checksum check , be impossible to determine change have be make datum be send .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "910",
            "value": {
                "id": "910",
                "name": "Use of Expired File Descriptor",
                "description": "The product uses or accesses a file descriptor after it has been closed.",
                "extended_description": " file descriptor particular file or device have be release , can be reuse . code might not write original file , reuse file descriptor might reference different file or device .",
                "child_of": [
                    "672"
                ],
                "con_scope": [
                    " confidentiality",
                    " availability"
                ],
                "con_impacts": [
                    " read files or directory",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " access file descriptor have be close can cause crash .",
                "alt_term": [
                    " stale file descriptor"
                ],
                "alt_desc": []
            }
        },
        {
            "name": "253",
            "value": {
                "id": "253",
                "name": "Incorrect Check of Function Return Value",
                "description": "The product incorrectly checks a return value from a function, which prevents it from detecting errors or exceptional conditions.",
                "extended_description": " important and common function will return value success action . will alert program or not to handle error cause function .",
                "child_of": [
                    "573",
                    "754"
                ],
                "con_scope": [
                    " availability",
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state",
                    " dos : crash , exit , or restart"
                ],
                "con_note": " unexpected return value could place system state could lead crash or other unintended behavior .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "427",
            "value": {
                "id": "427",
                "name": "Uncontrolled Search Path Element",
                "description": "The product uses a fixed or controlled search path to find resources, but one or more locations in that path can be under the control of unintended actors.",
                "extended_description": " weakness can occur type resource , be frequently introduce when product use directory search path to find executable or code library , but path contain directory can be modify attacker , such \" /tmp \" or current work directory . windows - base system , when loadlibrary or loadlibraryex function be call dll name do not contain fully qualified path , function follow search order include two path element might be uncontrolle : directory program have be current work directoryin case , attack can be conduct remotely , such when smb or webdav network share be use . one or more location path could include windows drive root or subdirectory . often exist linux - base code assume control nature root directory ( / ) or subdirectory ( /etc , etc ) , or code recursively access parent directory .   windows , drive root and subdirectory have weak permission default , make uncontrolle . unix - base system , path might be create contain empty element , e.g. splice empty variable path . empty element can be interpret equivalent current work directory , might be untrusted search element . software package management framework ( e.g. , npm , rubygems , or pypi ) , framework may identify dependency third - party library or other package , then consult repository contain desire package . framework may search public repository private repository . could be exploit attacker place malicious package public repository have same name package private repository . search path might not be directly control developer rely framework , but search order effectively contain untrusted element .",
                "child_of": [
                    "668"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability"
                ],
                "con_impacts": [
                    " execute unauthorized code or command"
                ],
                "con_note": "",
                "alt_term": [
                    " dll preloading",
                    " binary planting",
                    " insecure library loading",
                    " dependency confusion"
                ],
                "alt_desc": [
                    " term be one several be use to describe exploitation untrusted search path element windows system , receive wide attention august 2010 . weakness perspective , term be imprecise can apply both cwe-426 and cwe-427 .",
                    " term be one several be use to describe exploitation untrusted search path element windows system , receive wide attention august 2010 . weakness perspective , term be imprecise can apply both cwe-426 and cwe-427 .",
                    " term be one several be use to describe exploitation untrusted search path element windows system , receive wide attention august 2010 . weakness perspective , term be imprecise can apply both cwe-426 and cwe-427 .",
                    " february 2021 , term be use to describe cwe-427 context manage installation software package dependency , attacker release package public site where name be same package name use private repository , and search dependent package try public site first , download untrusted code . may also be refer \" substitution attack . \""
                ]
            }
        },
        {
            "name": "1091",
            "value": {
                "id": "1091",
                "name": "Use of Object without Invoking Destructor Method",
                "description": "The product contains a method that accesses an object but does not later invoke the element's associated finalize/destructor method.",
                "extended_description": " issue can make product perform more slowly retain memory and/or other resource long necessary .   relevant code be reachable attacker , then performance problem might introduce vulnerability .",
                "child_of": [
                    "772",
                    "1076"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce performance"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "324",
            "value": {
                "id": "324",
                "name": "Use of a Key Past its Expiration Date",
                "description": "The product uses a cryptographic key or password past its expiration date, which diminishes its safety significantly by increasing the timing window for cracking attacks against that key.",
                "extended_description": " expiration key do not necessarily ensure be compromise , be significant concern key remain use prolong period time have decrease probability integrity . reason , be important to replace key period time proportional strength .",
                "child_of": [
                    "672"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " gain privileges or assume identity"
                ],
                "con_note": " cryptographic key question may be compromise , provide malicious user method authenticating victim .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "512",
            "value": {
                "id": "512",
                "name": "Spyware",
                "description": "The product collects personally identifiable information about a human user or the user's activities, but the product accesses this information using other resources besides itself, and it does not require that user's explicit approval or direct input into the product.",
                "extended_description": " \" spyware \" be commonly use term many definition and interpretation . general , be mean to refer product collect information or install functionality human user might not allow be fully aware action be take software . example , user might expect tax software would collect social security number and include when file tax return , but same user would not expect gaming software to obtain social security number tax software 's datum .",
                "child_of": [
                    "506"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "540",
            "value": {
                "id": "540",
                "name": "Inclusion of Sensitive Information in Source Code",
                "description": "Source code on a web server or repository often contains sensitive information and should generally not be accessible to users.",
                "extended_description": " be situation where be critical to remove source code area or server . example , obtain perl source code system allow attacker to understand logic script and extract extremely useful information such code bug or login and password .",
                "child_of": [
                    "538"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "202",
            "value": {
                "id": "202",
                "name": "Exposure of Sensitive Information Through Data Queries",
                "description": "When trying to keep information confidential, an attacker can often infer some of the information by using statistics.",
                "extended_description": " situation where datum should not be tie individual user , but large number user should be able to make query \" scrub \" identity user , may be possible to get information user -- e.g. , specify search term be know to be unique user .",
                "child_of": [
                    "1230"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read files or directory",
                    " read application data"
                ],
                "con_note": " sensitive information may possibly be leak datum query accidentally .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "643",
            "value": {
                "id": "643",
                "name": "Improper Neutralization of Data within XPath Expressions ('XPath Injection')",
                "description": "The product uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.",
                "extended_description": " net effect be attacker will have control information select xml database and may use ability to control application flow , modify logic , retrieve unauthorized datum , or bypass important check ( e.g. authentication ) .",
                "child_of": [
                    "943",
                    "91"
                ],
                "con_scope": [
                    " access control",
                    " confidentiality"
                ],
                "con_impacts": [
                    " bypass protection mechanism",
                    " read application data"
                ],
                "con_note": " attacker could read restrict xml content .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "494",
            "value": {
                "id": "494",
                "name": "Download of Code Without Integrity Check",
                "description": "The product downloads source code or an executable from a remote location and executes the code without sufficiently verifying the origin and integrity of the code.",
                "extended_description": " attacker can execute malicious code compromise host server , perform dns spoof , or modify code transit .",
                "child_of": [
                    "345",
                    "669"
                ],
                "con_scope": [
                    " integrity",
                    " availability",
                    " confidentiality",
                    " other"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " alter execution logic",
                    " other"
                ],
                "con_note": " execute untrusted code could compromise control flow program . untrusted code could execute attacker - control command , read or modify sensitive resource , or prevent software function correctly legitimate user .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "213",
            "value": {
                "id": "213",
                "name": "Exposure of Sensitive Information Due to Incompatible Policies",
                "description": "The product's intended functionality exposes information to certain actors in accordance with the developer's security policy, but this information is regarded as sensitive according to the intended security policies of other stakeholders such as the product's administrator, users, or others whose information is being processed.",
                "extended_description": " when handle information , developer must consider information be regard sensitive different stakeholder , such user or administrator .   stakeholder effectively have own intend security policy product be expect to uphold .   when developer do not treat information sensitive , can introduce vulnerability violate expectation product 's user .",
                "child_of": [
                    "200"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1284",
            "value": {
                "id": "1284",
                "name": "Improper Validation of Specified Quantity in Input",
                "description": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
                "extended_description": " specified quantity include size , length , frequency , price , rate , number operation , time , and other . code may rely specify quantity to allocate resource , perform calculation , control iteration , etc . when quantity be not properly validate , then attacker can specify malicious quantity to cause excessive resource allocation , trigger unexpected failure , enable buffer overflow , etc .",
                "child_of": [
                    "20"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " varie context"
                ],
                "con_note": " quantity be use so often to affect resource allocation or process financial datum , be often present many place code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1084",
            "value": {
                "id": "1084",
                "name": "Invokable Control Element with Excessive File or Data Access Operations",
                "description": "A function or method contains too many operations that utilize a data manager or file resource.",
                "extended_description": " issue make more difficult to maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability . interpretation \" too many operation \" may vary product or developer , cisq recommend default maximum 7 operation same data manager or file .",
                "child_of": [
                    "405"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "131",
            "value": {
                "id": "131",
                "name": "Incorrect Calculation of Buffer Size",
                "description": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
                "extended_description": "",
                "child_of": [
                    "682"
                ],
                "con_scope": [
                    " integrity",
                    " availability",
                    " confidentiality"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command",
                    " read memory",
                    " modify memory"
                ],
                "con_note": " incorrect calculation be use context memory allocation , then software may create buffer be small or large expect . allocate buffer be small expect , could lead out - - bound read or write ( cwe-119 ) , possibly cause crash , allow arbitrary code execution , or expose sensitive datum .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "368",
            "value": {
                "id": "368",
                "name": "Context Switching Race Condition",
                "description": "A product performs a series of non-atomic actions to switch between contexts that cross privilege or other security boundaries, but a race condition allows an attacker to modify or misrepresent the product's behavior during the switch.",
                "extended_description": " be commonly see web browser vulnerability attacker can perform certain action browser be transition trust untrusted domain , or vice versa , and browser perform action one domain use trust level and resource other domain .",
                "child_of": [
                    "362"
                ],
                "con_scope": [
                    " integrity",
                    " confidentiality"
                ],
                "con_impacts": [
                    " modify application data",
                    " read application data"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "283",
            "value": {
                "id": "283",
                "name": "Unverified Ownership",
                "description": "The product does not properly verify that a critical resource is owned by the proper entity.",
                "extended_description": "",
                "child_of": [
                    "282"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " gain privileges or assume identity"
                ],
                "con_note": " attacker could gain unauthorized access system resource .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "410",
            "value": {
                "id": "410",
                "name": "Insufficient Resource Pool",
                "description": "The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",
                "extended_description": " frequently consequence be \" flood \" connection or session .",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " other"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " other"
                ],
                "con_note": " flood often cause crash or other problem denial resource ; be likely example * other * vulnerability , not insufficient resource pool .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "453",
            "value": {
                "id": "453",
                "name": "Insecure Default Variable Initialization",
                "description": "The product, by default, initializes an internal variable with an insecure or less secure value than is possible.",
                "extended_description": "",
                "child_of": [
                    "1188"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " modify application data"
                ],
                "con_note": " attacker could gain access and modify sensitive datum or system information .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "585",
            "value": {
                "id": "585",
                "name": "Empty Synchronized Block",
                "description": "The product contains an empty synchronized block.",
                "extended_description": " empty synchronize block do not actually accomplish synchronization and may indicate troubled section code . empty synchronize block can occur code no long need synchronize block be comment out remove synchronize block .",
                "child_of": [
                    "1071"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " other"
                ],
                "con_note": " empty synchronized block will wait else be use synchronizer be specify . may be part desire behavior , have not protect subsequent code place synchronize block , be stop else modify be be wait run subsequent code .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "796",
            "value": {
                "id": "796",
                "name": "Only Filtering Special Elements Relative to a Marker",
                "description": "The product receives data from an upstream component, but only accounts for special elements positioned relative to a marker (e.g. \"at the beginning/end of a string; the second argument\"), thereby missing remaining special elements that may exist before sending it to a downstream component.",
                "extended_description": "",
                "child_of": [
                    "795"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1259",
            "value": {
                "id": "1259",
                "name": "Improper Restriction of Security Token Assignment",
                "description": "The System-On-A-Chip (SoC) implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens are improperly protected.",
                "extended_description": " systems - - a - chip ( integrated circuit and hardware engine ) implement security tokens to differentiate and identify action originate which agent . action may be one directive : ' read ' , ' write ' , ' program ' , ' reset ' , ' fetch ' , ' compute ' , etc . security tokens be assign agent system be capable generate action or receive action agent . multiple security tokens may be assign agent and may be unique base agent 's trust level or allow privilege . security tokens be integral maintenance security soc , need to be protect properly . common weakness afflict security tokens be improperly restrict assignment trust component . consequently , improperly protect security token may be able to be program malicious agent ( i.e. , security token be mutable ) to spoof action originate trust agent . \n\t\t\t",
                "child_of": [
                    "284"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " modify files or directory",
                    " execute unauthorized code or command",
                    " bypass protection mechanism",
                    " gain privileges or assume identity",
                    " modify memory",
                    " modify memory",
                    " dos : crash , exit , or restart"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1064",
            "value": {
                "id": "1064",
                "name": "Invokable Control Element with Signature Containing an Excessive Number of Parameters",
                "description": "The product contains a function, subroutine, or method whose signature has an unnecessarily large number of parameters/arguments.",
                "extended_description": " issue make more difficult to understand and/or maintain product , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability . interpretation \" large number parameter . \" may vary product or developer , cisq recommend default maximum 7 parameter / argument .",
                "child_of": [
                    "1120"
                ],
                "con_scope": [
                    " other"
                ],
                "con_impacts": [
                    " reduce maintainability"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1099",
            "value": {
                "id": "1099",
                "name": "Inconsistent Naming Conventions for Identifiers",
                "description": "The product's code, documentation, or other artifacts do not consistently use the same naming conventions for variables, callables, groups of related callables, I/O capabilities, data types, file names, or similar types of elements.",
                "extended_description": " issue make more difficult to understand and/or maintain product inconsistency , indirectly affect security make more difficult or time - consume to find and/or fix vulnerability .   also might make easy to introduce vulnerability .",
                "child_of": [
                    "1078"
                ],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1280",
            "value": {
                "id": "1280",
                "name": "Access Control Check Implemented After Asset is Accessed",
                "description": "A product's hardware-based access control check occurs after the asset has been accessed.",
                "extended_description": " product implement hardware - base access control check . asset should be accessible only check be successful . , however , operation be not atomic and asset be access check be complete , security system may be compromise .",
                "child_of": [
                    "696",
                    "284"
                ],
                "con_scope": [
                    " access control",
                    " confidentiality",
                    " integrity"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " modify application data",
                    " read application data",
                    " gain privileges or assume identity",
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "831",
            "value": {
                "id": "831",
                "name": "Signal Handler Function Associated with Multiple Signals",
                "description": "The product defines a function that is used as a handler for more than one signal.",
                "extended_description": " sometimes intentional and safe , when same function be use to handle multiple signal , race condition could occur function use state outside local declaration , such global variable or non - reentrant function , or have side effect . attacker could send one signal invoke handler function ; many oses , will typically prevent same signal invoke handler again , least handler function have complete execution . however , attacker could then send different signal be associate same handler function . could interrupt original handler function be still execute . be share state , then state could be corrupt . can lead variety potential consequence depend context , include denial service and code execution . rarely - explore possibility arise when signal handler be only design to be execute once ( at all ) . send multiple signal , attacker could invoke function more once . may generate extra , unintended side effect . race condition might not even be necessary ; attacker could send one signal , wait be handle , then send other signal .",
                "child_of": [
                    "364"
                ],
                "con_scope": [
                    " availability",
                    " integrity",
                    " confidentiality",
                    " access control",
                    " other"
                ],
                "con_impacts": [
                    " dos : crash , exit , or restart",
                    " execute unauthorized code or command",
                    " read application data",
                    " gain privileges or assume identity",
                    " bypass protection mechanism",
                    " varie context"
                ],
                "con_note": " most common consequence will be corruption state product , possibly lead crash or exit . however , signal handler be operate state variable security relevant library or protection mechanism , consequence can be far more severe , include protection mechanism bypass , privilege escalation , or information exposure .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "549",
            "value": {
                "id": "549",
                "name": "Missing Password Field Masking",
                "description": "The product does not mask passwords during entry, increasing the potential for attackers to observe and capture passwords.",
                "extended_description": "",
                "child_of": [
                    "522"
                ],
                "con_scope": [
                    " access control"
                ],
                "con_impacts": [
                    " bypass protection mechanism"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "913",
            "value": {
                "id": "913",
                "name": "Improper Control of Dynamically-Managed Code Resources",
                "description": "The product does not properly restrict reading from or writing to dynamically-managed code resources such as variables, objects, classes, attributes, functions, or executable instructions or statements.",
                "extended_description": " many language offer powerful feature allow programmer to dynamically create or modify exist code , or resource use code such variable and object . feature can offer significant flexibility and reduce development time , can be extremely dangerous attacker can directly influence code resource unexpected way .",
                "child_of": [
                    "664"
                ],
                "con_scope": [
                    " integrity",
                    " other",
                    " integrity"
                ],
                "con_impacts": [
                    " execute unauthorized code or command",
                    " varie context",
                    " alter execution logic"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "217",
            "value": {
                "id": "217",
                "name": "DEPRECATED: Failure to Protect Stored Data from Modification",
                "description": "This entry has been deprecated because it incorporated and confused multiple weaknesses. The issues formerly covered in this entry can be found atCWE-766andCWE-767.",
                "extended_description": "",
                "child_of": [],
                "con_scope": [],
                "con_impacts": [],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1303",
            "value": {
                "id": "1303",
                "name": "Non-Transparent Sharing of Microarchitectural Resources",
                "description": "Hardware structures shared across execution contexts (e.g., caches and branch predictors) can violate the expected architecture isolation between contexts.",
                "extended_description": " modern processor use technique such - - order execution , speculation , prefetching , datum forwarding , and cache to increase performance . detail implementation technique be hide programmer 's view . be problematic when hardware implementation technique result resource be share supposedly isolated context . contention share resource different context open covert channel allow malicious program execute one context to recover information context . example share micro - architectural resource have be use to leak information contexts be cache , branch prediction logic , and load or store buffer . speculative and out - - order execution provide attacker increase control data be leak covert channel . extent resource sharing contexts design microarchitecture be undocumente , be extremely difficult to ensure system asset be protect disclosure .",
                "child_of": [
                    "1189",
                    "203"
                ],
                "con_scope": [
                    " confidentiality"
                ],
                "con_impacts": [
                    " read application data",
                    " read memory"
                ],
                "con_note": " microarchitectural side - channel have be use to leak specific information such cryptographic key , and address space layout randomization ( alsr ) offset as well arbitrary memory .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "554",
            "value": {
                "id": "554",
                "name": "ASP.NET Misconfiguration: Not Using Input Validation Framework",
                "description": "The ASP.NET application does not use an input validation framework.",
                "extended_description": "",
                "child_of": [
                    "1173"
                ],
                "con_scope": [
                    " integrity"
                ],
                "con_impacts": [
                    " unexpected state"
                ],
                "con_note": " unchecked input lead cross - site scripting , process control , and sql injection vulnerability , other .",
                "alt_term": [],
                "alt_desc": []
            }
        },
        {
            "name": "1299",
            "value": {
                "id": "1299",
                "name": "Missing Protection Mechanism for Alternate Hardware Interface",
                "description": "The lack of protections on alternate paths to access control-protected assets (such as unprotected shadow registers and other external facing unguarded interfaces) allows an attacker to bypass existing protections to the asset that are only performed against the primary path.",
                "extended_description": " asset chip might have access - control \n                     protection one interface . however , path \n                     asset be not protect , attacker might compromise \n                     asset alternate path . alternate path \n                     could be shadow or mirror register ip \n                     core , or could be path other external - face \n                     interface ip core or soc.consider soc various interface such uart , \n                     smbus , pcie , usb , etc . access control be implement \n                     soc internal register only pcie interface , then \n                     attacker could still modify soc internal register \n                     alternate path come interface such \n                     uart , smbus , usb , etc . alternatively , attacker might be able to bypass \n                     exist protection exploit unprotected , shadow \n                     register . shadow register and mirror register typically \n                     refer register can be access multiple \n                     address . write or read aliase / mirror \n                     address have same effect write address \n                     main register . be typically implement \n                     ip core or soc to temporarily hold certain datum . datum \n                     will later be update main register , and \n                     register will be synch . shadow register be not \n                     access - protect , attacker could simply initiate \n                     transaction shadow register and compromise system \n                     security .",
                "child_of": [
                    "420",
                    "288"
                ],
                "con_scope": [
                    " confidentiality",
                    " integrity",
                    " availability",
                    " access control"
                ],
                "con_impacts": [
                    " modify memory",
                    " read memory",
                    " dos : resource consumption ( other )",
                    " execute unauthorized code or command",
                    " gain privileges or assume identity",
                    " alter execution logic",
                    " bypass protection mechanism",
                    " quality degradation"
                ],
                "con_note": "",
                "alt_term": [],
                "alt_desc": []
            }
        }
    ]
}